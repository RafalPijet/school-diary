{"version":3,"sources":["components/common/ModalAreYouSure/ModalAreYouSure.js","components/common/TablePagination/TablePagination.js","components/common/SelectItem/SelectItemStyle.js","components/common/SelectItem/SelectItem.js","components/features/ParentItemCollapse/ParentItemCollapseStyle.js","components/features/ParentItemCollapse/ParentItemCollapse.js","components/features/ParentItemCollapse/ParentItemCollapseContainer.js","components/features/ParentItem/ParentItemStyle.js","components/features/ParentItem/ParentItem.js","components/features/ParentsHandling/ParentsHandlingStyle.js","components/features/ParentsHandling/ParentsHandling.js","components/features/ParentsHandling/ParentsHandlingContainer.js","components/pages/Parents/Parents.js"],"names":["Transition","React","forwardRef","props","ref","direction","useStyles","makeStyles","theme","buttonRemove","color","palette","action","light","ModalAreYouSure","isOpen","isConfirm","description","otherProps","classes","open","TransitionComponent","onClose","keepMounted","aria-labelledby","aria-describedby","id","className","onClick","root","flexShrink","marginLeft","spacing","TablePagination","useTheme","count","page","rowsPerPage","onChangePage","event","disabled","aria-label","Math","ceil","max","componentStyle","display","alignItems","backgroundColor","secondary","dark","padding","style","smallSize","formControl","margin","minWidth","addButton","removeButton","tooltip","progress","cursor","SelectItem","list","selectName","buttonName","confirmSelect","isDisabled","isAdd","parentId","useState","selectedItem","setSelectedItem","useEffect","Paper","variant","clsx","Autocomplete","value","renderInput","params","TextField","label","getOptionLabel","student","lastName","firstName","options","width","paddingLeft","size","onChange","e","changeHandling","Tooltip","title","arrow","placement","Fade","TransitionProps","timeout","IconButton","justifyContent","button","primary","info","height","overflow","second","fontSize","baseSize","spinner","ParentItemCollapse","parent","allStudents","updateUser","updateStudent","request","deleteParent","studentsWithoutParent","setStudentsWithoutParent","isModalOpen","setIsModalOpen","students","map","parentStudentsId","setParentStudentsId","freeStudents","filter","includes","getNewStudentForParent","a","data","studentName","parentName","removeStudentFromParent","item","adding","Spinner","length","i","key","Typography","birthDate","substring","isDelete","forEach","connect","state","getAllStudents","getRequest","dispatch","studentsList","updateUserRequest","updateStudentRequest","deleteParentRequest","select","selected","fontWeight","ParentItem","collapseHandling","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","Grid","container","lg","align","telephone","Link","href","email","ExpansionPanelDetails","content","flexDirection","footer","marginBottom","noFull","ParentsHandling","loadParents","loadParent","loadStudents","loadParentName","parents","parentsName","resetRequest","clearParents","clearStudents","clearParentsName","alertSuccess","setAlertSuccess","available","clearAvailable","selectedParent","setSelectedParent","setPage","isReady","setReady","isSearch","setIsSearch","isLocation","setIsLocation","location","useLocation","pathname","pending","index","working","TableContainer","component","hidden","name","handleSearch","Table","TableFooter","TableRow","rowsPerPageOptions","colSpan","SelectProps","inputProps","native","newPage","ActionsComponent","Alert","isOpenAlert","error","message","handleCloseHandling","getParents","getAlertSuccess","getUsersName","getAvailable","itemsPerPage","loadParentsRequestWithRange","loadParentByIdRequest","getAllStudentsRequest","status","getUsersNameRequest","loadAllStudents","loadUsersName","setAvailable","Parents","PageTitle"],"mappings":"uMAWMA,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAAC,IAAD,eAAOC,UAAU,KAAKD,IAAKA,GAASD,OAGzCG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,aAAc,CACVC,MAAOF,EAAMG,QAAQC,OAAOC,WA0CrBC,IAtCS,SAAAX,GAAU,IACvBY,EAAiDZ,EAAjDY,OAAQC,EAAyCb,EAAzCa,UAAWC,EAA8Bd,EAA9Bc,YAAgBC,EADb,YAC2Bf,EAD3B,sCAEvBgB,EAAUb,IAEhB,OACI,6BACI,kBAAC,IAAD,eACIc,KAAML,EACNM,oBAAqBrB,EACrBsB,QAAS,kBAAMN,GAAU,IACzBO,aAAW,EACXC,kBAAgB,2BAChBC,mBAAiB,kCACbP,GAEJ,kBAAC,IAAD,CAAaQ,GAAG,4BAAhB,iBAGA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmBA,GAAG,kCACjBT,IAGT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQU,UAAWR,EAAQV,aAAcmB,QAAS,kBAAMZ,GAAU,KAAlE,UACA,kBAAC,IAAD,CAAQN,MAAM,UAAUkB,QAAS,kBAAMZ,GAAU,KAAjD,e,iCC9CpB,sHASMV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqB,KAAM,CACFC,WAAY,EACZC,WAAYvB,EAAMwB,QAAQ,UA8DnBC,IA1DS,SAAA9B,GACpB,IAAMgB,EAAUb,IACVE,EAAQ0B,cACNC,EAA2ChC,EAA3CgC,MAAOC,EAAoCjC,EAApCiC,KAAMC,EAA8BlC,EAA9BkC,YAAaC,EAAiBnC,EAAjBmC,aAkBlC,OACI,yBAAKX,UAAWR,EAAQU,MACpB,kBAAC,IAAD,CACID,QAnBuB,SAACW,GAChCD,EAAaC,EAAO,IAmBZC,SAAmB,IAATJ,EACVK,aAAW,cAEU,QAApBjC,EAAMH,UAAsB,kBAAC,IAAD,MAAmB,kBAAC,IAAD,OAEpD,kBAAC,IAAD,CAAYuB,QArBU,SAACW,GAC3BD,EAAaC,EAAOH,EAAO,IAoBqBI,SAAmB,IAATJ,EAAYK,aAAW,iBACpD,QAApBjC,EAAMH,UAAsB,kBAAC,IAAD,MAAyB,kBAAC,IAAD,OAE1D,kBAAC,IAAD,CACIuB,QArBkB,SAACW,GAC3BD,EAAaC,EAAOH,EAAO,IAqBnBI,SAAUJ,GAAQM,KAAKC,KAAKR,EAAQE,GAAe,EACnDI,aAAW,aAEU,QAApBjC,EAAMH,UAAsB,kBAAC,IAAD,MAAwB,kBAAC,IAAD,OAEzD,kBAAC,IAAD,CACIuB,QAxBsB,SAACW,GAC/BD,EAAaC,EAAOG,KAAKE,IAAI,EAAGF,KAAKC,KAAKR,EAAQE,GAAe,KAwBzDG,SAAUJ,GAAQM,KAAKC,KAAKR,EAAQE,GAAe,EACnDI,aAAW,aAEU,QAApBjC,EAAMH,UAAsB,kBAAC,IAAD,MAAoB,kBAAC,IAAD,U,2WClClDwC,EAzBQ,SAAArC,GAAK,MAAK,CAC7BqB,KAAM,CACFiB,QAAS,OACTC,WAAY,SACZC,gBAAiBxC,EAAMG,QAAQsC,UAAUC,KACzCC,QAAQ,GAAD,OAAKC,IAAMC,UAAX,OAEXC,YAAa,CACTC,OAAQ/C,EAAMwB,QAAQ,GACtBwB,SAAU,KAEdC,UAAW,CACP/C,MAAOF,EAAMG,QAAQC,OAAOsC,MAEhCQ,aAAc,CACVhD,MAAOF,EAAMG,QAAQC,OAAOC,OAEhC8C,QAAS,CACLX,gBAAiBxC,EAAMG,QAAQsC,UAAUpC,OAE7C+C,SAAU,CACNC,OAAQ,cCVVvD,EAAYC,aAAW,SAAAC,GAAK,OAAIqC,EAAerC,MAmEtCsD,EAjEI,SAAA3D,GAAU,IAClB4D,EAA4E5D,EAA5E4D,KAAMC,EAAsE7D,EAAtE6D,WAAYC,EAA0D9D,EAA1D8D,WAAYC,EAA8C/D,EAA9C+D,cAAeC,EAA+BhE,EAA/BgE,WAAYC,EAAmBjE,EAAnBiE,MAAOC,EAAYlE,EAAZkE,SAD/C,EAEgBC,mBAAS,MAFzB,mBAEjBC,EAFiB,KAEHC,EAFG,KAGlBrD,EAAUb,IAEhBmE,qBAAU,WAEFN,GACAK,EAAgB,QAErB,CAACL,IAUJ,OACI,kBAACO,EAAA,EAAD,CAAOC,QAAQ,WAAWhD,UAAWiD,YAAKzD,EAAQU,KAAMsC,GAAchD,EAAQyC,WAC1E,kBAACiB,EAAA,EAAD,CACIrC,SAAU2B,EACVzC,GAAI2C,EACJS,MAAOP,EACPQ,YAAa,SAAAC,GAAM,OAAI,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAOlB,MACrDmB,eAAgB,SAAAC,GAAO,gBAAOA,EAAQC,SAAf,YAA2BD,EAAQE,YAC1DC,QAASxB,EACTX,MAAO,CAACoC,MAAO,IAAKC,YAAa,QACjCC,KAAK,QACLC,SAAU,SAACC,EAAGd,GAAJ,OAnBC,SAAAA,GACnBN,EAAgBM,GAkBgBe,CAAef,MAE3C,kBAACgB,EAAA,EAAD,CACIC,MAAO9B,EACP+B,OAAK,EACL7E,QAAS,CAACwC,QAASxC,EAAQwC,SAC3BsC,UAAU,MACV5E,oBAAqB6E,IACrBC,gBAAiB,CAACC,QAAS,MAE3B,0BAAMzE,UAAWwC,EAAahD,EAAQyC,SAAW,IAC5C,kBAACyC,EAAA,EAAD,CACI1E,UAAWyC,EAAQjD,EAAQsC,UAAYtC,EAAQuC,aAC/ClB,SAAU2B,GAA+B,OAAjBI,EACxB9B,aAAYwB,EACZrC,QA9BE,WACnBsC,EAAcK,KA8BDH,EAAQ,kBAAC,IAAD,MAAa,kBAAC,IAAD,W,2BCzB3BvB,EAnCQ,SAAArC,GAAK,MAAK,CAC7BqB,KAAM,CACF2D,MAAO,OACP1C,QAAS,OACTwD,eAAgB,gBAChBvD,WAAY,UAEhBwD,OAAQ,CACJ7F,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BmC,gBAAiBxC,EAAMG,QAAQ6F,QAAQ3F,OAE3C4F,KAAM,CACFzD,gBAAiBxC,EAAMG,QAAQsC,UAAUC,KACzCsC,MAAO,QACPkB,OAAQ,OACRvD,QAAS3C,EAAMwB,QAAQ,GACvB2E,SAAU,QAEdC,OAAQ,CACJC,SAAUzD,IAAM0D,SAChBpG,MAAOF,EAAMG,QAAQ6F,QAAQ3F,OAEjC8C,QAAS,CACLX,gBAAiBxC,EAAMG,QAAQsC,UAAUpC,OAE7CkG,QAAS,CACLjE,QAAS,OACTwD,eAAgB,SAChBvD,WAAY,UAEhBa,SAAU,CACNC,OAAQ,cCnBVvD,EAAYC,aAAW,SAAAC,GAAK,OAAIqC,EAAerC,MAwItCwG,EAtIY,SAAA7G,GAAU,IAC1B8G,EAA+E9G,EAA/E8G,OAAQC,EAAuE/G,EAAvE+G,YAAaC,EAA0DhH,EAA1DgH,WAAYC,EAA8CjH,EAA9CiH,cAAeC,EAA+BlH,EAA/BkH,QAASC,EAAsBnH,EAAtBmH,aAAclF,EAAQjC,EAARiC,KAD9C,EAG0BkC,mBAAS,IAHnC,mBAGzBiD,EAHyB,KAGFC,EAHE,OAIMlD,oBAAS,GAJf,mBAIzBmD,EAJyB,KAIZC,EAJY,OAKgBpD,mBAAS2C,EAAOU,SAASC,KAAI,SAAAxC,GAAO,OAAIA,EAAQ1D,OALhE,mBAKzBmG,EALyB,KAKPC,EALO,KAM1B3G,EAAUb,IAEhBmE,qBAAU,WACNqD,EAAoBb,EAAOU,SAASC,KAAI,SAAAxC,GAAO,OAAIA,EAAQ1D,SAC5D,CAACuF,EAAOU,WAEXlD,qBAAU,WACN,IAAIsD,EAAeb,EAAYc,QAAO,SAAA5C,GAAO,OAAKyC,EAAiBI,SAAS7C,EAAQ1D,OACpF8F,EAAyBO,KAE1B,CAACb,EAAaD,EAAOU,SAAUE,IAElC,IAAMK,EAAsB,uCAAG,WAAM9C,GAAN,iBAAA+C,EAAA,6DACvBC,EAAO,CACPC,YAAY,GAAD,OAAKjD,EAAQC,SAAb,YAAyBD,EAAQE,WAC5CgD,WAAW,GAAD,OAAKrB,EAAO5B,SAAZ,YAAwB4B,EAAO3B,WACzClB,OAAO,GAEPuD,EANuB,sBAMRV,EAAOU,UANC,CAMSvC,IANT,SAOrB+B,EAAWF,EAAOvF,GAAIiG,EAAUS,GAPX,OAQ3BhB,EAAchC,EAAQ1D,GAAIuF,GAAQ,GARP,2CAAH,sDAWtBsB,EAAuB,uCAAG,WAAMnD,GAAN,iBAAA+C,EAAA,6DACxBC,EAAO,CACPC,YAAY,GAAD,OAAKjD,EAAQC,SAAb,YAAyBD,EAAQE,WAC5CgD,WAAW,GAAD,OAAKrB,EAAO5B,SAAZ,YAAwB4B,EAAO3B,WACzClB,OAAO,GAEPuD,EAAWV,EAAOU,SAASK,QAAO,SAAAQ,GAAI,OAAIA,EAAK9G,KAAO0D,EAAQ1D,MANtC,SAOtByF,EAAWF,EAAOvF,GAAIiG,EAAUS,GAPV,OAQ5BhB,EAAchC,EAAQ1D,GAAIuF,GAAQ,GARN,2CAAH,sDAwB7B,OACI,oCACI,yBAAKtF,UAAWR,EAAQU,MACpB,kBAACiE,EAAA,EAAD,CACItD,SAAU6E,EAAQoB,OAClB1C,MAAM,gBACNC,OAAK,EACL7E,QAAS,CAACwC,QAASxC,EAAQwC,SAC3BsC,UAAU,YACV5E,oBAAqB6E,IACrBC,gBAAiB,CAACC,QAAS,MAE/B,0BAAMzE,UAAW0F,EAAQoB,OAAStH,EAAQyC,SAAW,IACjD,kBAACyC,EAAA,EAAD,CACI7D,SAAU6E,EAAQoB,OAClBhG,aAAW,SACXd,UAAWR,EAAQoF,OACnB3E,QAAS,kBAAM8F,GAAe,KAElC,kBAAC,IAAD,CAAYb,SAAS,aAKzB,kBAAC,EAAD,CACIxC,SAAQ,UAAK4C,EAAOvF,GAAZ,QACRqC,KAAMwD,EACNnD,OAAO,EACPJ,WAAW,sBACXC,WAAW,SACXE,WAAYkD,EAAQoB,OACpBvE,cAAegE,IAEnB,kBAAC,EAAD,CACI7D,SAAU4C,EAAOvF,GACjBqC,KAAMkD,EAAOU,SACbvD,OAAO,EACPJ,WAAW,oBACXC,WAAW,WACXC,cAAeqE,EACfpE,WAAYkD,EAAQoB,SACxB,kBAAC/D,EAAA,EAAD,CAAOC,QAAQ,WAAWhD,UAAWiD,YAAKzD,EAAQsF,KAAMY,EAAQoB,QAAUtH,EAAQ4F,UAC7EM,EAAQoB,OAAS,kBAACC,EAAA,EAAD,MACdzB,EAAOU,SAASgB,OAAS1B,EAAOU,SAASC,KAAI,SAACxC,EAASwD,GACnD,OACI,yBAAKC,IAAKD,GACN,kBAACE,EAAA,EAAD,CAAYnH,UAAWR,EAAQyF,OAAQ9D,QAAQ,UAA/C,UACQ8F,EAAI,EADZ,OAGA,kBAACE,EAAA,EAAD,CAAYnE,QAAQ,YAAY7B,QAAQ,UAAxC,UACQsC,EAAQE,UADhB,YAC6BF,EAAQC,WAErC,kBAACyD,EAAA,EAAD,CAAYnH,UAAWR,EAAQyF,OAAQ9D,QAAQ,UAA/C,WACSsC,EAAQ2D,UAAUC,UAAU,EAAG,IADxC,aACgD5D,EAAQzD,gBAI/D,kBAACmH,EAAA,EAAD,CAAYnE,QAAQ,aAApB,wCAGjB,kBAAC7D,EAAA,EAAD,CACIC,OAAQ0G,EACRzG,UA3EU,SAAAiI,GAClBvB,GAAe,GAEXuB,IACIhC,EAAOU,SAASgB,QAChB1B,EAAOU,SAASuB,SAAQ,SAAA9D,GACpBgC,EAAchC,EAAQ1D,GAAIuF,GAAQ,MAG1CK,EAAaL,EAAOvF,GAAIU,KAmEpBnB,YAAW,qDAAgDgG,EAAO5B,SAAvD,YAAmE4B,EAAO3B,UAA1E,S,uBCnHZ6D,eAXS,SAAAC,GAAK,MAAK,CAC9BlC,YAAamC,YAAeD,GAC5B/B,QAASiC,YAAWF,OAGG,SAAAG,GAAQ,MAAK,CACpCpC,WAAY,SAACzF,EAAI8H,EAAcpB,GAAnB,OAA4BmB,EAASE,YAAkB/H,EAAI8H,EAAcpB,KACrFhB,cAAe,SAAC1F,EAAIuF,EAAQ7C,GAAb,OAAuBmF,EAASG,YAAqBhI,EAAIuF,EAAQ7C,KAChFkD,aAAc,SAAC5F,EAAIU,GAAL,OAAcmH,EAASI,YAAoBjI,EAAIU,QAGlD+G,CAA6CnC,GCA7CnE,EAjBQ,SAAArC,GAAK,MAAK,CAC7BqB,KAAM,CACF2D,MAAO,OACPjC,OAAO,GAAD,OAAK/C,EAAMwB,QAAQ,IAAnB,SAEVwG,KAAM,CACFxF,gBAAiBxC,EAAMG,QAAQsC,UAAUC,MAE7C0G,OAAQ,CACJpE,MAAO,OACPjC,OAAO,GAAD,OAAK/C,EAAMwB,QAAQ,GAAnB,SAEV6H,SAAU,CACNC,WAAY,SCJdxJ,GAAYC,aAAW,SAAAC,GAAK,OAAIqC,EAAerC,MAuGtCuJ,GArGI,SAAA5J,GAAU,IAClB8G,EAAmD9G,EAAnD8G,OAAQ2B,EAA2CzI,EAA3CyI,EAAGrE,EAAwCpE,EAAxCoE,aAAcyF,EAA0B7J,EAA1B6J,iBAAkB5H,EAAQjC,EAARiC,KAC5CjB,EAAUb,KAEhBmE,qBAAU,cACP,CAACF,IAMJ,OACI,yBAAK5C,UAAW4C,IAAiBqE,EAAIzH,EAAQyI,OAASzI,EAAQU,MAC1D,kBAACoI,EAAA,EAAD,CAAgBtI,UAAWR,EAAQqH,KAAM0B,SAAU3F,IAAiBqE,EAAGjD,SANvD,WACpBqE,EAAiBpB,KAMT,kBAACuB,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OAC/B,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACInH,UAAW4C,IAAiBqE,EAAIzH,EAAQ0I,SAAW,GACnDW,MAAM,OACN7F,QAAQ,YACRjE,MAAM,WACLkI,EAAI,IAGZrE,IAAiBqE,EACb,kBAACyB,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACZ,kBAACzB,EAAA,EAAD,CACInH,UAAWR,EAAQ0I,SACnBW,MAAM,SACN7F,QAAQ,YACRjE,MAAM,WAJV,UAKQuG,EAAO5B,SALf,YAK2B4B,EAAO3B,aAGrC,oCACO,kBAAC+E,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACI0B,MAAM,OACN7F,QAAQ,YACRjE,MAAM,WACLuG,EAAO5B,SAASsD,OAAS,GAAzB,UAAiC1B,EAAO5B,SAAS2D,UAAU,EAAG,IAA9D,OACG/B,EAAO5B,WAGnB,kBAACgF,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACI0B,MAAM,OACN7F,QAAQ,YACRjE,MAAM,WACLuG,EAAO3B,UAAUqD,OAAS,GAA1B,UAAkC1B,EAAO3B,UAAU0D,UAAU,EAAG,IAAhE,OACG/B,EAAO3B,aAK/B,kBAAC+E,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACInH,UAAW4C,IAAiBqE,EAAIzH,EAAQ0I,SAAW,GACnDW,MAAM,SACN7F,QAAQ,YACRjE,MAAM,WACLuG,EAAOwD,YAGhB,kBAACJ,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACInH,UAAW4C,IAAiBqE,EAAIzH,EAAQ0I,SAAW,GACnDW,MAAM,SACN7F,QAAQ,YACRjE,MAAM,WACN,kBAACgK,EAAA,EAAD,CAAMC,KAAI,iBAAY1D,EAAO2D,QAAU3D,EAAO2D,SAGtD,kBAACP,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CACInH,UAAW4C,IAAiBqE,EAAIzH,EAAQ0I,SAAW,GACnDW,MAAM,SACN7F,QAAQ,YACRjE,MAAM,WACLuG,EAAOU,SAASgB,WAKjC,kBAACkC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAoBzI,KAAMA,EAAM6E,OAAQA,Q,SCnE7CpE,GA5BQ,SAAArC,GAAK,MAAK,CAC7BqB,KAAM,CACFmB,gBAAiBxC,EAAMG,QAAQsC,UAAUpC,OAE7C4F,KAAM,CACFtD,QAAQ,GAAD,OAAKC,IAAMC,UAAX,cAEXyH,QAAS,CACLxE,eAAgB,gBAChByE,cAAe,SACf5H,QAAQ,KAAD,OAAOC,IAAM0D,UACpBJ,OAAQ,SAEZsE,OAAQ,CACJlI,QAAS,OACTwD,eAAgB,gBAChBvD,WAAY,SACZ2D,OAAQ,OACRuE,aAAc7H,IAAMC,WAExB0D,QAAS,CACLT,eAAgB,qBAEpB4E,OAAQ,CACJ5E,eAAgB,2B,UCHlBhG,GAAYC,aAAW,SAAAC,GAAK,OAAIqC,GAAerC,MAgMtC2K,GA9LS,SAAAhL,GAAU,IAE1BiL,EAgBAjL,EAhBAiL,YACAC,EAeAlL,EAfAkL,WACAC,EAcAnL,EAdAmL,aACAC,EAaApL,EAbAoL,eACAlE,EAYAlH,EAZAkH,QACAmE,EAWArL,EAXAqL,QACAC,EAUAtL,EAVAsL,YACAC,EASAvL,EATAuL,aACAxE,EAQA/G,EARA+G,YACAyE,EAOAxL,EAPAwL,aACAC,EAMAzL,EANAyL,cACAC,EAKA1L,EALA0L,iBACAC,EAIA3L,EAJA2L,aACAC,EAGA5L,EAHA4L,gBACAC,EAEA7L,EAFA6L,UACAC,EACA9L,EADA8L,eAjByB,EAmBW3H,mBAAS,GAnBpB,mBAmBtBC,EAnBsB,KAmBRC,EAnBQ,OAoBeF,mBAAS,MApBxB,mBAoBtB4H,EApBsB,KAoBNC,EApBM,OAqBL7H,mBAAS,GArBJ,mBAqBtBlC,EArBsB,KAqBhBgK,EArBgB,OAsBD9H,oBAAS,GAtBR,mBAsBtB+H,EAtBsB,KAsBbC,EAtBa,OAuBGhI,oBAAS,GAvBZ,mBAuBtBiI,EAvBsB,KAuBZC,EAvBY,OAwBOlI,oBAAS,GAxBhB,oBAwBtBmI,GAxBsB,MAwBVC,GAxBU,MAyBvBvL,GAAUb,KACZqM,GAAWC,cAAcC,SAE7BpI,qBAAU,WAEW,uBAAbkI,IAAqCX,EAAUrD,SAAW8D,KAC1DC,IAAc,GACdpB,IACAU,EAAU9C,SAAQ,SAACV,EAAMI,GAEjBA,EAAI,GAAGyC,EAAW7C,GAAM,OAI/BiD,EAAY9C,QAAWzB,EAAYyB,QAAWqD,EAAUrD,SACzD2C,IACAC,EAAe,YAGfrE,EAAYyB,QAAW0D,GAAYL,EAAUrD,SAC7C2D,GAAS,GACTlB,EAAYhJ,EAAO,EAAG,IAGtBiF,EAAQyF,SAAStI,EAAgB,GAEd,OAAnB0H,GAA2BK,IAAaP,EAAUrD,SAClDyC,EAAYhJ,EAAO,EAAG,GACtBoK,GAAY,MAGjB,CAACtF,EAAYyB,OAAQ6C,EAAQ7C,OAAQvG,EAAMiF,EAAQyF,QAASZ,EAAgBF,EAAUrD,SAEzFlE,qBAAU,WACN,OAAO,WACHiH,IACAC,EAAa,IACbC,EAAc,IACdC,EAAiB,IACjBI,EAAe,OAGpB,IAEH,IAAMjC,GAAmB,SAAA+C,GACrBvI,EAAgBuI,IAsBpB,OACI,kBAACrI,EAAA,EAAD,CAAOC,QAAQ,WAAWhD,UAAWR,GAAQU,MACzC,kBAACwI,EAAA,EAAD,CAAMC,WAAS,EAAC3I,UAAWR,GAAQsF,MAC/B,kBAAC4D,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAYnE,QAAQ,YAAYjE,MAAM,WAAtC,QAEJ,kBAAC2J,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAYnE,QAAQ,YAAYjE,MAAM,WAAtC,cAEJ,kBAAC2J,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAYnE,QAAQ,YAAYjE,MAAM,WAAtC,eAEJ,kBAAC2J,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAY1F,MAAO,CAACqC,YAAa,QAASd,QAAQ,YAAYjE,MAAM,WAApE,UAEJ,kBAAC2J,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAY0B,MAAM,SAAS7F,QAAQ,YAAYjE,MAAM,WAArD,UAEJ,kBAAC2J,EAAA,EAAD,CAAM7B,MAAI,EAAC+B,GAAI,GACX,kBAACzB,EAAA,EAAD,CAAY1F,MAAO,CAACqC,YAAa,QAASd,QAAQ,YAAYjE,MAAM,WAApE,cAGR,kBAAC2J,EAAA,EAAD,CAAMC,WAAS,EAAC3I,UAAWiD,YAAKzD,GAAQ2J,SACnCzD,EAAQ2F,UAAY3F,EAAQyF,SAAWtB,EAAQ7C,OAAS,EAAIxH,GAAQ+J,OAAS,GAC7E7D,EAAQyF,SAAWzF,EAAQ2F,QAAW7L,GAAQ4F,QAAU,KACxDM,EAAQyF,SAAWzF,EAAQ2F,QAAU,kBAACtE,EAAA,EAAD,MAClC8C,EAAQ5D,KAAI,SAACX,EAAQ2B,GACjB,OAAO,kBAAC,GAAD,CACHA,EAAGA,EACHC,IAAKD,EACL3B,OAAQA,EACR7E,KAAMA,EACNmC,aAAcA,EACdyF,iBAAkBA,SAIlC,kBAACiD,EAAA,EAAD,CAAgBtL,UAAWR,GAAQ6J,OAAQkC,UAAWxI,KAClD,kBAACG,EAAA,EAAD,CACIsI,OAAQ9F,EAAQ2F,SAAWP,GAC3B/K,GAAG,gBACHqD,YAAa,SAAAC,GAAM,OAAI,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,oBACpDK,QAASkG,EACTtG,eAAgB,SAAA8B,GAAM,OAAIA,EAAOmG,MACjC1H,KAAK,QACLtC,MAAO,CAACoC,MAAO,IAAKC,YAAa,QACjCE,SAAU,SAACC,EAAGd,GAAJ,OAxDL,SAAAA,GACjBqH,EAAkBrH,GAEJ,OAAVA,IACAuG,EAAWvG,EAAMpD,IAAI,GACrB8K,GAAY,GACZJ,EAAQ,IAkDwBiB,CAAavI,MAEzC,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CACIL,OAAQ9F,EAAQ2F,SAA8B,OAAnBd,GAA2BO,GACtDgB,mBAAoB,CAAC,GACrBC,QAAS,EACTvL,MAAOsJ,EAAY9C,OACnBtG,YAAa,EACbD,KAAMA,EACNuL,YAAa,CACTC,WAAY,CAAC,aAAc,iBAC3BC,QAAQ,GAEZvL,aA7EH,SAACC,EAAOuL,GAC7BxB,GAAS,GACTF,EAAQ0B,IA4EgBC,iBAAkB9L,WAMtC,kBAAC+L,GAAA,EAAD,CACIC,YAA+B,OAAlB5G,EAAQ6G,OAAkBpC,EAAa/K,OACpD4D,QAAS0C,EAAQ6G,MAAQ,QAAU,UACnCC,QAAS9G,EAAQ6G,MAAQ7G,EAAQ6G,MAAQpC,EAAaqC,QACtDC,oBA5Fa,WACrB/G,EAAQ6G,MAAQxC,IAAiBK,GAAgB,EAAO,S,kBChEjD5C,gBATS,SAAAC,GAAK,MAAK,CAC9B/B,QAASiC,YAAWF,GACpBoC,QAAS6C,aAAWjF,GACpBlC,YAAamC,YAAeD,GAC5B0C,aAAcwC,aAAgBlF,GAC9BqC,YAAa8C,aAAanF,GAC1B4C,UAAWwC,aAAapF,OAnBD,SAAAG,GAAQ,MAAK,CACpC6B,YAAa,SAAChJ,EAAMqM,GAAP,OAAwBlF,EAASmF,YAA4BtM,EAAMqM,KAChFpD,WAAY,SAAC3J,EAAI0C,GAAL,OAAemF,EAASoF,YAAsBjN,EAAI0C,KAC9DkH,aAAc,kBAAM/B,EAASqF,gBAC7BrD,eAAgB,SAAAsD,GAAM,OAAItF,EAASuF,YAAoBD,KACvDnD,aAAc,kBAAMnC,EAASmC,gBAC7BC,aAAc,SAAAvD,GAAI,OAAImB,EAAS6B,aAAYhD,KAC3CwD,cAAe,SAAAxD,GAAI,OAAImB,EAASwF,YAAgB3G,KAChDyD,iBAAkB,SAAAzD,GAAI,OAAImB,EAASyF,aAAc5G,KACjD2D,gBAAiB,SAAChL,EAAQoN,GAAT,OAAqB5E,EAASwC,aAAgBhL,EAAQoN,KACvElC,eAAgB,SAAA7D,GAAI,OAAImB,EAAS0F,aAAa7G,QAYnCe,CAA6CgC,ICxB7C+D,UAPC,kBACZ,6BACI,kBAACC,EAAA,EAAD,gBACA,kBAAC,GAAD","file":"static/js/15.4a04766e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    buttonRemove: {\n        color: theme.palette.action.light\n    }\n}));\n\nconst ModalAreYouSure = props => {\n    const {isOpen, isConfirm, description, ...otherProps} = props;\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                TransitionComponent={Transition}\n                onClose={() => isConfirm(false)}\n                keepMounted\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                {...otherProps}\n            >\n                <DialogTitle id='alert-dialog-slide-title'>\n                    Are you sure?\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {description}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button className={classes.buttonRemove} onClick={() => isConfirm(true)}>Delete</Button>\n                    <Button color='primary' onClick={() => isConfirm(false)}>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n};\n\nModalAreYouSure.propTypes = {\n    description: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    isConfirm: PropTypes.func.isRequired\n};\n\nexport default ModalAreYouSure;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nconst TablePagination = props => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n};\n\nTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n};\n\nexport default TablePagination;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: `${style.smallSize} 0`\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    addButton: {\n        color: theme.palette.action.dark\n    },\n    removeButton: {\n        color: theme.palette.action.light\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    progress: {\n        cursor: 'progress'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Paper, TextField} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport Fade from '@material-ui/core/Fade';\nimport componentStyle from \"./SelectItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst SelectItem = props => {\n    const {list, selectName, buttonName, confirmSelect, isDisabled, isAdd, parentId} = props;\n    const [selectedItem, setSelectedItem] = useState(null);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (isDisabled) {\n            setSelectedItem(null)\n        }\n    }, [isDisabled]);\n\n    const changeHandling = value => {\n        setSelectedItem(value)\n    };\n\n    const buttonHandling = () => {\n        confirmSelect(selectedItem)\n    };\n\n    return (\n        <Paper variant='outlined' className={clsx(classes.root, isDisabled && classes.progress)}>\n            <Autocomplete\n                disabled={isDisabled}\n                id={parentId}\n                value={selectedItem}\n                renderInput={params => <TextField {...params} label={selectName}/>}\n                getOptionLabel={student => `${student.lastName} ${student.firstName}`}\n                options={list}\n                style={{width: 240, paddingLeft: '15px'}}\n                size='small'\n                onChange={(e, value) => changeHandling(value)}\n            />\n            <Tooltip\n                title={buttonName}\n                arrow\n                classes={{tooltip: classes.tooltip}}\n                placement='top'\n                TransitionComponent={Fade}\n                TransitionProps={{timeout: 1000}}\n            >\n                <span className={isDisabled ? classes.progress : ''}>\n                     <IconButton\n                         className={isAdd ? classes.addButton : classes.removeButton}\n                         disabled={isDisabled || selectedItem === null}\n                         aria-label={buttonName}\n                         onClick={buttonHandling}>\n                    {isAdd ? <AddIcon/> : <RemoveIcon/>}\n                    </IconButton>\n                </span>\n            </Tooltip>\n        </Paper>\n    )\n};\n\nSelectItem.propTypes = {\n    list: PropTypes.array.isRequired,\n    selectName: PropTypes.string.isRequired,\n    buttonName: PropTypes.string.isRequired,\n    confirmSelect: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n    isAdd: PropTypes.bool.isRequired,\n    parentId: PropTypes.string.isRequired\n};\n\nexport default SelectItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    button: {\n        color: theme.palette.action.light,\n        backgroundColor: theme.palette.primary.light,\n    },\n    info: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: '300px',\n        height: '60px',\n        padding: theme.spacing(1),\n        overflow: 'auto'\n    },\n    second: {\n        fontSize: style.baseSize,\n        color: theme.palette.primary.light\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    spinner: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    progress: {\n        cursor: 'progress'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport SelectItem from \"../../common/SelectItem/SelectItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport {Paper, Typography} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport componentStyle from \"./ParentItemCollapseStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentItemCollapse = props => {\n    const {parent, allStudents, updateUser, updateStudent, request, deleteParent, page} = props;\n\n    const [studentsWithoutParent, setStudentsWithoutParent] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [parentStudentsId, setParentStudentsId] = useState(parent.students.map(student => student.id));\n    const classes = useStyles();\n\n    useEffect(() => {\n        setParentStudentsId(parent.students.map(student => student.id));\n    }, [parent.students]);\n\n    useEffect(() => {\n        let freeStudents = allStudents.filter(student => !parentStudentsId.includes(student.id));\n        setStudentsWithoutParent(freeStudents);\n\n    }, [allStudents, parent.students, parentStudentsId]);\n\n    const getNewStudentForParent = async student => {\n        let data = {\n            studentName: `${student.lastName} ${student.firstName}`,\n            parentName: `${parent.lastName} ${parent.firstName}`,\n            isAdd: true\n        };\n        let students = [...parent.students, student];\n        await updateUser(parent.id, students, data);\n        updateStudent(student.id, parent, true);\n    };\n\n    const removeStudentFromParent = async student => {\n        let data = {\n            studentName: `${student.lastName} ${student.firstName}`,\n            parentName: `${parent.lastName} ${parent.firstName}`,\n            isAdd: false\n        };\n        let students = parent.students.filter(item => item.id !== student.id);\n        await updateUser(parent.id, students, data);\n        updateStudent(student.id, parent, false);\n    };\n\n    const modalHandling = isDelete => {\n        setIsModalOpen(false);\n\n        if (isDelete) {\n            if (parent.students.length) {\n                parent.students.forEach(student => {\n                    updateStudent(student.id, parent, false);\n                })\n            }\n            deleteParent(parent.id, page);\n        }\n    };\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Tooltip\n                    disabled={request.adding}\n                    title='Remove parent'\n                    arrow\n                    classes={{tooltip: classes.tooltip}}\n                    placement='top-start'\n                    TransitionComponent={Fade}\n                    TransitionProps={{timeout: 1000}}\n                >\n                <span className={request.adding ? classes.progress : ''}>\n                    <IconButton\n                        disabled={request.adding}\n                        aria-label='remove'\n                        className={classes.button}\n                        onClick={() => setIsModalOpen(true)}\n                    >\n                    <DeleteIcon fontSize='small'/>\n\n                </IconButton>\n                </span>\n                </Tooltip>\n                <SelectItem\n                    parentId={`${parent.id} add`}\n                    list={studentsWithoutParent}\n                    isAdd={true}\n                    selectName='unassigned students'\n                    buttonName=\"Assign\"\n                    isDisabled={request.adding}\n                    confirmSelect={getNewStudentForParent}\n                />\n                <SelectItem\n                    parentId={parent.id}\n                    list={parent.students}\n                    isAdd={false}\n                    selectName='assigned students'\n                    buttonName='Unassign'\n                    confirmSelect={removeStudentFromParent}\n                    isDisabled={request.adding}/>\n                <Paper variant='outlined' className={clsx(classes.info, request.adding && classes.spinner)}>\n                    {request.adding ? <Spinner/> :\n                        parent.students.length ? parent.students.map((student, i) => {\n                            return (\n                                <div key={i}>\n                                    <Typography className={classes.second} display='inline'>\n                                        {`${i + 1}. `}\n                                    </Typography>\n                                    <Typography variant='subtitle2' display='inline'>\n                                        {`${student.firstName} ${student.lastName}`}\n                                    </Typography>\n                                    <Typography className={classes.second} display='inline'>\n                                        {` ${student.birthDate.substring(0, 10)}, ${student.className}`}\n                                    </Typography>\n                                </div>\n                            )\n                        }) : <Typography variant='subtitle2'>The parent has no student assigned</Typography>}\n                </Paper>\n            </div>\n            <ModalAreYouSure\n                isOpen={isModalOpen}\n                isConfirm={modalHandling}\n                description={`Are you sure you want to delete the parent ${parent.lastName} ${parent.firstName}?`}\n            />\n        </>\n    )\n\n\n};\n\nParentItemCollapse.propTypes = {\n    parent: PropTypes.object.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    updateUser: PropTypes.func.isRequired,\n    updateStudent: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired,\n    deleteParent: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired\n};\n\nexport default ParentItemCollapse;\n","import {connect} from 'react-redux';\nimport ParentItemCollapse from \"./ParentItemCollapse\";\nimport {getAllStudents} from \"../../../redux/actions/studentActions\";\nimport {updateUserRequest, updateStudentRequest, deleteParentRequest} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\n\nconst mapStateToProps = state => ({\n    allStudents: getAllStudents(state),\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateUser: (id, studentsList, data) => dispatch(updateUserRequest(id, studentsList, data)),\n    updateStudent: (id, parent, isAdd) => dispatch(updateStudentRequest(id, parent, isAdd)),\n    deleteParent: (id, page) => dispatch(deleteParentRequest(id, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentItemCollapse);\n","const componentStyle = theme => ({\n    root: {\n        width: '100%',\n        margin: `${theme.spacing(.2)}px 0`\n    },\n    item: {\n        backgroundColor: theme.palette.secondary.dark\n    },\n    select: {\n        width: '100%',\n        margin: `${theme.spacing(1)}px 0`\n    },\n    selected: {\n        fontWeight: '800'\n    }\n});\n\nexport default componentStyle;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Link} from \"@material-ui/core\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ParentItemCollapse from '../ParentItemCollapse/ParentItemCollapseContainer';\nimport componentStyle from \"./ParentItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentItem = props => {\n    const {parent, i, selectedItem, collapseHandling, page} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n    }, [selectedItem]);\n\n    const collapseSetting = () => {\n        collapseHandling(i);\n    };\n\n    return (\n        <div className={selectedItem === i ? classes.select : classes.root}>\n            <ExpansionPanel className={classes.item} expanded={selectedItem === i} onChange={collapseSetting}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                    <Grid container>\n                        <Grid item lg={1}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='left'\n                                variant='subtitle1'\n                                color='primary'>\n                                {i + 1}\n                            </Typography>\n                        </Grid>\n                        {selectedItem === i ?\n                            (<Grid item lg={4}>\n                                <Typography\n                                    className={classes.selected}\n                                    align='center'\n                                    variant='subtitle1'\n                                    color='primary'>\n                                    {`${parent.lastName} ${parent.firstName}`}\n                                </Typography>\n                            </Grid>) :\n                            (<>\n                                    <Grid item lg={2}>\n                                        <Typography\n                                            align='left'\n                                            variant='subtitle1'\n                                            color='primary'>\n                                            {parent.lastName.length > 12 ? `${parent.lastName.substring(0, 13)}...` :\n                                                parent.lastName}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={2}>\n                                        <Typography\n                                            align='left'\n                                            variant='subtitle1'\n                                            color='primary'>\n                                            {parent.firstName.length > 12 ? `${parent.firstName.substring(0, 13)}...` :\n                                                parent.firstName}\n                                        </Typography>\n                                    </Grid>\n                                </>\n                            )}\n                        <Grid item lg={2}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                {parent.telephone}\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={3}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                <Link href={`mailto:${parent.email}`}>{parent.email}</Link>\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={1}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                {parent.students.length}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ParentItemCollapse page={page} parent={parent}/>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    )\n};\n\nParentItem.propTypes = {\n    parent: PropTypes.object.isRequired,\n    i: PropTypes.number.isRequired,\n    selectedItem: PropTypes.number,\n    collapseHandling: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired\n};\n\nexport default ParentItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    info: {\n        padding: `${style.smallSize} 0 0 22px`,\n    },\n    content: {\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        padding: `0 ${style.baseSize}`,\n        height: '515px'\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '52px',\n        marginBottom: style.smallSize\n    },\n    spinner: {\n        justifyContent: 'center !important'\n    },\n    noFull: {\n        justifyContent: 'flex-start !important'\n    }\n});\n\nexport default componentStyle;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {useLocation} from \"react-router\";\nimport {\n    Paper,\n    Grid,\n    Typography,\n    TableContainer,\n    Table,\n    TableFooter,\n    TableRow,\n    TablePagination as MaterialPagination,\n    TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport clsx from \"clsx\";\nimport Spinner from '../../common/Spinner/Spinner';\nimport ParentItem from '../ParentItem/ParentItem';\nimport Alert from \"../../common/Alert/Alert\";\nimport componentStyle from \"./ParentsHandlingStyle\";\nimport TablePagination from \"../../common/TablePagination/TablePagination\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentsHandling = props => {\n    const {\n        loadParents,\n        loadParent,\n        loadStudents,\n        loadParentName,\n        request,\n        parents,\n        parentsName,\n        resetRequest,\n        allStudents,\n        clearParents,\n        clearStudents,\n        clearParentsName,\n        alertSuccess,\n        setAlertSuccess,\n        available,\n        clearAvailable\n    } = props;\n    const [selectedItem, setSelectedItem] = useState(0);\n    const [selectedParent, setSelectedParent] = useState(null);\n    const [page, setPage] = useState(0);\n    const [isReady, setReady] = useState(false);\n    const [isSearch, setIsSearch] = useState(false);\n    const [isLocation, setIsLocation] = useState(false);\n    const classes = useStyles();\n    let location = useLocation().pathname;\n\n    useEffect(() => {\n\n        if (location === '/parents/available' && available.length && !isLocation) {\n            setIsLocation(true);\n            loadStudents();\n            available.forEach((item, i) => {\n\n                if (i < 7) loadParent(item, true);\n            });\n        }\n\n        if (!parentsName.length && !allStudents.length && !available.length) {\n            loadStudents();\n            loadParentName('parent');\n        }\n\n        if (allStudents.length && !isReady && !available.length) {\n            setReady(true);\n            loadParents(page + 1, 7);\n        }\n\n        if (request.pending) setSelectedItem(0);\n\n        if (selectedParent === null && isSearch && !available.length) {\n            loadParents(page + 1, 7);\n            setIsSearch(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allStudents.length, parents.length, page, request.pending, selectedParent, available.length]);\n\n    useEffect(() => {\n        return () => {\n            resetRequest();\n            clearParents([]);\n            clearStudents([]);\n            clearParentsName([]);\n            clearAvailable([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const collapseHandling = index => {\n        setSelectedItem(index);\n    };\n\n    const handleCloseAlert = () => {\n        request.error ? resetRequest() : setAlertSuccess(false, '')\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setReady(false);\n        setPage(newPage);\n    };\n\n    const handleSearch = value => {\n        setSelectedParent(value);\n\n        if (value !== null) {\n            loadParent(value.id, false);\n            setIsSearch(true);\n            setPage(0);\n        }\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container className={classes.info}>\n                <Grid item lg={1}>\n                    <Typography variant='subtitle2' color='primary'>Pos</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography variant='subtitle2' color='primary'>Last name</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography variant='subtitle2' color='primary'>First name</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography style={{paddingLeft: '26px'}} variant='subtitle2' color='primary'>Phone</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography align='center' variant='subtitle2' color='primary'>Email</Typography>\n                </Grid>\n                <Grid item lg={3}>\n                    <Typography style={{paddingLeft: '34px'}} variant='subtitle2' color='primary'>Students</Typography>\n                </Grid>\n            </Grid>\n            <Grid container className={clsx(classes.content,\n                !request.working && !request.pending && parents.length < 7 ? classes.noFull : '',\n                (request.pending || request.working) ? classes.spinner : '')}>\n                {request.pending || request.working ? <Spinner/> :\n                    parents.map((parent, i) => {\n                        return <ParentItem\n                            i={i}\n                            key={i}\n                            parent={parent}\n                            page={page}\n                            selectedItem={selectedItem}\n                            collapseHandling={collapseHandling}\n                        />\n                    })}\n            </Grid>\n            <TableContainer className={classes.footer} component={Paper}>\n                <Autocomplete\n                    hidden={request.working || isLocation}\n                    id='search-parent'\n                    renderInput={params => <TextField {...params} label='Search parent'/>}\n                    options={parentsName}\n                    getOptionLabel={parent => parent.name}\n                    size='small'\n                    style={{width: 300, paddingLeft: '15px'}}\n                    onChange={(e, value) => handleSearch(value)}\n                />\n                <Table>\n                    <TableFooter>\n                        <TableRow>\n                            <MaterialPagination\n                                hidden={request.working || selectedParent !== null || isLocation}\n                                rowsPerPageOptions={[7]}\n                                colSpan={3}\n                                count={parentsName.length}\n                                rowsPerPage={7}\n                                page={page}\n                                SelectProps={{\n                                    inputProps: {'aria-label': 'rows per page'},\n                                    native: true,\n                                }}\n                                onChangePage={handleChangePage}\n                                ActionsComponent={TablePagination}\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n            <Alert\n                isOpenAlert={request.error !== null || alertSuccess.isOpen}\n                variant={request.error ? 'error' : 'success'}\n                message={request.error ? request.error : alertSuccess.message}\n                handleCloseHandling={handleCloseAlert}\n            />\n        </Paper>\n    )\n};\n\nParentsHandling.propTypes = {\n    loadParents: PropTypes.func.isRequired,\n    loadParent: PropTypes.func.isRequired,\n    loadStudents: PropTypes.func.isRequired,\n    loadParentName: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    parents: PropTypes.array.isRequired,\n    parentsName: PropTypes.array.isRequired,\n    request: PropTypes.object.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    clearParents: PropTypes.func.isRequired,\n    clearStudents: PropTypes.func.isRequired,\n    clearParentsName: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    available: PropTypes.array.isRequired,\n    clearAvailable: PropTypes.func.isRequired\n};\n\nexport default ParentsHandling;\n","import {connect} from 'react-redux';\nimport ParentsHandling from './ParentsHandling';\nimport {\n    loadParentsRequestWithRange,\n    loadParentByIdRequest,\n    getAllStudentsRequest,\n    getUsersNameRequest\n} from \"../../../redux/thunks\";\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getAllStudents, loadAllStudents} from \"../../../redux/actions/studentActions\";\nimport {getParents, loadParents, getUsersName, loadUsersName} from \"../../../redux/actions/usersActions\";\nimport {getAlertSuccess, setAlertSuccess, getAvailable, setAvailable} from \"../../../redux/actions/valuesActions\";\n\nconst mapDispatchToProps = dispatch => ({\n    loadParents: (page, itemsPerPage) => dispatch(loadParentsRequestWithRange(page, itemsPerPage)),\n    loadParent: (id, isAdd) => dispatch(loadParentByIdRequest(id, isAdd)),\n    loadStudents: () => dispatch(getAllStudentsRequest()),\n    loadParentName: status => dispatch(getUsersNameRequest(status)),\n    resetRequest: () => dispatch(resetRequest()),\n    clearParents: data => dispatch(loadParents(data)),\n    clearStudents: data => dispatch(loadAllStudents(data)),\n    clearParentsName: data => dispatch(loadUsersName(data)),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message)),\n    clearAvailable: data => dispatch(setAvailable(data))\n});\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    parents: getParents(state),\n    allStudents: getAllStudents(state),\n    alertSuccess: getAlertSuccess(state),\n    parentsName: getUsersName(state),\n    available: getAvailable(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentsHandling);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport ParentsHandling from '../../features/ParentsHandling/ParentsHandlingContainer';\n\nconst Parents = () => (\n    <div>\n        <PageTitle>Parents</PageTitle>\n        <ParentsHandling/>\n    </div>\n);\n\nexport default Parents;\n"],"sourceRoot":""}