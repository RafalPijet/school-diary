{"version":3,"sources":["images/teacherDesk.png","images/diaryLogo.png","images/backParentDark.jpg","images/backParentLight.jpg","images/backTeacherDark.jpg","images/backTeacherLight.jpg","images/backPrincipalLight.jpg","images/backPrincipalDark.jpg","images/showImage1.png","images/showImage2.png","images/showImage3.png","images/showImage4.png","images/showImage5.png","images/showImage6.png","images/showImage7.png","images/showImage8.png","images/showImage9.png","images/showImage10.png","images/showImage11.png","images/showImage12.png","images/showImage13.png","images/showImage14.png","images/ratings.jpg","images/parent.png","images/teachers.png","images/classDiares.jpg","images/teacherData.jpg","images/students.png","images/principalTeachers.png","images/classes.png","images/parents.png","utilities/functions.js","redux/actions/usersActions.js","redux/actions/valuesActions.js","styles/global.js","components/layouts/PageContainer/PageContainter.js","components/layouts/MainMenu/MainMenu.js","components/layouts/MainMenu/MainMenuContainer.js","components/common/Logo/Logo.js","components/features/NavBar/NavBar.js","components/common/FooterInfo/FooterInfo.js","components/features/Footer/FooterStyle.js","components/features/Footer/Footer.js","components/features/Footer/FooterContainer.js","components/features/LoggedUser/LoggedUser.js","components/features/LoggedUser/LoggedUserContainer.js","utilities/theme.js","components/layouts/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/features/WelcomeContent/WelcomeContentStyle.js","components/features/WelcomeContent/WelcomeContent.js","components/pages/Welcome/Welcome.js","config.js","redux/actions/classActions.js","redux/actions/requestActions.js","redux/actions/studentActions.js","redux/reducers/usersReducer.js","redux/reducers/requestReducer.js","redux/reducers/classReducer.js","redux/reducers/valuesReducer.js","redux/reducers/studentsReducer.js","redux/store.js","redux/thunks.js","components/common/SelectRegister/SelectRegister.js","components/common/TaskMaskCustom/TaskMaskCustom.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/features/UserForm/UserFormStyle.js","components/features/UserForm/UserForm.js","components/features/UserForm/UserFormContainer.js","components/pages/Login/Login.js","components/pages/Registration/Reagistration.js","components/pages/PageNotFound/PageNotFound.js","components/common/StudentRatingItem/StudentRatingItemStyle.js","components/common/StudentRatingItem/StudentRatingItem.js","components/features/RatingSubject/RatingSubject.js","components/features/RatingSubjectList/RatingSubjectListStyle.js","components/features/RatingSubjectList/RatingSubjectList.js","components/common/TabPanelRatings/TabPanelRatings.js","components/features/RatingsBox/RatingsBoxStyle.js","components/features/RatingsBox/RatingsBox.js","components/features/RatingsBox/RatingsBoxContainer.js","components/pages/StudentRatings/StudentRatings.js","components/common/EditUserData/EditUserDataStyle.js","components/common/EditUserData/EditUserData.js","components/common/EditUserData/EditUserDataContainer.js","components/features/ParentData/ParentDataStyle.js","components/features/ParentData/ParentData.js","components/features/ParentData/ParentDataContainer.js","components/pages/StudentData/StudentData.js","components/common/ModalAreYouSure/ModalAreYouSure.js","components/features/TeacherItem/TeacherItemStyle.js","components/features/TeacherItem/TeacherItem.js","components/features/TeacherItem/TeacherItemContainer.js","components/features/TeachersHandling/TeachersHandlingStyle.js","components/common/TablePagination/TablePagination.js","components/features/TeachersHandling/TeachersHandling.js","components/features/TeachersHandling/TeachersHandlingContainer.js","components/pages/Teachers/Teachers.js","components/features/UserWelcome/UserWelcomeStyle.js","components/common/ButtonImage/ButtonImageStyle.js","components/common/ButtonImage/ButtonImage.js","components/common/ButtonImage/ButtonImageContainer.js","components/features/UserWelcome/UserWelcome.js","components/pages/Home/Home.js","components/pages/HomeTeacher/HomeTeacher.js","components/features/ClassBoxList/ClassBoxListStyle.js","components/features/DiaryList/DiaryListStyle.js","components/common/RatingItem/RatingItemStyle.js","components/common/RatingItem/RatingItem.js","components/common/RatingItem/RatingItemContainer.js","components/features/RatingOptions/RatingOptionsStyle.js","components/features/RatingOptions/RatingOptions.js","components/features/RatingOptions/RatingOptionsContainer.js","components/features/DiaryRow/DiaryRowStyle.js","components/features/DiaryRow/DiaryRow.js","components/features/DiaryRow/DiaryRowContainer.js","components/features/DiaryList/DiaryList.js","components/features/DiaryList/DiaryListContainer.js","components/features/ClassBoxList/ClassBoxList.js","components/features/ClassBoxList/ClassBoxListContainer.js","components/pages/ClassDiaries/ClassDiaries.js","components/features/TeacherStudentItem/TeacherStudentItemStyle.js","components/features/TeacherStudentItem/TeacherStudentItem.js","components/features/TeacherDataStudents/TeacherDataStydentsStyle.js","components/features/TeacherDataStudents/TeacherDataStudents.js","components/features/TeacherDataStudents/TeachersDataStudentsContainer.js","components/features/TeacherDataHandling/TeacherDataHandlingStyle.js","components/features/TeacherDataHandling/TeacherDataHandling.js","components/features/TeacherDataHandling/TeacherDataHandlingContainer.js","components/pages/TeacherData/TeacherData.js","components/pages/HomePrincipal/HomePrincipal.js","components/features/ClassesPanel/ClassesPanelStyle.js","components/features/ClassesPanel/ClassesPanel.js","components/features/ClassesPanel/ClassesPanelContainer.js","components/features/ClassesContent/ClassesContentStyle.js","components/features/NavClassPanel/NavClassPanelStyle.js","components/features/NavClassPanel/NavClassPanel.js","components/features/NavClassPanel/NavClassPanelContainer.js","components/features/ClassContent/ClassContentStyle.js","components/features/ClassContent/ClassContent.js","components/features/ClassContent/ClassContentContainer.js","components/features/ClassesContent/ClassesContent.js","components/features/ClassesContent/ClassesContentContainer.js","components/features/ClassesHandling/ClassesHandlingStyle.js","components/features/ClassesHandling/ClassesHandling.js","components/features/ClassesHandling/ClassesHandlingContainer.js","components/pages/Classes/Classes.js","components/features/StudentForm/StudentFormStyle.js","components/features/StudentForm/StudentForm.js","components/features/StudentForm/StudentFormContainer.js","components/features/StudentItem/StudentItemStyle.js","components/features/StudentItem/StudentItem.js","components/features/StudentItem/StudentItemContainer.js","components/features/StudentsTable/StudentsTableStyle.js","components/features/StudentsTable/StudentsTable.js","components/features/StudentsTable/StudentsTableContainer.js","components/features/StudentsHandling/StudentsHandlingStyle.js","components/features/StudentsHandling/StudentsHandling.js","components/features/StudentsHandling/StudentsHandlingContainer.js","components/pages/Students/Students.js","components/common/SelectItem/SelectItemStyle.js","components/common/SelectItem/SelectItem.js","components/features/ParentItemCollapse/ParentItemCollapseStyle.js","components/features/ParentItemCollapse/ParentItemCollapse.js","components/features/ParentItemCollapse/ParentItemCollapseContainer.js","components/features/ParentItem/ParentItemStyle.js","components/features/ParentItem/ParentItem.js","components/features/ParentsHandling/ParentsHandlingStyle.js","components/features/ParentsHandling/ParentsHandling.js","components/features/ParentsHandling/ParentsHandlingContainer.js","components/pages/Parents/Parents.js","components/features/TeacherInfoItem/TeacherInfoItemStyle.js","components/features/TeacherInfoItem/TeacherInfoItem.js","components/features/StudentTeachersItem/StudentTeachersItemStyle.js","components/features/StudentTeachersItem/StudentTeachersItem.js","components/features/StudentTeachersList/StudentTeachersListStyle.js","components/features/StudentTeachersList/StudentTeachersList.js","components/features/StudentTeachersList/StudentTeachersListContainer.js","components/pages/StudentTeachers/StudentTeachers.js","components/pages/Logout/Logout.js","App.js","index.js"],"names":["module","exports","createActionName","reducerName","name","sortByNameFromAToZ","a","b","comparision","sortByLastnameFromAToZ","lastName","a11yProps","index","id","teacherDescription","parentDescription","principalDescription","welcomeDescription","SET_LOGIN","SET_REGISTER","SET_USER","UPDATE_USER_DATA","LOAD_TEACHERS","LOAD_PARENTS","UPDATE_PARENT","UPDATE_PARENT_STUDENT_CLASS_NAME","LOAD_USERS_NAME","REMOVE_USER_NAME","ADD_PARENT","ADD_CLASSNAME_TO_STUDENT","setLogin","isLogin","type","setUser","user","loadTeachers","teachers","loadParents","parents","updateParent","studentsList","updateParentStudentClassName","parentId","studentId","className","loadUsersName","users","removeUserName","addParent","parent","getLogin","store","getRegister","register","getUser","getUserId","getTeachers","getParents","getUsersName","usersName","getUserStatus","status","SET_IS_DARK","SET_IS_UPDATE_RATING","SET_IS_NEW_RATING","SET_IS_STUDENT_MODE","SET_TUTOR_IS_USE","SET_PATH","SET_MODAL_YES_NOT","SET_MAX_BIRTH_DATE","SET_ALERT_SUCCESS","SET_AVAILABLE","setIsUpdateRating","isUpdate","setIsStudentMode","isStudentMode","setTutorIsUse","isUse","setPath","path","setModalYesNot","isOpen","content","setAlertSuccess","message","setAvailable","available","getIsDark","state","values","isDark","getIsUpdateRating","isUpdateRating","getIsNewRating","isNewRating","getIsStudentMode","getTutorIsUse","tutorIsUse","getPath","getModalYesNot","modalYesNot","getRatingDescriptions","ratingDescriptions","getRatingScales","ratingScales","getSubjects","availableSubjects","getMaxBirthDate","maxBirthDate","getAlertSuccess","alertSuccess","getAvailable","style","useStyles","makeStyles","root","margin","PageContainer","children","classes","Fragment","CssBaseline","Container","maxWidth","Grid","container","item","lg","spacing","theme","height","display","flexDirection","justifyContent","alignItems","backgroundColor","palette","secondary","light","button","width","color","main","selected","disabled","dark","MainMenu","props","links","useState","value","setValue","useEffect","BottomNavigation","onChange","event","newValue","showLabels","map","i","BottomNavigationAction","key","label","title","icon","clsx","to","connect","dispatch","Logo","image","myStyle","src","alt","availableLinks","loginLinks","fontSize","studentLinks","teacherLinks","principalLinks","paperLogo","marginBottom","logo","NavBar","activeLink","setActiveLink","loggedUser","Paper","elevation","text","action","info","fontWeight","FooterInfo","isWorking","description","delay","duration","isContentChanging","changeHandling","counter","setCounter","infoLine","setInfoLine","isShow","setIsShow","timer","setInterval","clearInterval","Fade","in","timeout","onExited","length","Typography","align","componentStyle","padding","authorBox","author","primary","Footer","userStatus","setIsContentChanging","infoContent","setInfoContent","variant","Link","href","isChange","Tooltip","placement","arrow","TransitionComponent","enterDelay","Switch","size","checked","iconOnLine","iconOffLine","switch","login","LoggedUser","setIsDark","firstName","isChecked","setIsChecked","switchHandling","hidden","toUpperCase","inputProps","AppTheme","appThemeOptions","grey","green","red","warning","orange","tab","blueGrey","adding","check","header","yellow","scales","first","amber","second","third","background","backParentLight","teacher","backTeacherLight","principal","backPrincipalLight","typography","subtitle2","backParentDark","backTeacherDark","backPrincipalDark","MainLayout","muiTheme","createMuiTheme","AppThemeOptions","textAlign","PageTitle","position","top","left","right","bottom","footer","slider","operation","collection","showImage1","showImage2","showImage3","showImage4","showImage5","showImage6","showImage7","showImage8","showImage9","showImage10","showImage11","showImage12","showImage13","showImage14","WelcomeContent","step","setStep","isReady","setIsReady","firstZindex","setFirstZindex","secondZindex","setSecondZindex","thirdZindex","setThirdZindex","isShowFirst","setIsShowFirst","isShowSecond","setIsShowSecond","isShowThird","setIsShowThird","firstValue","setFirstValue","secondValue","setSecondValue","thirdValue","setThirdValue","firstIsClosed","setFirstIsClosed","secondIsClosed","setSecondIsClosed","thirdIsClosed","setThirdIsClosed","setTimeout","clearTimeout","setSlide","slideNumber","Promise","resolve","changeSlide","Grow","onEntered","then","zIndex","IconButton","onClick","Slider","getAriaValueText","defaultValue","min","max","valueLabelDisplay","Welcome","API_URL","LOAD_CLASS_BY_TEACHER_ID","LOAD_ALL_CLASSES","SELECT_CLASS","ADD_RATING_TO_STUDENT","UPDATE_RATING_TO_STUDENT","ADD_NEW_CLASS","UPDATE_STUDENT_IN_TEACHER_CLASS","UPDATE_DATA_IN_SELECTED_CLASS","UPDATE_TUTOR_IN_SELECTED_CLASS","UPDATE_TUTOR_IN_ALL_CLASSES","UPDATE_LIST_IN_SELECTED_CLASS","DELETE_CLASS_IN_ALL_CLASSES","loadClassByTeacher","allClass","loadAllClasses","allClasses","setSelectedClass","classItem","addRatingToStudent","classId","rating","updateRatingToStudent","addNewClass","newClass","updateStudentInTeacherClass","student","deleteClassInAllClasses","getTeacherAllClass","teacherAllClass","getAllClasses","getSelectedClass","selectedClass","getAvailableNames","availableNames","START_REQUEST","STOP_REQUEST","ERROR_REQUEST","RESET_REQUEST","START_ADDING_REQUEST","STOP_ADDING_REQUEST","START_WORKING_REQUEST","STOP_WORKING_REQUEST","START_UPDATING_REQUEST","STOP_UPDATING_REQUEST","START_GETING_REQUEST","STOP_GETING_REQUEST","startRequest","stopRequest","errorRequest","error","resetRequest","startAddingRequest","stopAddingRequest","startWorkingRequest","stopWorkingRequest","startUpdatingRequest","stopUpdatingRequest","startGetingRequest","stopGetingRequest","getRequest","request","LOAD_ALL_STUDENTS","ADD_STUDENT","UPDATE_STUDENT","SET_FREE_STUDENTS","SET_CLASSES_STUDENTS","loadAllStudents","students","addStudent","updateStudent","setFreeStudents","setClassesStudents","getAllStudents","allStudents","getStudentsAmount","getFreeStudents","freeStudents","getClassesStudents","classesStudents","initialState","email","password","reducer","data","telephone","filter","pending","success","working","updating","geting","grade","ratings","forEach","indexOf","subjectTeachers","mainTeacher","tutor","tutorId","isStudent","list","all","class8","class7","class6","class5","class4","date","reducers","combineReducers","createStore","applyMiddleware","thunk","loadStudentsIdFromClasses","axios","get","res","loadAllClassByTeacherId","teacherId","loadTeachersRequestWithRange","page","itemsPerPage","start","Math","ceil","limit","teachersId","selectedTeachers","params","teachersInClass","tutors","tutorsId","teacherClasses","includes","tutorClass","find","studentsAmount","loadParentsRequestWithRange","studentsInClassesId","classNames","getState","studentsId","studentsForParent","_id","push","allParents","getUsersNameRequest","getStudentsWithRangeRequest","result","resNext","birthDate","getStudentsNamesRequest","getClassNameForStudentByIdRequest","names","SelectRegister","selectTitle","isDisabled","options","takeSelected","otherProps","undefined","selectedItem","setSelectedItem","FormControl","InputLabel","Select","labelId","target","MenuItem","TextMaskCustom","inputRef","other","ref","inputElement","mask","placeholderChar","showMask","Spinner","SlideTransition","Slide","direction","rootMessage","row","MessageContent","paddingLeft","Alert","isOpenAlert","handleCloseHandling","setIsOpen","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","column","selectRow","textRow","select","minWidth","marginTop","UserForm","subjects","loadUser","addUser","registerAfter","setRegisterAfter","confirm","setRegister","userType","setUserType","subject","setSubject","isSubjectsDisabled","setIsSubjectsDisabled","isAccept","setIsAccept","isAlert","setIsAlert","phone","isError","setIsError","Object","handleTextField","TextField","helperText","InputProps","inputComponent","onBlur","trim","Fab","aria-label","CryptoJS","AES","decrypt","toString","enc","Utf8","loadUserByLogin","encrypt","post","Login","Registration","PageNotFound","ratingNumber","cursor","transition","ratingNumberBig","1","2","3","tooltip","TooltipContent","substring","StudentRatingItem","ratingStyle","setRatingStyle","Zoom","onMouseEnter","onMouseLeave","lineHeight","RatingSubject","justify","overflow","RatingSubjectList","TabPanelRatings","role","aria-labelledby","tabs","spinner","RatingsBox","getClassesName","useTheme","AppBar","Tabs","textColor","Tab","dir","RatingBox","StudentRatings","textField","justifyEnd","EditUserData","updateUser","newPassword","setData","isPasswordDisabled","setIsPasswordDisabled","isPasswordChange","setIsPasswordChange","alignContent","userAfterChange","isPassword","isDataChange","put","resultPassword","resultData","updateUserDataRequest","edit","center","ParentData","StudentData","Transition","React","forwardRef","buttonRemove","ModalAreYouSure","isConfirm","Dialog","keepMounted","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","sum","delete","TeacherItem","flexShrink","marginLeft","TablePagination","count","rowsPerPage","onChangePage","TeachersHandling","teachersName","loadTeachersName","loadTeacher","deleteTeacher","clearTeachers","clearTeachersName","selectedTeacher","setSelectedTeacher","setPage","setReady","setRowsPerPage","isSearch","setIsSearch","errorHandling","deleteHandling","isDelete","TableContainer","component","Autocomplete","renderInput","getOptionLabel","e","handleSearch","Table","TableFooter","TableRow","rowsPerPageOptions","colSpan","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","loadTeacherByIdRequest","deleteTeacherRequest","Teachers","flexWrap","backgroundImage","breakpoints","down","opacity","focusVisible","imageButton","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","common","black","transitions","create","imageTitle","ButtonImage","topTitle","bottomTitle","leftTitle","rightTitle","ButtonBase","focusRipple","focusVisibleClassName","propStyles","PropTypes","string","isRequired","any","number","func","UserWelcome","buttons","setBackground","buttonsData","Home","classDiaries","teacherData","HomeTeacher","backgroundRepeat","subjectInfo","classInfo","tutorContent","RatingItem","previewHandling","updateHandling","updatedRating","ratingItem","setRatingItem","ratingItemCopy","setRatingItemCopy","isFrozen","setIsFrozen","CircularProgress","scrollable","ratingRow","valueBox","marginRight","paddingBottom","buttonBox","deleteBox","deleteIcon","scales1","scales2","scales3","0","labels","0.5","1.5","2.5","3.5","4","4.5","5","5.5","6","6.5","7","7.5","8","RatingOptions","ratingsId","addRating","addingHandling","isEditMode","changeRating","ratingToChange","updateRating","hover","setHover","setScales","setDescription","isChanging","setIsChanging","dataIsChanging","setDataIsChanging","entries","parseFloat","setColor","isValue","Rating","precision","onChangeActive","newHover","TransitionProps","dataPackage","Date","addRatingForStudent","updateRatingForStudent","spinnerBox","buttonAdd","buttonCancel","transform","firstCell","secondCell","overflowX","thirdCell","whiteSpace","previewRoot","preview","flipped","willChange","showUpdate","hiddenUpdate","previewContent","DiaryRow","setIsNewRating","studentRatings","setStudentRatings","setStudentId","setRatingsId","isSpinner","setIsSpinner","isOpenPreview","setIsOpenPreview","setPreviewContent","setFlipped","setRatingToChange","setIsUpdate","setUpdatedRating","useSpring","visibility","config","mass","tension","friction","TableCell","div","interpolate","o","t","newRating","idOptions","DiaryList","addSubjectRating","prepareSubjectRating","stickyHeader","TableHead","TableBody","studentAfterChange","ClassBoxList","loadClasses","loadClassById","availableClasses","deleteRating","alertIsOpen","setAlertIsOpen","isClasses","setIsClasses","isOpenDiary","setIsOpenDiary","keys","changeClass","unmountOnExit","isTrue","deleteRatingForStudent","ClassDiaries","parentsBox","TeacherStudentItem","table","TeacherDataStudents","loadTeacherStudentsName","loadTeacherStudents","clearAllStudents","clearClassesStudents","selectedStudent","setSelectedStudent","classesId","studentsByRange","slice","getTeacherStudentsNameRequest","getTeacherStudentsByIdRequest","TeacherDataHandling","userId","TeacherData","HomePrincipal","outline","input","addClass","classGrade","classOptions","possibleNames","paddingTop","ClassesPanel","getClassGrade","getPossibleTutors","setNewClass","isPossible","setIsPossible","availableTutors","setAvailableTutors","availableClassNames","setAvailableClassNames","setClassGrade","prepareData","possibleTutors","existedTutors","payload","addClassRequest","nothing","selectTutor","descTutor","selectInput","replaceButton","buttonsActive","buttonDelete","searchField","progress","NavClassPanel","getModeStatus","getSelectedSubject","getFilteredStudents","updateTutor","confirmUpdate","getIsTutor","newTutor","setNewTutor","isStudentsMode","setIsStudentsMode","isTeachersMode","setIsTeachersMode","selectedSubject","setSelectedSubject","filteredStudents","setFilteredStudents","isDeleteVisible","setIsDeleteVisible","updateTutorClassRequest","paper","moreWidth","duplicate","not","intersection","ClassContent","updateClass","studentMode","setChecked","leftList","setLeftList","rightList","setRightList","leftDesc","setLeftDesc","rightDesc","setRightDesc","isVisible","setIsVisible","isShowButtons","setIsShowButtons","isTeacherMode","setIsTeacherMode","isTypeStudent","setIsTypeStudent","isTypeTeacher","setIsTypeTeacher","freeTeachers","setFreeTeachers","subjectDuplicates","setSubjectDuplicates","isTutor","setIsTutor","findDuplicates","arr","prepareFreeTeachers","leftChecked","rightChecked","isStudents","teachersClassId","handleToggle","currentIndex","newChecked","splice","rowItem","duplicates","customList","items","dense","ListItem","ListItemText","ListItemIcon","Checkbox","tabIndex","disableRipple","sort","concat","toLowerCase","updateClassRequest","ClassesContent","getStudentsById","loadDataForClass","deleteClass","setNewValue","isPrepare","setIsPrepare","filteredClass","setFilteredClass","classGradeIn","setClassGradeIn","setIsDelete","prepareFreeStudents","prepareContentClass","removeClass","deleteGo","indicatorColor","scrollButtons","getStudentsByIdRequest","loadDataForClassByIdRequest","deleteClassByIdRequest","ClassesHandling","clearAllClasses","clearFreeStudents","clearSelectedClass","setPossibleTutors","Classes","StudentForm","newStudent","setNewStudent","amount","setAmount","format","InputLabelProps","shrink","addStudentRequest","justifyCenter","close","StudentItem","getStudentIdUpdated","studentIdUpdated","isEdit","setIsEdit","isShowConfirm","setIsShowConfirm","isUpdating","setIsUpdating","isDateError","setIsDateError","isRedirect","setIsRedirect","handleChange","handleParents","studentsAfterChange","studentName","updateStudentBasicDataRequest","StudentsTable","selectedStudents","loadStudentsNames","loadStudentsWithRange","deleteStudent","getStudent","setStudentIdUpdated","deleteStudentRequest","getStudentByIdRequest","StudentsHandling","Students","formControl","addButton","removeButton","SelectItem","selectName","buttonName","confirmSelect","isAdd","ParentItemCollapse","deleteParent","studentsWithoutParent","setStudentsWithoutParent","isModalOpen","setIsModalOpen","parentStudentsId","setParentStudentsId","getNewStudentForParent","parentName","removeStudentFromParent","updateUserRequest","updateStudentRequest","deleteParentRequest","ParentItem","collapseHandling","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","noFull","ParentsHandling","loadParent","loadStudents","loadParentName","parentsName","clearParents","clearStudents","clearParentsName","clearAvailable","selectedParent","setSelectedParent","isLocation","setIsLocation","location","useLocation","pathname","studentsIdInClasses","loadParentByIdRequest","Parents","TeacherInfoItem","StudentTeachersItem","StudentTeachersList","isLoad","setIsLoad","getTeachersByClassNameRequest","StudentTeachers","isExit","setIsExit","exact","Logout","ReactDOM","render","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,0QCA9BC,EAAmB,SAACC,EAAaC,GAAd,oBAA8BD,EAA9B,YAA6CC,IAEhEC,EAAqB,SAACC,EAAGC,GAClC,IAAIC,EAAc,EAOlB,OALIF,EAAEF,KAAOG,EAAEH,KACXI,EAAc,EACPF,EAAEF,KAAOG,EAAEH,OAClBI,GAAe,GAEZA,GAGEC,EAAyB,SAACH,EAAGC,GACtC,IAAIC,EAAc,EAOlB,OALIF,EAAEI,SAAWH,EAAEG,SACfF,EAAc,EACPF,EAAEI,SAAWH,EAAEG,WACtBF,GAAe,GAEZA,GAGEG,EAAY,SAAAC,GACrB,MAAO,CACHC,GAAG,kBAAD,OAAoBD,GACtB,gBAAgB,uBAAhB,OAAwCA,KAInCE,EACH,CACF,uEACA,8EACA,4FACA,kEACA,4EACA,sDACA,yCARKA,EAUA,CACL,iEACA,kEACA,0DACA,mFACA,0FACA,+DACA,yEACA,iFACA,0DACA,wFACA,gGACA,0DAtBKA,EAwBH,CACF,kFACA,6DACA,qEACA,8DACA,6GAIKC,EACH,CACF,0DACA,kDACA,6CACA,qDALKA,EAOD,CACJ,iEACA,gEACA,6DACA,mGAXKA,EAaH,CACF,kEACA,yCAfKA,EAiBC,CACN,2EACA,oCACA,6FAIKC,EACH,CACF,4DACA,kDACA,0DACA,oEACA,oEACA,wFACA,iFACA,qEACA,gGACA,wDACA,mEACA,0EACA,kFACA,oEACA,2DAhBKA,EAkBA,CACL,oFACA,iFACA,8DACA,kFACA,oEACA,qGACA,kFACA,0GACA,mEACA,wFACA,+GACA,wFACA,mEACA,oEACA,yCACA,gGACA,4EACA,+CApCKA,EAsCC,CACN,2CACA,6FACA,uCACA,6DACA,0GACA,yDA5CKA,EA8CC,CACN,qFACA,oFACA,yDACA,4HACA,sFACA,sCACA,0DACA,mEAtDKA,EAwDA,CACL,yEACA,2FACA,4DACA,yDACA,yEACA,+FAIKC,EACH,CACF,+CACA,iGAHKA,EAKF,CACH,yCACA,2DACA,kDARKA,EAUK,CACV,oEACA,kDACA,sEACA,8FCnKKC,EAAYhB,EAHL,QAGmC,aAC1CiB,EAAejB,EAJR,QAIsC,gBAC7CkB,EAAWlB,EALJ,QAKkC,YACzCmB,EAAmBnB,EANZ,QAM0C,oBACjDoB,EAAgBpB,EAPT,QAOuC,iBAC9CqB,EAAerB,EARR,QAQsC,gBAC7CsB,EAAgBtB,EATT,QASuC,iBAC9CuB,EAAmCvB,EAV5B,QAU0D,oCACjEwB,EAAkBxB,EAXX,QAWyC,mBAChDyB,EAAmBzB,EAZZ,QAY0C,oBACjD0B,EAAa1B,EAbN,QAaoC,cAC3C2B,EAA2B3B,EAdpB,QAckD,4BAGzD4B,EAAW,SAAAC,GAAO,MAAK,CAACA,UAASC,KAAMd,IAEvCe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","file":"static/js/main.e30f9213.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/teacherDesk.eea30744.png\";","module.exports = __webpack_public_path__ + \"static/media/diaryLogo.f24d3a00.png\";","module.exports = __webpack_public_path__ + \"static/media/backParentDark.6de5eea4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backParentLight.b23944d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backTeacherDark.75f967c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backTeacherLight.55ff9960.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backPrincipalLight.8795e1fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backPrincipalDark.876ac37b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showImage1.8446ab89.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage2.03216128.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage3.23afe85b.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage4.7f5f6703.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage5.6cfdcfe6.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage6.6a19ba9d.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage7.219dec97.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage8.8c90fda3.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage9.94f19c5e.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage10.035d4978.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage11.16239be9.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage12.96c4bd1b.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage13.34ba378f.png\";","module.exports = __webpack_public_path__ + \"static/media/showImage14.2a54ea56.png\";","module.exports = __webpack_public_path__ + \"static/media/ratings.19d18f80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parent.259cd116.png\";","module.exports = __webpack_public_path__ + \"static/media/teachers.900b077e.png\";","module.exports = __webpack_public_path__ + \"static/media/classDiares.c490548d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/teacherData.1780bd21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/students.6e24284c.png\";","module.exports = __webpack_public_path__ + \"static/media/principalTeachers.b75e9dee.png\";","module.exports = __webpack_public_path__ + \"static/media/classes.572e54a7.png\";","module.exports = __webpack_public_path__ + \"static/media/parents.d0e11e50.png\";","export const createActionName = (reducerName, name) => `app/${reducerName}/${name}`;\n\nexport const sortByNameFromAToZ = (a, b) => {\n    let comparision = 0;\n\n    if (a.name > b.name) {\n        comparision = 1;\n    } else if (a.name < b.name) {\n        comparision = -1;\n    }\n    return comparision\n};\n\nexport const sortByLastnameFromAToZ = (a, b) => {\n    let comparision = 0;\n\n    if (a.lastName > b.lastName) {\n        comparision = 1;\n    } else if (a.lastName < b.lastName) {\n        comparision = -1;\n    }\n    return comparision\n};\n\nexport const a11yProps = index => {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n};\n\nexport const teacherDescription = {\n    home: [\n        \"Hello, dear Teacher. We hope that our product will help you at work.\",\n        \"In the Class Diaries section you can choose the classes in which you teach.\",\n        \"While adding a new grade for a student, you can choose the grade's scale and description.\",\n        \"Remember that you can always edit or delete an existing rating.\",\n        \"In the Teacher's Data section you can see a list of all your students... \",\n        \"...and their parents or guardians' contact details.\",\n        \"You can also edit your personal data.\"\n    ],\n    diaries: [\n        \"Here you can choose the diary of the class in which you teach.\",\n        \"To add a grade to the selected student, press the green icon...\",\n        \"...then, a window for setting the exact mark will open.\",\n        \"Hover over the stars' icons and set the grade's value. Click on the desired one.\",\n        \"Select the grade's scale and its description, then confirm by clicking the tick icon...\",\n        \"...the grade has been added. Look how easy and simple it is.\",\n        \"As you probably noticed, the grade's scale is determined by its color.\",\n        \"If you want to check the grade's description and date of issue, hover over it.\",\n        \"You can edit the parameters of an already issued grade.\",\n        \"In order to do this, click on the selected grade. A window in which you can change...\",\n        \"...the rating parameters will open. Be sure to confirm the changes by clicking the tick icon.\",\n        \"You can also delete the selected grade in this window.\"\n    ],\n    data: [\n        \"In the students' list section you have a preview of all the students you teach.\",\n        \"In addition to basic information about a given student,...\",\n        \"...you also see contact details of his parents or guardians there.\",\n        \"In the edit teacher's data section, you can edit your data.\",\n        \"Remember to change your password from time to time. This is important for your and your students' safety.\"\n    ]\n};\n\nexport const parentDescription = {\n    home: [\n        \"Hello, dear Parent. Thank you for choosing our product.\",\n        'Here, you can check the grades of all subjects.',\n        \"You are also able to contact the teachers.\",\n        \"You can edit your data and check your children's.\"\n    ],\n    grades: [\n        \"If you are the parent or guardian of more than one student,...\",\n        \"...select the one whose grades you are interested in viewing.\",\n        \"To check the selected grade's parameters, hover over it...\",\n        \"...you'll then see the grade's description, scale, date of issue, and the teacher who added it.\",\n    ],\n    data: [\n        \"Here you can view all students you are a parent or guardian of.\",\n        \"You can also edit your personal data.\"\n    ],\n    teachers: [\n        \"In this section you can see information about the class to which each...\",\n        \"... of your children is assigned.\",\n        \"You have access to the class teacher's contact details, as well as to the other teachers.\"\n    ]\n};\n\nexport const principalDescription = {\n    home: [\n        'Hello, dear Principal. Thank you for choosing our product',\n        'In the Classes section you can add new classes.',\n        'You can also change the list of students in each class.',\n        'You can assign teachers of a certain subject to a selected class.',\n        'You are able to determine who is the class teacher of each class.',\n        'In the Teachers section you have a list of all teachers with their contact details...',\n        '...and information about classes they teach and how many students are in them.',\n        'You can remove a selected teacher from the school\\'s teachers list.',\n        'In the Students section you have a list of all students with information about their class...',\n        '...and contact details of their parents or guardians.',\n        \"You can also add new students or edit the existing ones' data...\",\n        '...as well as remove a selected student from the school\\'s student list.',\n        'In the Parents section you can view information about all parents or guardians.',\n        'You can assign each student to the destined parents or guardians.',\n        'You can also delete an individual parent from the list.'\n    ],\n    classes: [\n        \"In this section you can add new classes and edit or delete already existing ones.\",\n        \"In order to create a new class, select a name from the list of available ones.\",\n        \"Then select a class teacher from the list of possible ones.\",\n        \"After choosing the name and the class teacher, click on the 'add class' button.\",\n        \"To edit the class, select a name from the list of available ones.\",\n        \"In the left window you can see a list of the class's students and on the right a list of teachers.\",\n        \"To change the student's list, click on the 'students' list change mode' button.\",\n        \"In the left window you will then see a list of the current class students, and on the right you will...\",\n        \"...see a list of students who are not yet assigned to any class.\",\n        \"Select the appropriate items and use the arrow buttons to change the lists' contents.\",\n        \"If you make a change, the 'Confirm new list content' button will turn green. Click on it to save the change.\",\n        \"To change the teachers' list, click on the 'class teachers' list change mode' button.\",\n        \"Editing the teachers' list is the same as in the students' case.\",\n        \"Don't forget to save the changes by clicking on the green button.\",\n        \"You can also change the class teacher.\",\n        \"Select the destined one from the list and confirm it by clicking 'replace the class teacher'.\",\n        \"To remove a selected class, click on the 'remove current class' button...\",\n        \"...remember, you can't undo this operation!\"\n    ],\n    teachers: [\n        \"You can see a list of all teachers here.\",\n        \"As well as contact details for each one of them, a list of classes in which they teach,...\",\n        \"...and the number of their students.\",\n        \"You can remove a selected teacher from the teachers' list.\",\n        \"However, remember that for this to happen, you must make sure that the teacher that is to be removed...\",\n        \"... is not a class teacher or a teacher in any class.\"\n    ],\n    students: [\n        \"In the 'students' list' section you can see a list of all students in your school.\",\n        \"You will find information about each student and their parents or guardians here.\",\n        \"You can edit personal data about the selected student.\",\n        \"In order to do this, click on the green 'open edit mode' icon. You can then change their name, surname and date of birth.\",\n        \"If the data has changed, a green icon will appear in the place of the trash icon...\",\n        \"...click on it to save the changes.\",\n        \"In the 'add student' section you can add a new student.\",\n        \"Enter the new student's data and save it with the green button.\"\n    ],\n    parents: [\n        \"This is a list of parents or guardians of all students in your school.\",\n        \"In the basic form of display you can see the contact details of each parent or guardian.\",\n        \"For more details, click on the chosen parent or guardian.\",\n        \"You will then see a list of students assigned to them.\",\n        \"You can assign individual students to the selected parent or guardian.\",\n        \"You can also remove the selected parent or guardian by clicking the 'remove parent' button.\"\n    ]\n};\n\nexport const welcomeDescription = {\n    home: [\n        'Select the Login button to log in as a user.',\n        'Select the Registration button to register in the system as a parent / guardian or a teacher.'\n    ],\n    login: [\n        'Enter your email address and password.',\n        'The system will check whether you are a registered user.',\n        'If the password is not correct, enter it again'\n    ],\n    registration: [\n        'Select your user type. If you are a teacher, choose your subject.',\n        'Enter the remaining data and set your password.',\n        'After entering all data correctly, the gray button will turn green.',\n        'Press the button. If everything goes right, the system will take you to the login section.'\n    ]\n};\n\n","import {createActionName} from \"../../utilities/functions\";\n\nconst reducerName = 'users';\n\n//ACTIONS TYPE\nexport const SET_LOGIN = createActionName(reducerName, 'SET_LOGIN');\nexport const SET_REGISTER = createActionName(reducerName, 'SET_REGISTER');\nexport const SET_USER = createActionName(reducerName, 'SET_USER');\nexport const UPDATE_USER_DATA = createActionName(reducerName, 'UPDATE_USER_DATA');\nexport const LOAD_TEACHERS = createActionName(reducerName, 'LOAD_TEACHERS');\nexport const LOAD_PARENTS = createActionName(reducerName, 'LOAD_PARENTS');\nexport const UPDATE_PARENT = createActionName(reducerName, 'UPDATE_PARENT');\nexport const UPDATE_PARENT_STUDENT_CLASS_NAME = createActionName(reducerName, 'UPDATE_PARENT_STUDENT_CLASS_NAME');\nexport const LOAD_USERS_NAME = createActionName(reducerName, 'LOAD_USERS_NAME');\nexport const REMOVE_USER_NAME = createActionName(reducerName, 'REMOVE_USER_NAME');\nexport const ADD_PARENT = createActionName(reducerName, 'ADD_PARENT');\nexport const ADD_CLASSNAME_TO_STUDENT = createActionName(reducerName, 'ADD_CLASSNAME_TO_STUDENT');\n\n//CREATORS OF ACTIONS\nexport const setLogin = isLogin => ({isLogin, type: SET_LOGIN});\nexport const setRegister = login => ({login, type: SET_REGISTER});\nexport const setUser = user => ({user, type: SET_USER});\nexport const updateUserData = data => ({data, type: UPDATE_USER_DATA});\nexport const loadTeachers = teachers => ({teachers, type: LOAD_TEACHERS});\nexport const loadParents = parents => ({parents, type: LOAD_PARENTS});\nexport const updateParent = (id, studentsList) => ({id, studentsList, type: UPDATE_PARENT});\nexport const updateParentStudentClassName = (parentId, studentId, className) =>\n    ({parentId, studentId, className, type: UPDATE_PARENT_STUDENT_CLASS_NAME});\nexport const loadUsersName = users => ({users, type: LOAD_USERS_NAME});\nexport const removeUserName = id => ({id, type: REMOVE_USER_NAME});\nexport const addParent = parent => ({parent, type: ADD_PARENT});\nexport const addClassnameToStudent = (studentId, className) => ({studentId, className, type: ADD_CLASSNAME_TO_STUDENT});\n\n//SELECTORS\nexport const getLogin = store => store.user.isLogin;\nexport const getRegister = store => store.user.register;\nexport const getUser = store => store.user.user;\nexport const getUserId = store => store.user.user.id;\nexport const getTeachers = store => store.user.teachers;\nexport const getParents = store => store.user.parents;\nexport const getUsersName = store => store.user.usersName;\nexport const getUserStatus = store => store.user.user.status;\n","import {createActionName} from \"../../utilities/functions\";\n\nconst reducerName = 'values';\n\n// ACTIONS\nexport const SET_IS_DARK = createActionName(reducerName, 'SET_IS_DARK');\nexport const SET_IS_UPDATE_RATING = createActionName(reducerName, 'SET_IS_UPDATE_RATING');\nexport const SET_IS_NEW_RATING = createActionName(reducerName, 'SET_IS_NEW_RATING');\nexport const SET_IS_STUDENT_MODE = createActionName(reducerName, 'SET_IS_STUDENT_MODE');\nexport const SET_TUTOR_IS_USE = createActionName(reducerName, 'SET_TUTOR_IS_USE');\nexport const SET_PATH = createActionName(reducerName, 'SET_PATH');\nexport const SET_MODAL_YES_NOT = createActionName(reducerName, 'SET_MODAL_YES_NOT');\nexport const SET_MAX_BIRTH_DATE = createActionName(reducerName, 'SET_MAX_BIRTH_DATE');\nexport const SET_ALERT_SUCCESS = createActionName(reducerName, 'SET_ALERT_SUCCESS');\nexport const SET_AVAILABLE = createActionName(reducerName, 'SET_AVAILABLE');\n\n// CREATORS OF ACTIONS\nexport const setIsDark = isDark => ({isDark, type: SET_IS_DARK});\nexport const setIsUpdateRating = isUpdate => ({isUpdate, type: SET_IS_UPDATE_RATING});\nexport const setIsNewRating = isNewRating => ({isNewRating, type: SET_IS_NEW_RATING});\nexport const setIsStudentMode = isStudentMode => ({isStudentMode, type: SET_IS_STUDENT_MODE});\nexport const setTutorIsUse = isUse => ({isUse, type: SET_TUTOR_IS_USE});\nexport const setPath = path => ({path, type: SET_PATH});\nexport const setModalYesNot = (isOpen, content) => ({isOpen, content, type: SET_MODAL_YES_NOT});\nexport const setMaxBirthDate = date => ({date, type: SET_MAX_BIRTH_DATE});\nexport const setAlertSuccess = (isOpen, message) => ({isOpen, message, type: SET_ALERT_SUCCESS});\nexport const setAvailable = available => ({available, type: SET_AVAILABLE});\n\n// SELECTORS\nexport const getIsDark = state => state.values.isDark;\nexport const getIsUpdateRating = state => state.values.isUpdateRating;\nexport const getIsNewRating = state => state.values.isNewRating;\nexport const getIsStudentMode = state => state.values.isStudentMode;\nexport const getTutorIsUse = state => state.values.tutorIsUse;\nexport const getPath = state => state.values.path;\nexport const getModalYesNot = state => state.values.modalYesNot;\nexport const getRatingDescriptions = state => state.values.ratingDescriptions;\nexport const getRatingScales = state => state.values.ratingScales;\nexport const getSubjects = state => state.values.availableSubjects;\nexport const getMaxBirthDate = state => state.values.maxBirthDate;\nexport const getAlertSuccess = state => state.values.alertSuccess;\nexport const getAvailable = state => state.values.available;\n","export const style = {\n    baseSize: '14px',\n    smallSize: '5px',\n    titleSize: '16px',\n    middleSize: '20px',\n    bigSize: '25px',\n    colorOnLine: '#32ff7e',\n    colorOffLine: '#a4b0be',\n    contentHeight: '600px',\n    colorActive: '#F5F5F5'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {Container, Grid} from '@material-ui/core';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {style} from '../../../styles/global';\n\nconst useStyles = makeStyles({\n    root: {\n        margin: `${style.baseSize} auto`\n    }\n});\n\nconst PageContainer = ({children}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Container maxWidth='lg' className={classes.root}>\n                <Grid container item lg={12} spacing={2}>\n                    {children}\n                </Grid>\n            </Container>\n        </React.Fragment>\n    )\n};\n\nPageContainer.propTypes = {\n    children: PropTypes.node\n};\n\nexport default PageContainer;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport {Redirect} from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: 600,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.light,\n    },\n    button: {\n        width: '100%',\n        '&$selected': {\n            color: theme.palette.secondary.main\n        }\n    },\n    selected: {\n        color: theme.palette.secondary.main\n    },\n    disabled: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\nconst MainMenu = props => {\n    const {links, setPath, path} = props;\n    const classes = useStyles();\n    const [value, setValue] = useState('/');\n\n    useEffect(() => {\n\n        if (path !== value) {\n            setValue(path);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [path]);\n\n    const handleChange = (event, newValue) => {\n        setPath(newValue);\n    };\n\n    return (\n        <>\n            <BottomNavigation\n                value={value}\n                onChange={handleChange}\n                showLabels\n                className={classes.root}\n            >\n                {\n                    links.map((item, i) => {\n                        return <BottomNavigationAction\n                            disabled={path === '/logout'}\n                            key={i}\n                            label={item.title}\n                            value={item.path}\n                            icon={item.icon}\n                            classes={{selected: classes.selected}}\n                            className={clsx(classes.button,\n                                path === '/logout' ? classes.disabled : '')}\n                        />\n                    })\n                }\n            </BottomNavigation>\n            <Redirect to={value}/>\n        </>\n    )\n};\n\nMainMenu.propTypes = {\n    links: PropTypes.arrayOf(PropTypes.shape({\n        path: PropTypes.string,\n        title: PropTypes.string,\n        icon: PropTypes.node\n    })),\n    path: PropTypes.string.isRequired,\n    setPath: PropTypes.func.isRequired\n};\n\nexport default MainMenu;\n","import {connect} from 'react-redux';\nimport {getPath, setPath} from \"../../../redux/actions/valuesActions\";\nimport MainMenu from \"./MainMenu\";\n\nconst mapStateToProps = state => ({\n    path: getPath(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setPath: path => dispatch(setPath(path))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMenu);\n","import React from 'react';\n\nconst Logo = ({image, name, myStyle}) => (\n    <img src={image} alt={name} className={myStyle}/>\n);\n\nexport default Logo;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenu from '../../layouts/MainMenu/MainMenuContainer';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from '@material-ui/core';\nimport Logo from \"../../common/Logo/Logo\";\nimport logo from '../../../images/diaryLogo.png';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ClassIcon from '@material-ui/icons/Group';\nimport ParentsIcon from '@material-ui/icons/Wc';\nimport StudentIcon from '@material-ui/icons/School';\nimport TeachersIcon from '@material-ui/icons/SupervisedUserCircle';\nimport LogoutIcon from '@material-ui/icons/MeetingRoom';\nimport LoginIcon from '@material-ui/icons/ExitToApp';\nimport RegIcon from '@material-ui/icons/HowToReg';\nimport DataIcon from '@material-ui/icons/Assignment';\nimport RatingIcon from '@material-ui/icons/Dvr';\nimport DiariesIcon from '@material-ui/icons/LibraryBooks';\n\nconst availableLinks = {\n    loginLinks: [\n        {path: \"/\", title: \"Home\", icon: <HomeIcon fontSize='large'/>},\n        {path: \"/login\", title: \"LogIn\", icon: <LoginIcon fontSize='large'/>},\n        {path: \"/registration\", title: \"Registration\", icon: <RegIcon fontSize='large'/>}\n    ],\n    studentLinks: [\n        {path: \"/\", title: \"Home\", icon: <HomeIcon fontSize='large'/>},\n        {path: \"/grades\", title: \"Grades\", icon: <RatingIcon fontSize='large'/>},\n        {path: \"/data\", title: \"Parent Data\", icon: <DataIcon fontSize='large'/>},\n        {path: \"/teachers\", title: \"Teachers\", icon: <TeachersIcon fontSize='large'/>},\n        {path: \"/logout\", title: \"LogOut\", icon: <LogoutIcon fontSize='large'/>}\n    ],\n    teacherLinks: [\n        {path: \"/\", title: \"Home\", icon: <HomeIcon fontSize='large'/>},\n        {path: \"/diaries\", title: \"Class Diaries\", icon: <DiariesIcon fontSize='large'/>},\n        {path: \"/data\", title: \"Teacher's data\", icon: <DataIcon fontSize='large'/>},\n        {path: \"/logout\", title: \"LogOut\", icon: <LogoutIcon fontSize='large'/>}\n    ],\n    principalLinks: [\n        {path: \"/\", title: \"Home\", icon: <HomeIcon fontSize='large'/>},\n        {path: \"/classes\", title: \"Classes\", icon: <ClassIcon fontSize='large'/>},\n        {path: \"/teachers\", title: \"Teachers\", icon: <TeachersIcon fontSize='large'/>},\n        {path: \"/students\", title: \"Students\", icon: <StudentIcon fontSize='large'/>},\n        {path: \"/parents\", title: \"Parents\", icon: <ParentsIcon fontSize='large'/>},\n        {path: \"/logout\", title: \"LogOut\", icon: <LogoutIcon fontSize='large'/>}\n    ]\n};\n\nconst useStyles = makeStyles(theme => ({\n    paperLogo: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n        height: '105px',\n        backgroundColor: theme.palette.secondary.light\n    },\n    logo: {\n        width: '170px',\n        height: '65px',\n        margin: '0'\n    }\n}));\n\nconst NavBar = props => {\n    const [activeLink, setActiveLink] = useState([]);\n    const {isLogin, loggedUser} = props;\n    const {loginLinks, studentLinks, teacherLinks, principalLinks} = availableLinks;\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (isLogin && loggedUser.status === 'parent') {\n            setActiveLink(studentLinks);\n        } else if (isLogin && loggedUser.status === 'teacher') {\n            setActiveLink(teacherLinks);\n        } else if (isLogin && loggedUser.status === 'principal') {\n            setActiveLink(principalLinks);\n        } else {\n            setActiveLink(loginLinks);\n        }\n    }, [isLogin, loggedUser, loginLinks, principalLinks, studentLinks, teacherLinks]);\n\n    return (\n        <>\n            <Paper elevation={9} className={classes.paperLogo}>\n                <Logo image={logo} name='logo' myStyle={classes.logo}/>\n            </Paper>\n            <Paper elevation={9}>\n                <MainMenu links={activeLink}/>\n            </Paper>\n        </>\n    )\n};\n\nNavBar.propTypes = {\n    isLogin: PropTypes.bool.isRequired,\n    loggedUser: PropTypes.object\n};\n\nexport default NavBar;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Fade, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    text: {\n        color: theme.palette.action.info,\n        fontWeight: 700,\n        fontSize: 16\n    }\n}));\n\nconst FooterInfo = props => {\n    const {\n        isWorking,\n        description,\n        delay,\n        duration,\n        isContentChanging,\n        changeHandling\n    } = props;\n    const [value, setValue] = useState(0);\n    const [counter, setCounter] = useState(0);\n    const [infoLine, setInfoLine] = useState(description[value]);\n    const [isShow, setIsShow] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        let timer = null;\n\n        if (isWorking) {\n            timer = setInterval(() => {\n                setCounter(counter => counter + 1);\n            }, 1000);\n        } else {\n            clearInterval(timer)\n        }\n\n        return () => {\n            clearInterval(timer);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isWorking]);\n\n    useEffect(() => {\n\n        if (isWorking) {\n\n            if (counter === delay) setIsShow(true);\n\n            if (counter === duration) setIsShow(false);\n\n        } else {\n            setIsShow(false);\n            setCounter(0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [counter, isWorking]);\n\n    useEffect(() => {\n\n        if (isContentChanging) setIsShow(false)\n    }, [isContentChanging]);\n\n    const changeInfoLine = () => {\n        setCounter(0);\n\n        if (isWorking) {\n\n            if (value === (description.length - 1)) {\n                setValue(0);\n                setInfoLine(description[0]);\n            } else {\n                setValue(value + 1);\n                setInfoLine(description[value + 1]);\n            }\n\n            if (isContentChanging) {\n                changeHandling(true);\n                setValue(0);\n                setInfoLine(description[0]);\n            }\n        } else {\n            setValue(0);\n            setInfoLine(description[0]);\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Fade\n                in={isShow}\n                timeout={1000}\n                onExited={changeInfoLine}\n            >\n                <Typography className={classes.text} align='center'>\n                    {infoLine}\n                </Typography>\n            </Fade>\n        </div>\n    )\n};\n\nFooterInfo.propTypes = {\n    isWorking: PropTypes.bool.isRequired,\n    description: PropTypes.array.isRequired,\n    delay: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    isContentChanging: PropTypes.bool.isRequired,\n    changeHandling: PropTypes.func.isRequired\n};\n\nexport default FooterInfo\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: theme.spacing(1),\n        padding: `${style.smallSize}`,\n        height: '37px',\n        backgroundColor: theme.palette.secondary.light\n    },\n    authorBox: {\n        width: 190,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    },\n    author: {\n        color: theme.palette.primary.light\n    },\n    icon: {\n        color: theme.palette.primary.light\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport FooterInfo from \"../../common/FooterInfo/FooterInfo\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport {Link, Paper, Typography, Fade, Tooltip} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    welcomeDescription,\n    teacherDescription,\n    parentDescription,\n    principalDescription\n} from \"../../../utilities/functions\";\nimport componentStyle from \"./FooterStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst Footer = props => {\n    const {isLogin, path, userStatus} = props;\n    const [isContentChanging, setIsContentChanging] = useState(false);\n    const [infoContent, setInfoContent] = useState(welcomeDescription.home);\n    const [isShow, setIsShow] = useState(true);\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsContentChanging(true);\n\n        if (isLogin) {\n\n            if (userStatus === 'teacher') {\n                switch (path) {\n                    case '/diaries':\n                        setInfoContent(teacherDescription.diaries);\n                        break;\n                    case '/data':\n                        setInfoContent(teacherDescription.data);\n                        break;\n                    default:\n                        setInfoContent(teacherDescription.home);\n                }\n            } else if (userStatus === 'parent') {\n                switch (path) {\n                    case '/grades':\n                        setInfoContent(parentDescription.grades);\n                        break;\n                    case '/data':\n                        setInfoContent(parentDescription.data);\n                        break;\n                    case '/teachers':\n                        setInfoContent(parentDescription.teachers);\n                        break;\n                    default:\n                        setInfoContent(parentDescription.home);\n                }\n            } else if (userStatus === 'principal') {\n                switch (path) {\n                    case '/classes':\n                        setInfoContent(principalDescription.classes);\n                        break;\n                    case '/teachers':\n                        setInfoContent(principalDescription.teachers);\n                        break;\n                    case '/students':\n                        setInfoContent(principalDescription.students);\n                        break;\n                    case '/parents':\n                        setInfoContent(principalDescription.parents);\n                        break;\n                    default:\n                        setInfoContent(principalDescription.home);\n                }\n            }\n        } else {\n            switch (path) {\n                case '/login':\n                    setInfoContent(welcomeDescription.login);\n                    break;\n                case '/registration':\n                    setInfoContent(welcomeDescription.registration);\n                    break;\n                default:\n                    setInfoContent(welcomeDescription.home);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isLogin, path]);\n\n    const switchHandling = () => {\n        setIsShow(!isShow);\n    };\n\n    const changeHandling = isChange => {\n        setIsContentChanging(!isChange);\n    };\n\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <div className={classes.authorBox}>\n                <Typography\n                    className={classes.author}\n                    variant='subtitle2'>\n                    2020 © <Link className={classes.author} href='mailto:rafal.pijet@gmail.com'>Rafal Pijet</Link>\n                </Typography>\n            </div>\n            <FooterInfo\n                isWorking={isShow}\n                description={infoContent}\n                delay={1}\n                duration={8}\n                isContentChanging={isContentChanging}\n                changeHandling={changeHandling}\n            />\n            <div>\n                <HelpIcon className={classes.icon}/>\n                <Tooltip\n                    title={isShow ? 'off Tips' : 'on Tips'}\n                    placement='bottom'\n                    arrow\n                    TransitionComponent={Fade}\n                    enterDelay={2000}\n                >\n                    <span>\n                        <Switch\n                            size='small'\n                            name='changeTips'\n                            checked={isShow}\n                            onChange={switchHandling}\n                        />\n                    </span>\n                </Tooltip>\n            </div>\n        </Paper>\n    )\n};\n\nFooter.propTypes = {\n    isLogin: PropTypes.bool.isRequired,\n    path: PropTypes.string.isRequired,\n    userStatus: PropTypes.string\n};\n\nexport default Footer;\n","import {connect} from 'react-redux';\nimport {getLogin, getUserStatus} from \"../../../redux/actions/usersActions\";\nimport {getPath} from \"../../../redux/actions/valuesActions\";\nimport Footer from \"./Footer\";\n\nconst mapStateToProps = state => ({\n   isLogin: getLogin(state),\n   path: getPath(state),\n   userStatus: getUserStatus(state)\n});\n\nexport default connect(mapStateToProps)(Footer);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Paper, Typography, Grid, Fade, Tooltip} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Switch from '@material-ui/core/Switch';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\nimport LightDarkIcon from '@material-ui/icons/InvertColors';\nimport {style} from '../../../styles/global';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: theme.spacing(1),\n        padding: `${style.smallSize}`,\n        height: '37px',\n        backgroundColor: theme.palette.secondary.light\n    },\n    iconOnLine: {\n        color: `${style.colorOnLine}`\n    },\n    iconOffLine: {\n        color: `${style.colorOffLine}`\n    },\n    switch: {\n        display: 'inherit',\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    },\n    login: {\n        display: 'inherit',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n    },\n    user: {\n        padding: '3px 0 0 6px',\n        fontSize: `${style.baseSize}`\n    },\n    icon: {\n        color: theme.palette.primary.light\n    }\n}));\n\nconst LoggedUser = props => {\n    const {isLogin, setIsDark} = props;\n    const {firstName, lastName, status} = props.user;\n    const [isChecked, setIsChecked] = useState(false);\n    const classes = useStyles();\n\n    const switchHandling = async () => {\n        await setIsChecked(!isChecked);\n        setIsDark(isChecked);\n    };\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <Grid item lg={10} className={classes.login}>\n                <PersonIcon className={isLogin ? classes.iconOnLine : classes.iconOffLine}/>\n                <Typography\n                    className={classes.user}\n                    display='inline'\n                    variant='subtitle1'\n                    color='primary'\n                    hidden={!isLogin}\n                >\n                    {` ${isLogin ? firstName.toUpperCase() : ''} ${isLogin ? lastName.toUpperCase() : ''} - ${isLogin ? status : ''}`}\n                </Typography>\n            </Grid>\n            <Grid item lg={2} className={classes.switch}>\n                <LightDarkIcon className={classes.icon}/>\n                <Tooltip\n                    title={isChecked ? 'set dark mode' : 'set light mode'}\n                    placement='bottom'\n                    arrow\n                    TransitionComponent={Fade}\n                    enterDelay={2000}\n                >\n                    <span>\n                        <Switch\n                            size='small'\n                            checked={isChecked}\n                            onChange={switchHandling}\n                            name='changeTheme'\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        />\n                    </span>\n                </Tooltip>\n            </Grid>\n        </Paper>\n    )\n};\n\nLoggedUser.propTypes = {\n    isLogin: PropTypes.bool.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    status: PropTypes.string,\n    setIsDark: PropTypes.func.isRequired\n};\n\nexport default LoggedUser;\n","import {connect} from 'react-redux';\nimport LoggedUser from \"./LoggedUser\";\nimport {getUser, getLogin} from \"../../../redux/actions/usersActions\";\nimport {setIsDark} from \"../../../redux/actions/valuesActions\";\n\nconst mapStateToProps = state => ({\n   user: getUser(state),\n   isLogin: getLogin(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n   setIsDark: isDark => dispatch(setIsDark(isDark))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedUser);\n","import { grey, red, green, orange, yellow, amber, blueGrey } from \"@material-ui/core/colors\";\nimport backParentDark from '../images/backParentDark.jpg';\nimport backParentLight from '../images/backParentLight.jpg';\nimport backTeacherDark from '../images/backTeacherDark.jpg';\nimport backTeacherLight from '../images/backTeacherLight.jpg';\nimport backPrincipalLight from '../images/backPrincipalLight.jpg';\nimport backPrincipalDark from '../images/backPrincipalDark.jpg';\n\nconst AppTheme = {\n    DARK: 'dark',\n    LIGHT: 'light'\n};\n\nconst appThemeOptions = {\n    [AppTheme.LIGHT]: {\n        palette: {\n            type: 'light',\n            primary: {\n                light: grey[600],\n                main: '#000',\n                dark: green[200]\n            },\n            secondary: {\n                light: grey[300],\n                main: '#009dde',\n                dark: grey[200]\n            },\n            action: {\n                light: red[500],\n                main: red[500],\n                dark: green[500],\n                warning: orange[700],\n                tab: blueGrey[100],\n                adding: blueGrey[300],\n                check: blueGrey[400],\n                header: grey[200],\n                item: grey[300],\n                title: yellow[400],\n                info: grey[800]\n            },\n            scales: {\n                first: amber[500],\n                second: orange[700],\n                third: red[700]\n            },\n            background: {\n                parent: `url(${backParentLight})`,\n                teacher: `url(${backTeacherLight})`,\n                principal: `url(${backPrincipalLight})`\n            }\n        },\n        typography: {\n            subtitle2: {\n                fontWeight: 800\n            }\n        }\n    },\n    [AppTheme.DARK]: {\n        palette: {\n            type: 'dark',\n            primary: {\n                light: grey[400],\n                main: grey[100],\n                dark: green[600]\n            },\n            secondary: {\n                light: grey[800],\n                main: '#009dde',\n                dark: grey[700]\n            },\n            action: {\n                light: red[300],\n                main: red[500],\n                dark: green[400],\n                warning: orange[500],\n                tab: blueGrey[700],\n                adding: blueGrey[600],\n                check: blueGrey[400],\n                header: grey[700],\n                item: grey[600],\n                title: grey[200],\n                info: grey[300]\n            },\n            scales: {\n                first: yellow[200],\n                second: orange[400],\n                third: red[300]\n            },\n            background: {\n                parent: `url(${backParentDark})`,\n                teacher: `url(${backTeacherDark})`,\n                principal: `url(${backPrincipalDark})`\n            }\n        },\n        typography: {\n            subtitle2: {\n                fontWeight: 800\n            }\n        }\n    }\n};\n\nexport default appThemeOptions;\n","import React from 'react';\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core\";\nimport {Grid} from '@material-ui/core';\nimport PageContainer from '../PageContainer/PageContainter';\nimport NavBar from '../../features/NavBar/NavBar';\nimport Footer from \"../../features/Footer/FooterContainer\";\nimport LoggedUser from \"../../features/LoggedUser/LoggedUserContainer\";\nimport AppThemeOptions from './../../../utilities/theme';\n\nconst MainLayout = ({children, isLogin, loggedUser, isDark}) => {\n    const muiTheme = createMuiTheme(AppThemeOptions[`${isDark ? 'dark' : 'light'}`]);\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <PageContainer>\n                <Grid item lg={2}>\n                    <NavBar isLogin={isLogin} loggedUser={loggedUser}/>\n                </Grid>\n                <Grid item lg={10}>\n                    <LoggedUser/>\n                    {children}\n                </Grid>\n                <Grid item lg={12}>\n                    <Footer/>\n                </Grid>\n            </PageContainer>\n        </MuiThemeProvider>\n\n    )\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {style} from \"../../../styles/global\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.light\n    },\n    info: {\n        padding: style.baseSize,\n        textAlign: 'center',\n        fontWeight: 600\n    }\n}));\n\nconst PageTitle = ({children}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <Typography className={classes.info} variant='h5' color='secondary'>{children}</Typography>\n        </Paper>\n    )\n};\n\nPageTitle.propTypes = {\n    children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        height: style.contentHeight,\n        padding: style.baseSize,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column-reverse'\n    },\n    first: {\n        position: 'absolute',\n        width: 550,\n        height: 360,\n        top: 60,\n        left: 10,\n        right: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.secondary.light\n    },\n    second: {\n        position: 'absolute',\n        width: 550,\n        height: 360,\n        top: 10,\n        left: 450,\n        right: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.secondary.light\n    },\n    third: {\n        position: 'absolute',\n        width: 550,\n        height: 360,\n        top: 230,\n        left: 230,\n        right: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.secondary.light\n    },\n    description: {\n        width: '100%',\n        padding: `${style.smallSize} 0`\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center'\n    },\n    slider: {\n        width: 100\n    },\n    operation: {\n        width: 200,\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    Typography,\n    Slider,\n    Tooltip,\n    IconButton,\n    Fade\n} from \"@material-ui/core\";\nimport Grow from \"@material-ui/core/Grow\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport componentStyle from \"./WelcomeContentStyle\";\nimport showImage1 from '../../../images/showImage1.png';\nimport showImage2 from '../../../images/showImage2.png';\nimport showImage3 from '../../../images/showImage3.png';\nimport showImage4 from '../../../images/showImage4.png';\nimport showImage5 from '../../../images/showImage5.png';\nimport showImage6 from '../../../images/showImage6.png';\nimport showImage7 from '../../../images/showImage7.png';\nimport showImage8 from '../../../images/showImage8.png';\nimport showImage9 from '../../../images/showImage9.png';\nimport showImage10 from '../../../images/showImage10.png';\nimport showImage11 from '../../../images/showImage11.png';\nimport showImage12 from '../../../images/showImage12.png';\nimport showImage13 from '../../../images/showImage13.png';\nimport showImage14 from '../../../images/showImage14.png';\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst collection = [\n    {\n        image: showImage1,\n        description: \"Parent or guardian's home page (dark mode)\"\n    },\n    {\n        image: showImage2,\n        description: \"Teacher's home page (light mode)\"\n    },\n    {\n        image: showImage3,\n        description: \"Principal's home page\"\n    },\n    {\n        image: showImage4,\n        description: \"Parent's data section\"\n    },\n    {\n        image: showImage5,\n        description: \"Selected student's grades viewed from their parent's account\"\n    },\n    {\n        image: showImage6,\n        description: \"Teachers' contact data viewed by a parent\"\n    },\n    {\n        image: showImage7,\n        description: \"Adding a grade from a teacher's account\"\n    },\n    {\n        image: showImage8,\n        description: \"Editing a grade from a teacher's account\"\n    },\n    {\n        image: showImage9,\n        description: \"Students' list in the teacher's mode\"\n    },\n    {\n        image: showImage10,\n        description: 'Configuration panel of the selected class in the principal mode'\n    },\n    {\n        image: showImage11,\n        description: \"Editable list of teachers viewed from the principal's mode\"\n    },\n    {\n        image: showImage12,\n        description: 'List of teachers in the principal mode'\n    },\n    {\n        image: showImage13,\n        description: 'List of students in the principal mode'\n    },\n    {\n        image: showImage14,\n        description: 'List of parents or guardians in the principal mode'\n    }\n];\n\nconst WelcomeContent = () => {\n    const top = 30;\n    const between = 20;\n    const bottom = 10;\n    const [value, setValue] = useState(2);\n    const [step, setStep] = useState(5);\n    const [counter, setCounter] = useState(0);\n    const [isReady, setIsReady] = useState(true);\n    const [firstZindex, setFirstZindex] = useState(bottom);\n    const [secondZindex, setSecondZindex] = useState(between);\n    const [thirdZindex, setThirdZindex] = useState(top);\n    const [isShowFirst, setIsShowFirst] = useState(false);\n    const [isShowSecond, setIsShowSecond] = useState(false);\n    const [isShowThird, setIsShowThird] = useState(false);\n    const [firstValue, setFirstValue] = useState(collection[0]);\n    const [secondValue, setSecondValue] = useState(collection[1]);\n    const [thirdValue, setThirdValue] = useState(collection[2]);\n    const [firstIsClosed, setFirstIsClosed] = useState(false);\n    const [secondIsClosed, setSecondIsClosed] = useState(false);\n    const [thirdIsClosed, setThirdIsClosed] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n\n            if (isReady) setCounter(counter => counter + 1);\n        }, 1000);\n\n        return () => {\n            clearInterval(timer);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isReady]);\n\n    useEffect(() => {\n\n        if (isReady) {\n\n            if (counter === 0) {\n                setIsShowFirst(true);\n            }\n\n            if (counter === step) {\n                setIsShowSecond(true);\n\n                if (isShowSecond) setIsShowSecond(false);\n            }\n\n            if (counter === (2 * step)) {\n                setIsShowThird(true);\n\n                if (isShowThird) setIsShowThird(false);\n            }\n\n            if (counter === (3 * step)) {\n                setIsShowFirst(false);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [counter, step, isReady]);\n\n    useEffect(() => {\n        let timer = 0;\n\n        if (firstIsClosed) timer = setTimeout(() => setCounter(0), 500);\n\n        if (secondIsClosed) timer = setTimeout(() => setIsShowSecond(true), 500);\n\n        if (thirdIsClosed) timer = setTimeout(() => setIsShowThird(true), 500);\n\n        return () => {\n            clearTimeout(timer);\n        }\n\n    }, [firstIsClosed, secondIsClosed, thirdIsClosed]);\n\n    const handleSlider = (event, newValue) => {\n        setStep(newValue);\n\n        if (firstZindex === bottom) {\n            setCounter(3 * step);\n        } else if (secondZindex === bottom) {\n            setCounter(step);\n        } else if (thirdZindex === bottom) {\n            setCounter(2 * step);\n        }\n        setIsShowFirst(true);\n        setIsShowSecond(true);\n        setIsShowThird(true);\n    };\n\n    const changeSlide = slideNumber => {\n\n        if (slideNumber === 1) {\n\n            if (value !== (collection.length - 1)) {\n                setFirstValue(collection[value + 1]);\n                setValue(value => value + 1);\n\n            } else {\n                setFirstValue(collection[0]);\n                setValue(0);\n\n            }\n            setFirstZindex(top);\n            setThirdZindex(between);\n            setSecondZindex(bottom);\n        } else if (slideNumber === 2) {\n\n            if (value !== (collection.length - 1)) {\n                setSecondValue(collection[value + 1]);\n                setValue(value => value + 1);\n\n            } else {\n                setSecondValue(collection[0]);\n                setValue(0);\n\n            }\n            setSecondZindex(top);\n            setFirstZindex(between);\n            setThirdZindex(bottom);\n        } else {\n\n            if (value !== (collection.length - 1)) {\n                setThirdValue(collection[value + 1]);\n                setValue(value => value + 1);\n\n            } else {\n                setThirdValue(collection[0]);\n                setValue(0);\n            }\n            setThirdZindex(top);\n            setSecondZindex(between);\n            setFirstZindex(bottom);\n        }\n    };\n\n    const setSlide = slideNumber => new Promise(resolve => resolve(\n        changeSlide(slideNumber)\n    ));\n\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <Grow\n                in={isShowFirst}\n                timeout={1000}\n                onEntered={() => setFirstIsClosed(false)}\n                onExited={() => {\n                    setSlide(1)\n                        .then(() => setFirstIsClosed(true));\n                }}\n            >\n                <Paper elevation={9} className={classes.first} style={{zIndex: `${firstZindex}`}}>\n                    <img src={firstValue.image} alt={firstValue.description}/>\n                    <Typography align='center' className={classes.description}>{firstValue.description}</Typography>\n                </Paper>\n            </Grow>\n            <Grow\n                in={isShowSecond}\n                timeout={1000}\n                onEntered={() => setSecondIsClosed(false)}\n                onExited={() => {\n                    setSlide(2)\n                        .then(() => setSecondIsClosed(true));\n                }}\n            >\n                <Paper elevation={9} className={classes.second} style={{zIndex: `${secondZindex}`}}>\n                    <img src={secondValue.image} alt={secondValue.description}/>\n                    <Typography align='center' className={classes.description}>{secondValue.description}</Typography>\n                </Paper>\n            </Grow>\n            <Grow\n                in={isShowThird}\n                timeout={1000}\n                onEntered={() => setThirdIsClosed(false)}\n                onExited={() => {\n                    setSlide(3)\n                        .then(() => setThirdIsClosed(true));\n                }}\n            >\n                <Paper elevation={9} className={classes.third} style={{zIndex: `${thirdZindex}`}}>\n                    <img src={thirdValue.image} alt={thirdValue.description}/>\n                    <Typography align='center' className={classes.description}>{thirdValue.description}</Typography>\n                </Paper>\n            </Grow>\n            <div className={classes.footer}>\n                <div className={classes.operation}>\n                    <Tooltip\n                        title={isReady ? 'pause' : 'play'}\n                        placement='bottom'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={2000}\n                    >\n                        <span>\n                            <IconButton\n                                size='small'\n                                onClick={() => setIsReady(!isReady)}\n                            >\n                                {isReady ? <PauseIcon fontSize='small'/> : <PlayArrowIcon fontSize='small'/>}\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                    <Tooltip\n                        title='change speed'\n                        placement='bottom'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={2000}\n                    >\n                        <span>\n                            <Slider\n                                disabled={isReady}\n                                getAriaValueText={value => `${value}`}\n                                className={classes.slider}\n                                defaultValue={5}\n                                step={1}\n                                min={2}\n                                max={10}\n                                valueLabelDisplay=\"auto\"\n                                color='secondary'\n                                value={step}\n                                onChange={handleSlider}\n                            />\n                        </span>\n                    </Tooltip>\n                </div>\n            </div>\n        </Paper>\n    )\n};\n\nexport default WelcomeContent;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport WelcomeContent from \"../../features/WelcomeContent/WelcomeContent\";\n\nconst Welcome = () => (\n    <div>\n        <PageTitle>Welcome to School Diary</PageTitle>\n        <WelcomeContent/>\n    </div>\n);\n\nexport default Welcome;\n","export const API_URL = \"https://school-diary-rp.herokuapp.com/api\";\n// export const API_URL = \" http://localhost:7000/api\";\n","import {createActionName} from '../../utilities/functions';\n\nconst reducerName = 'class';\n\n//ACTIONS TYPE\nexport const LOAD_CLASS_BY_TEACHER_ID = createActionName(reducerName, 'LOAD_CLASS_BY_TEACHER_ID');\nexport const LOAD_ALL_CLASSES = createActionName(reducerName, 'LOAD_ALL_CLASSES');\nexport const SELECT_CLASS = createActionName(reducerName, 'SELECT_CLASS');\nexport const ADD_RATING_TO_STUDENT = createActionName(reducerName, 'ADD_RATING_TO_STUDENT');\nexport const UPDATE_RATING_TO_STUDENT = createActionName(reducerName, 'UPDATE_RATING_TO_STUDENT');\nexport const ADD_NEW_CLASS = createActionName(reducerName, 'ADD_NEW_CLASS');\nexport const UPDATE_STUDENT_IN_TEACHER_CLASS = createActionName(reducerName, 'UPDATE_STUDENT_IN_TEACHER_CLASS');\nexport const UPDATE_DATA_IN_SELECTED_CLASS = createActionName(reducerName, 'UPDATE_DATA_IN_SELECTED_CLASS');\nexport const UPDATE_TUTOR_IN_SELECTED_CLASS = createActionName(reducerName, 'UPDATE_TUTOR_IN_SELECTED_CLASS');\nexport const UPDATE_TUTOR_IN_ALL_CLASSES = createActionName(reducerName, 'UPDATE_TUTOR_IN_ALL_CLASSES');\nexport const UPDATE_LIST_IN_SELECTED_CLASS = createActionName(reducerName, 'UPDATE_LIST_IN_SELECTED_CLASS');\nexport const DELETE_CLASS_IN_ALL_CLASSES = createActionName(reducerName, 'DELETE_CLASS_IN_ALL_CLASSES');\n\n//CREATORS OF ACTIONS\nexport const loadClassByTeacher = allClass => ({allClass, type: LOAD_CLASS_BY_TEACHER_ID});\nexport const loadAllClasses = allClasses => ({allClasses, type: LOAD_ALL_CLASSES});\nexport const setSelectedClass = classItem => ({classItem, type: SELECT_CLASS});\nexport const addRatingToStudent = (classId, rating) => ({classId, rating, type: ADD_RATING_TO_STUDENT});\nexport const updateRatingToStudent = (classId, studentId, rating) =>\n    ({classId, studentId, rating, type: UPDATE_RATING_TO_STUDENT});\nexport const addNewClass = newClass => ({newClass, type: ADD_NEW_CLASS});\nexport const updateStudentInTeacherClass = student => ({student, type: UPDATE_STUDENT_IN_TEACHER_CLASS});\nexport const updateDataInSelectedClass = data => ({data, type: UPDATE_DATA_IN_SELECTED_CLASS});\nexport const updateTutorInSelectedClass = tutor => ({tutor, type: UPDATE_TUTOR_IN_SELECTED_CLASS});\nexport const updateTutorInAllClasses = (classId, tutorId) => ({classId, tutorId, type: UPDATE_TUTOR_IN_ALL_CLASSES});\nexport const updateListInSelectedClass = (isStudent, list) => ({isStudent, list, type: UPDATE_LIST_IN_SELECTED_CLASS});\nexport const deleteClassInAllClasses = id => ({id, type: DELETE_CLASS_IN_ALL_CLASSES});\n\n//SELECTORS\nexport const getTeacherAllClass = state => state.classes.teacherAllClass;\nexport const getAllClasses = state => state.classes.allClasses;\nexport const getSelectedClass = state => state.classes.selectedClass;\nexport const getAvailableNames = state => state.classes.availableNames;\n","import {createActionName} from \"../../utilities/functions\";\n\nconst reducerName = 'request';\n\n// ACTIONS\nexport const START_REQUEST = createActionName(reducerName, 'START_REQUEST');\nexport const STOP_REQUEST = createActionName(reducerName, 'STOP_REQUEST');\nexport const ERROR_REQUEST = createActionName(reducerName, 'ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName(reducerName, 'RESET_REQUEST');\nexport const START_ADDING_REQUEST = createActionName(reducerName, 'START_ADDING_REQUEST');\nexport const STOP_ADDING_REQUEST = createActionName(reducerName, 'STOP_ADDING_REQUEST');\nexport const START_WORKING_REQUEST = createActionName(reducerName, 'START_WORKING_REQUEST');\nexport const STOP_WORKING_REQUEST = createActionName(reducerName, 'STOP_WORKING_REQUEST');\nexport const START_UPDATING_REQUEST = createActionName(reducerName, 'START_UPDATING_REQUEST');\nexport const STOP_UPDATING_REQUEST = createActionName(reducerName, 'STOP_UPDATING_REQUEST');\nexport const START_GETING_REQUEST = createActionName(reducerName, 'START_GETING_REQUEST');\nexport const STOP_GETING_REQUEST = createActionName(reducerName, 'STOP_GETING_REQUEST');\n\n// CREATORS OF ACTIONS\nexport const startRequest = () => ({type: START_REQUEST});\nexport const stopRequest = () => ({type: STOP_REQUEST});\nexport const errorRequest = error => ({error, type: ERROR_REQUEST});\nexport const resetRequest = () => ({type: RESET_REQUEST});\nexport const startAddingRequest = () => ({type: START_ADDING_REQUEST});\nexport const stopAddingRequest = () => ({type: STOP_ADDING_REQUEST});\nexport const startWorkingRequest = () => ({type: START_WORKING_REQUEST});\nexport const stopWorkingRequest = () => ({type: STOP_WORKING_REQUEST});\nexport const startUpdatingRequest = () => ({type: START_UPDATING_REQUEST});\nexport const stopUpdatingRequest = () => ({type: STOP_UPDATING_REQUEST});\nexport const startGetingRequest = () => ({type: START_GETING_REQUEST});\nexport const stopGetingRequest = () => ({type: STOP_GETING_REQUEST});\n\n// SELECTORS\nexport const getRequest = store => store.request;\n","import {createActionName} from \"../../utilities/functions\";\n\nconst reducerName = 'students';\n\n//ACTIONS TYPE\nexport const LOAD_ALL_STUDENTS = createActionName(reducerName, 'LOAD_ALL_STUDENTS');\nexport const ADD_STUDENT = createActionName(reducerName, 'ADD_STUDENT');\nexport const UPDATE_STUDENT = createActionName(reducerName, 'UPDATE_STUDENT');\nexport const SET_FREE_STUDENTS = createActionName(reducerName, 'SET_FREE_STUDENTS');\nexport const SET_CLASSES_STUDENTS = createActionName(reducerName, 'SET_CLASSES_STUDENTS');\n\n//CREATORS OF ACTIONS\nexport const loadAllStudents = students => ({students, type: LOAD_ALL_STUDENTS});\nexport const addStudent = student => ({student, type: ADD_STUDENT});\nexport const updateStudent = student => ({student, type: UPDATE_STUDENT});\nexport const setFreeStudents = students => ({students, type: SET_FREE_STUDENTS});\nexport const setClassesStudents = students => ({students, type: SET_CLASSES_STUDENTS});\n\n//SELECTORS\nexport const getAllStudents = state => state.students.allStudents;\nexport const getStudentsAmount = state => state.students.allStudents.length;\nexport const getFreeStudents = state => state.students.freeStudents;\nexport const getClassesStudents = state => state.students.classesStudents;\n","import {\n    SET_LOGIN,\n    SET_REGISTER,\n    SET_USER,\n    UPDATE_USER_DATA,\n    LOAD_TEACHERS,\n    LOAD_PARENTS,\n    UPDATE_PARENT,\n    UPDATE_PARENT_STUDENT_CLASS_NAME,\n    LOAD_USERS_NAME,\n    REMOVE_USER_NAME,\n    ADD_PARENT,\n    ADD_CLASSNAME_TO_STUDENT\n} from \"../actions/usersActions\";\n\nconst initialState = {\n    isLogin: false,\n    register: {email: {}, password: {}},\n    teachers: [],\n    parents: [],\n    usersName: [],\n    user: {}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_LOGIN:\n            return {...state, isLogin: action.isLogin};\n        case SET_REGISTER:\n            return {...state, register: {email: action.login.email, password: action.login.password}};\n        case SET_USER:\n            return {...state, user: action.user};\n        case UPDATE_USER_DATA:\n            return {\n                ...state, user: {\n                    ...state.user,\n                    firstName: action.data.firstName,\n                    lastName: action.data.lastName,\n                    email: action.data.email,\n                    telephone: action.data.telephone\n                }\n            };\n        case LOAD_TEACHERS:\n            return {...state, teachers: action.teachers};\n        case LOAD_PARENTS:\n            return {...state, parents: action.parents};\n        case ADD_PARENT:\n            return {...state, parents: [...state.parents, action.parent]};\n        case UPDATE_PARENT:\n            return {\n                ...state, parents: state.parents.map(parent => {\n\n                    if (parent.id === action.id) {\n                        parent.students = action.studentsList;\n                    }\n                    return parent;\n                })\n            };\n        case UPDATE_PARENT_STUDENT_CLASS_NAME:\n            return {\n                ...state, parents: state.parents.map(parent => {\n\n                    if (parent.id === action.parentId) {\n                        parent.students.map(student => {\n\n                            if (student.id === action.studentId) {\n                                student.className = action.className;\n                            }\n                            return student;\n                        })\n                    }\n                    return parent;\n                })\n            };\n        case LOAD_USERS_NAME:\n            return {...state, usersName: action.users};\n        case REMOVE_USER_NAME:\n            return {...state, usersName: state.usersName.filter(user => user.id !== action.id)};\n        case ADD_CLASSNAME_TO_STUDENT:\n            return {\n                ...state, user: {\n                    ...state.user, students: state.user.students.map(student => {\n\n                        if (student.id === action.studentId) {\n                            student.className = action.className\n                        }\n                        return student;\n                    })\n                }\n            };\n        default:\n            return state\n    }\n};\n\nexport default reducer;\n","import {\n    START_REQUEST,\n    STOP_REQUEST,\n    ERROR_REQUEST,\n    RESET_REQUEST,\n    START_ADDING_REQUEST,\n    STOP_ADDING_REQUEST,\n    START_WORKING_REQUEST,\n    STOP_WORKING_REQUEST,\n    START_UPDATING_REQUEST,\n    STOP_UPDATING_REQUEST,\n    START_GETING_REQUEST,\n    STOP_GETING_REQUEST\n} from \"../actions/requestActions\";\n\nconst initialState = {\n    pending: false,\n    error: null,\n    success: null,\n    adding: false,\n    working: false,\n    updating: false,\n    geting: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case START_REQUEST:\n            return {...state, pending: true, error: null, success: null, adding: false};\n        case STOP_REQUEST:\n            return {...state, pending: false, error: null, success: true, adding: false};\n        case ERROR_REQUEST:\n            return {...state, pending: false, error: action.error, success: false, adding: false, working: false};\n        case RESET_REQUEST:\n            return {...state,\n                pending: false, error: null, success: null, adding: false, working: false, updating: false, geting: false\n            };\n        case START_ADDING_REQUEST:\n            return {...state, pending: false, error: null, success: true, adding: true, working: false};\n        case STOP_ADDING_REQUEST:\n            return {...state, pending: false, error: null, success: true, adding: false, working: false};\n        case START_WORKING_REQUEST:\n            return {...state, pending: false, error: null, success: true, adding: false, working: true};\n        case STOP_WORKING_REQUEST:\n            return {...state, pending: false, error: null, success: true, adding: false, working: false};\n        case START_UPDATING_REQUEST:\n            return {...state, updating: true};\n        case STOP_UPDATING_REQUEST:\n            return {...state, updating: false};\n        case START_GETING_REQUEST:\n            return {...state, geting: true};\n        case STOP_GETING_REQUEST:\n            return {...state, geting: false};\n        default:\n            return state\n    }\n};\n\nexport default reducer;\n","import {\n    LOAD_CLASS_BY_TEACHER_ID,\n    SELECT_CLASS,\n    ADD_RATING_TO_STUDENT,\n    UPDATE_RATING_TO_STUDENT,\n    LOAD_ALL_CLASSES,\n    ADD_NEW_CLASS,\n    UPDATE_STUDENT_IN_TEACHER_CLASS,\n    UPDATE_DATA_IN_SELECTED_CLASS,\n    UPDATE_TUTOR_IN_SELECTED_CLASS,\n    UPDATE_TUTOR_IN_ALL_CLASSES,\n    UPDATE_LIST_IN_SELECTED_CLASS,\n    DELETE_CLASS_IN_ALL_CLASSES\n} from \"../actions/classActions\";\n\nconst initialState = {\n    allClasses: [],\n    teacherAllClass: [],\n    selectedClass: {},\n    availableNames: {\n        grade: ['4', '5', '6', '7', '8'],\n        type: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_CLASS_BY_TEACHER_ID:\n            return {...state, teacherAllClass: action.allClass};\n        case LOAD_ALL_CLASSES:\n            return {...state, allClasses: action.allClasses};\n        case SELECT_CLASS:\n            return {...state, selectedClass: action.classItem};\n        case ADD_RATING_TO_STUDENT:\n\n            if (state.selectedClass.id === action.classId) {\n                return {\n                    ...state, selectedClass: {\n                        ...state.selectedClass,\n                        students: state.selectedClass.students.map(student => {\n                            student.ratings.forEach(rating => {\n\n                                if (rating.id === action.rating.id) {\n                                    student.ratings[student.ratings.indexOf(rating)] = action.rating;\n                                }\n                            });\n                            return student\n                        })\n                    }\n                };\n            }\n            break;\n        case UPDATE_RATING_TO_STUDENT:\n\n            if (state.selectedClass.id === action.classId) {\n                return {\n                    ...state, selectedClass: {\n                        ...state.selectedClass,\n                        students: state.selectedClass.students.map(student => {\n\n                            if (student.id === action.studentId) {\n                                student.ratings = student.ratings.map(rating => {\n                                    return (rating.id === action.rating.id) ? action.rating : rating\n                                });\n                            }\n                            return student;\n                        })\n                    }\n                }\n            }\n            break;\n        case ADD_NEW_CLASS:\n            return {\n                ...state, allClasses: [...state.allClasses, action.newClass]\n            };\n        case UPDATE_STUDENT_IN_TEACHER_CLASS:\n            return {\n                ...state, selectedClass:\n                    {\n                        ...state.selectedClass, students: state.selectedClass.students.map(student => {\n                            return (student.id === action.student.id) ? action.student : student\n                        })\n                    }\n            };\n        case UPDATE_DATA_IN_SELECTED_CLASS:\n            return {\n                ...state, selectedClass: {\n                    ...state.selectedClass,\n                    students: action.data.students,\n                    subjectTeachers: action.data.subjectTeachers\n                }\n            };\n        case UPDATE_TUTOR_IN_SELECTED_CLASS:\n            return {\n                ...state, selectedClass: {\n                    ...state.selectedClass, mainTeacher: action.tutor\n                }\n            };\n        case UPDATE_TUTOR_IN_ALL_CLASSES:\n            return {\n                ...state, allClasses: state.allClasses.map(item => {\n\n                    if (item.id === action.classId) {\n                        item.mainTeacher = {id: action.tutorId};\n                    }\n                    return item;\n                })\n            };\n        case UPDATE_LIST_IN_SELECTED_CLASS:\n            return {\n                ...state, selectedClass: {\n                    ...state.selectedClass,\n                    [action.isStudent ? 'students' : 'subjectTeachers']: action.list\n                }\n            };\n        case DELETE_CLASS_IN_ALL_CLASSES:\n            return {...state, allClasses: state.allClasses.filter(item => item.id !== action.id)};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {\n    SET_IS_DARK,\n    SET_IS_UPDATE_RATING,\n    SET_IS_NEW_RATING,\n    SET_IS_STUDENT_MODE,\n    SET_TUTOR_IS_USE,\n    SET_PATH,\n    SET_MODAL_YES_NOT,\n    SET_MAX_BIRTH_DATE,\n    SET_ALERT_SUCCESS,\n    SET_AVAILABLE\n} from \"../actions/valuesActions\";\n\nconst initialState = {\n    isDark: true,\n    isUpdateRating: false,\n    isNewRating: false,\n    isStudentMode: true,\n    tutorIsUse: true,\n    path: '/',\n    modalYesNot: {isOpen: false, content: {description: '', data: {}}},\n    ratingDescriptions: ['homework', 'teamwork', 'school test', 'response'],\n    ratingScales: [1, 2, 3],\n    availableSubjects: {\n        all: ['english', 'polish', 'german', 'math', 'biology', 'history', 'geography', 'physics', 'chemistry',\n            'information', 'physical education', 'form period', 'social studies', 'career counseling', 'music',\n            'art', 'family life education', 'technology', 'natural science', 'safety education'],\n        class8: ['polish', 'math', 'english', 'german', 'history', 'geography', 'biology', 'chemistry', 'physics',\n            'informatics', 'physical education', 'form period', 'social studies', 'safety education',\n            'career counseling'],\n        class7: ['polish', 'math', 'english', 'german', 'history', 'geography', 'biology', 'chemistry', 'physics',\n            'informatics', 'physical education', 'form period', 'family life education', 'music', 'art',\n            'career counseling'],\n        class6: ['polish', 'math', 'english', 'history', 'natural science', 'technology', 'music', 'art',\n            'informatics', 'physical education', 'form period', 'family life education'],\n        class5: ['biology', 'geography', 'history', 'informatics', 'english', 'polish', 'math', 'music', 'art',\n            'technology', 'family life education', 'physical education', 'form period'],\n        class4: ['history', 'informatics', 'english', 'polish', 'math', 'music', 'art', 'natural science',\n            'technology', 'family life education', 'physical education', 'form period']\n    },\n    maxBirthDate: '2014-01-01',\n    alertSuccess: {isOpen: false, message: ''},\n    available: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_IS_DARK:\n            return {...state, isDark: action.isDark};\n        case SET_IS_UPDATE_RATING:\n            return {...state, isUpdateRating: action.isUpdate};\n        case SET_IS_NEW_RATING:\n            return {...state, isNewRating: action.isNewRating};\n        case SET_IS_STUDENT_MODE:\n            return {...state, isStudentMode: action.isStudentMode};\n        case SET_TUTOR_IS_USE:\n            return {...state, tutorIsUse: action.isUse};\n        case SET_PATH:\n            return {...state, path: action.path};\n        case SET_MODAL_YES_NOT:\n            return {...state, modalYesNot: {isOpen: action.isOpen, content: action.content}};\n        case SET_MAX_BIRTH_DATE:\n            return {...state, maxBirthDate: action.date};\n        case SET_ALERT_SUCCESS:\n            return {...state, alertSuccess: {isOpen: action.isOpen, message: action.message}};\n        case SET_AVAILABLE:\n            return {...state, available: action.available};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import {\n    LOAD_ALL_STUDENTS,\n    UPDATE_STUDENT,\n    ADD_STUDENT,\n    SET_FREE_STUDENTS,\n    SET_CLASSES_STUDENTS\n} from \"../actions/studentActions\";\n\nconst initialState = {\n    allStudents: [],\n    freeStudents: [],\n    classesStudents: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_ALL_STUDENTS:\n            return {...state, allStudents: action.students};\n        case ADD_STUDENT:\n            return {...state, allStudents: [...state.allStudents, action.student]};\n        case UPDATE_STUDENT:\n            return {...state, allStudents: state.allStudents.map(student => {\n                if (student.id === action.student.id) {\n                    return action.student;\n                } else {\n                    return student;\n                }\n                })};\n        case SET_FREE_STUDENTS:\n            return {...state, freeStudents: action.students};\n        case SET_CLASSES_STUDENTS:\n            return {...state, classesStudents: action.students};\n        default:\n            return state\n    }\n};\n\nexport default reducer;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport user from './reducers/usersReducer';\nimport request from './reducers/requestReducer';\nimport classes from './reducers/classReducer';\nimport values from './reducers/valuesReducer';\nimport students from './reducers/studentsReducer';\n\nconst reducers = combineReducers({\n    user,\n    request,\n    classes,\n    values,\n    students\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nexport default store;\n","import axios from 'axios';\nimport {API_URL} from \"../config\";\nimport CryptoJS from 'crypto-js';\nimport {\n    setUser,\n    setLogin,\n    updateUserData,\n    loadTeachers,\n    loadParents,\n    updateParent,\n    updateParentStudentClassName,\n    loadUsersName,\n    removeUserName,\n    addParent,\n    addClassnameToStudent\n} from \"./actions/usersActions\";\nimport {\n    loadClassByTeacher,\n    addRatingToStudent,\n    updateRatingToStudent,\n    loadAllClasses,\n    addNewClass,\n    updateStudentInTeacherClass,\n    setSelectedClass,\n    updateDataInSelectedClass,\n    updateTutorInSelectedClass,\n    updateListInSelectedClass,\n    updateTutorInAllClasses,\n    deleteClassInAllClasses\n} from \"./actions/classActions\";\nimport {\n    startRequest,\n    stopRequest,\n    errorRequest,\n    startAddingRequest,\n    stopAddingRequest,\n    startWorkingRequest,\n    stopWorkingRequest,\n    startUpdatingRequest,\n    stopUpdatingRequest,\n    startGetingRequest,\n    stopGetingRequest\n} from \"./actions/requestActions\";\nimport {\n    loadAllStudents,\n    updateStudent,\n    addStudent,\n    setFreeStudents,\n    setClassesStudents\n} from \"./actions/studentActions\";\nimport {\n    setAlertSuccess,\n    setTutorIsUse,\n    setIsStudentMode,\n    setPath\n} from \"./actions/valuesActions\";\nimport store from './store';\n\nexport const loadUserByLogin = login => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/users/login`, {params: {email: login.email}});\n\n            if (res.data !== null) {\n                let decrypted = CryptoJS.AES.decrypt(res.data.password, 'secret key 220473').toString(CryptoJS.enc.Utf8);\n\n                if (decrypted === login.password) {\n                    let user = res.data;\n                    user.password = '';\n\n                    if (user.status === 'parent' && user.students.length) {\n                        user.students.map(student => {\n                            student.className = 'none';\n                            return student;\n                        });\n                    }\n                    await dispatch(stopRequest());\n                    await dispatch(setUser(user));\n                    await dispatch(setLogin(true));\n                    dispatch(setPath('/'));\n                } else {\n                    dispatch(errorRequest(\"Wrong password!\"));\n                }\n            }\n        } catch (err) {\n            dispatch(errorRequest(\"User don't exist!!!\"));\n        }\n    }\n};\n\nexport const addUser = user => {\n    return async dispatch => {\n        dispatch(startRequest());\n        user.password = CryptoJS.AES.encrypt(user.password, 'secret key 220473').toString();\n\n        try {\n            await axios.post(`${API_URL}/users`, user);\n            dispatch(stopRequest());\n            dispatch(setPath('/login'));\n        } catch (err) {\n            dispatch(errorRequest(\n                `${err.message.includes('code 500') ? 'Email address already exists' : err.message}`\n            ))\n        }\n    }\n};\n\nexport const updateUserRequest = (id, studentsList, data) => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/users/parent/${id}`, {studentsList});\n            dispatch(updateParent(res.data.id, studentsList));\n            dispatch(setAlertSuccess(true,\n                `Student ${data.studentName} ${data.isAdd ?\n                    'has been assigned' : 'is no longer assigned'} to a parent ${data.parentName}.`));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const deleteParentRequest = (id, page) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.delete(`${API_URL}/users/${id}`);\n            dispatch(removeUserName(id));\n            await dispatch(loadParentsRequestWithRange(page + 1, 7));\n            dispatch(setAlertSuccess(true, `Parent ${res.data.name} has been removed.`));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const deleteTeacherRequest = (id, page, rowsPerPage) => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.delete(`${API_URL}/users/${id}`);\n            dispatch(removeUserName(id));\n            await dispatch(loadTeachersRequestWithRange(page + 1, rowsPerPage));\n            dispatch(setAlertSuccess(true, `Teacher ${res.data.name} has been removed.`));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadAllClassesRequest = () => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/class`);\n            dispatch(loadAllClasses(res.data));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadStudentsIdFromClasses = () => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/classes/students`);\n            dispatch(setClassesStudents(res.data));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const loadAllClassByTeacherId = teacherId => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/classes/${teacherId}`);\n            dispatch(loadClassByTeacher(res.data));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const loadClassById = id => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/class/${id}`);\n            dispatch(setSelectedClass(res.data));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadDataForClassByIdRequest = id => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/class/principal/${id}`);\n            dispatch(updateDataInSelectedClass(res.data));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const updateTutorClassRequest = classItem => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/class/tutor`, classItem);\n            dispatch(setAlertSuccess(true,\n                `${res.data.name} tutor has been changed to ${res.data.mainTeacher.lastName}\n                 ${res.data.mainTeacher.firstName}`));\n            await dispatch(updateTutorInSelectedClass(res.data.mainTeacher));\n            await dispatch(updateTutorInAllClasses(classItem.id, res.data.mainTeacher.id));\n            dispatch(setTutorIsUse(true));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const updateClassRequest = classItem => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/class`, classItem);\n            dispatch(setAlertSuccess(true,\n                `${classItem.isStudents ?\n                    'Students' : 'Teachers'} list of ${res.data} has been changed.`));\n\n            if (classItem.isStudents) await dispatch(loadStudentsIdFromClasses());\n            dispatch(updateListInSelectedClass(classItem.isStudents,\n                classItem.isStudents ? classItem.students : classItem.subjectTeachers));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const addRatingForStudent = (classId, dataPackage) => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.post(`${API_URL}/ratings/${dataPackage.ratingsId}`, dataPackage.rating);\n            dispatch(addRatingToStudent(classId, res.data));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const updateRatingForStudent = dataPackage => {\n    return async dispatch => {\n        dispatch(startWorkingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/ratings/${dataPackage.ratingsId}`, dataPackage.rating);\n            dispatch(updateRatingToStudent(dataPackage.classId, dataPackage.studentId, res.data));\n            dispatch(stopWorkingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const deleteRatingForStudent = (id, _id, classId, studentId) => {\n    return async dispatch => {\n        dispatch(startWorkingRequest());\n\n        try {\n            let res = await axios.delete(`${API_URL}/ratings/${id}/${_id}`);\n            dispatch(updateRatingToStudent(classId, studentId, res.data));\n            dispatch(stopWorkingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadTeachersRequest = () => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            await new Promise(resolve => setTimeout(resolve, 2000));\n            let res = await axios.get(`${API_URL}/users/teachers`);\n            dispatch(loadTeachers(res.data));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadParentByIdRequest = (id, isAdd) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/users/parent/${id}`);\n            let studentsId = res.data.students.map(student => student.id);\n            let parent = res.data;\n\n            if (studentsId.length) {\n                let resNext = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n                let studentsIdInClasses = resNext.data.map(item => item.id);\n                parent.students = parent.students.map(student => {\n\n                    if (studentsIdInClasses.includes(student.id)) {\n                        let classItem = resNext.data.find(item => item.id === student.id);\n                        student.className = classItem.name;\n                    } else {\n                        student.className = 'no class'\n                    }\n                    return student\n                });\n            }\n            isAdd ? dispatch(addParent(parent)) : dispatch(loadParents([parent]));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadTeacherByIdRequest = id => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/users/teacher/${id}`);\n            let teacher = res.data;\n            let resNext = await axios.get(`${API_URL}/classes/teachers/name`,\n                {params: {teachersId: [teacher.id]}});\n\n            if (resNext.data.tutors.length) {\n                teacher.tutorClass = resNext.data.tutors[0].tutorClass\n            } else {\n                teacher.tutorClass = 'no assigned'\n            }\n\n            if (resNext.data.teachersInClass.length) {\n                teacher.teacherClasses = resNext.data.teachersInClass.map(item => {\n                    return {\n                        className: item.className,\n                        studentsAmount: item.studentsAmount\n                    }\n                })\n            } else {\n                teacher.teacherClasses = []\n            }\n            dispatch(loadTeachers([teacher]));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadTeachersRequestWithRange = (page, itemsPerPage) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let start = Math.ceil((page - 1) * itemsPerPage);\n            let limit = itemsPerPage;\n            let teachers = await axios.get(`${API_URL}/users/teacher/${start}/${limit}`);\n            let teachersId = teachers.data.map(teacher => teacher.id);\n            let selectedTeachers = teachers.data;\n            let res = await axios.get(`${API_URL}/classes/teachers/name`, {params: {teachersId}});\n            const {teachersInClass, tutors} = res.data;\n            let tutorsId = tutors.map(tutor => tutor.tutorId);\n            await selectedTeachers.forEach(teacher => {\n                let teacherClasses = [];\n\n                if (tutorsId.includes(teacher.id)) {\n                    teacher.tutorClass = tutors.find(item => item.tutorId === teacher.id).tutorClass;\n                } else {\n                    teacher.tutorClass = 'no assigned'\n                }\n\n                teachersInClass.forEach(item => {\n\n                    if (item.id === teacher.id) {\n                        teacherClasses = [...teacherClasses, {\n                            className: item.className,\n                            studentsAmount: item.studentsAmount\n                        }]\n                    }\n                });\n                teacher.teacherClasses = teacherClasses;\n            });\n            dispatch(loadTeachers(selectedTeachers));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const loadParentsRequestWithRange = (page, itemsPerPage) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let studentsInClassesId = [];\n            let classNames = [];\n            let start = Math.ceil((page - 1) * itemsPerPage);\n            let limit = itemsPerPage;\n            let parents = await axios.get(`${API_URL}/users/parent/${start}/${limit}`);\n            const allStudents = store.getState().students.allStudents;\n            let studentsId = [];\n            await parents.data.forEach(parent => {\n                let studentsForParent = [];\n                allStudents.forEach(student => {\n\n                    if (parent.students.includes(student._id)) {\n                        studentsForParent.push(student);\n                        studentsId = [...studentsId, student.id]\n                    }\n                });\n                parent.students = studentsForParent;\n            });\n\n            if (studentsId.length) {\n                let res = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n                classNames = res.data;\n                studentsInClassesId = classNames.map(item => item.id);\n            }\n\n            let allParents = parents.data;\n            await allParents.forEach(parent => {\n                parent.students = parent.students.map(student => {\n\n                    if (studentsInClassesId.includes(student.id)) {\n                        student.className = classNames.find(item => item.id === student.id).name\n                    } else {\n                        student.className = 'none class'\n                    }\n                    return student;\n                })\n            });\n            dispatch(loadParents(allParents));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const addClassRequest = payload => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.post(`${API_URL}/class`, payload);\n            let newClass = res.data;\n            newClass.mainTeacher = payload.mainTeacher;\n            dispatch(addNewClass(newClass));\n            dispatch(setAlertSuccess(true, `${payload.name} has been added.`));\n            dispatch(setTutorIsUse(true));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const deleteClassByIdRequest = id => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.delete(`${API_URL}/class/${id}`);\n            dispatch(setAlertSuccess(true, `${res.data.name} has been removed.`));\n            await dispatch(deleteClassInAllClasses(id));\n            await dispatch(loadStudentsIdFromClasses());\n            dispatch(setTutorIsUse(true));\n            dispatch(setIsStudentMode(true));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getAllStudentsRequest = () => {\n    return async dispatch => {\n        dispatch(startWorkingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/students`);\n            dispatch(loadAllStudents(res.data));\n            dispatch(stopWorkingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getUsersNameRequest = status => {\n    return async dispatch => {\n        dispatch(startWorkingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/users/name/${status}`);\n            dispatch(loadUsersName(res.data));\n            dispatch(stopWorkingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getStudentByIdRequest = id => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/student/${id}`);\n            let studentsId = [id];\n            let student = res.data;\n            let resNext = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n\n            if (resNext.data.length) {\n                student.className = resNext.data[0].name;\n            } else {\n                student.className = 'no assigned';\n            }\n            dispatch(loadAllStudents([student]));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getStudentsWithRangeRequest = (page, itemsPerPage) => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let result = [];\n            let start = Math.ceil((page - 1) * itemsPerPage);\n            let limit = itemsPerPage;\n            let res = await axios.get(`${API_URL}/students/${start}/${limit}`);\n            let studentsId = res.data.map(item => item.id);\n            let resNext = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n            await res.data.forEach(student => {\n                resNext.data.forEach(item => {\n\n                    if (student.id === item.id) {\n                        result = [...result, {\n                            id: student.id,\n                            className: item.name,\n                            firstName: student.firstName,\n                            lastName: student.lastName,\n                            birthDate: student.birthDate,\n                            parents: student.parents\n                        }]\n                    }\n                })\n            });\n            studentsId = result.map(student => student.id);\n            res.data.forEach(student => {\n\n                if (!studentsId.includes(student.id)) {\n                    student.className = 'no assigned';\n                    result = [...result, student];\n                }\n            });\n\n            dispatch(loadAllStudents(result));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getStudentsNamesRequest = () => {\n    return async dispatch => {\n        dispatch(startWorkingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/students/names`);\n            dispatch(setFreeStudents(res.data));\n            dispatch(stopWorkingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getStudentsIdRequest = () => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/students/onlyid`);\n            dispatch(loadAllStudents(res.data));\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getStudentsByIdRequest = studentsId => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/students/select`, {params: {studentsId}});\n            dispatch(setFreeStudents(res.data));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const addStudentRequest = student => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.post(`${API_URL}/student`, student);\n            dispatch(setAlertSuccess(true,\n                `Student ${res.data.firstName} ${res.data.lastName} has be added.`));\n            dispatch(addStudent(res.data));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const updateUserDataRequest = (isPassword, isDataChange, userAfterChange) => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/users`, {isPassword, isDataChange, userAfterChange});\n\n            if (isDataChange) {\n                dispatch(updateUserData(userAfterChange));\n\n                if (isPassword && res.data.resultPassword !== null) {\n                    dispatch(setAlertSuccess(true, `${res.data.resultData}. ${res.data.resultPassword}`))\n                }\n\n                if (isPassword && res.data.resultPassword === null) {\n                    dispatch(setAlertSuccess(true, res.data.resultData));\n                    setTimeout(() =>\n                        dispatch(errorRequest(\"Incorrect old password !!! Password has not been changed.\")), 6000);\n                }\n\n                if (!isPassword) dispatch(setAlertSuccess(true, res.data.resultData))\n\n            }\n\n            if (isPassword && !isDataChange) {\n                res.data.resultPassword !== null ? dispatch(setAlertSuccess(true, res.data.resultPassword)) :\n                    dispatch(errorRequest(\"Incorrect old password !!! Password has not been changed.\"))\n            }\n            dispatch(stopUpdatingRequest())\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const updateStudentRequest = (id, parent, isAdd) => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/student/parents/${id}`, {parent: parent, isAdd});\n\n            if (isAdd) {\n                let studentsId = [res.data.studentId];\n                let resNext = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n\n                if (resNext.data.length) {\n                    dispatch(updateParentStudentClassName(parent.id, res.data.studentId, resNext.data[0].name));\n                } else {\n                    dispatch(updateParentStudentClassName(parent.id, res.data.studentId, 'none class'));\n                }\n            }\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const updateStudentBasicDataRequest = student => {\n    return async dispatch => {\n        dispatch(startAddingRequest());\n\n        try {\n            let res = await axios.put(`${API_URL}/student/basic`,\n                {\n                    id: student.id, firstName: student.firstName,\n                    lastName: student.lastName, birthDate: student.birthDate\n                });\n            dispatch(setAlertSuccess(true, `Student ${res.data.studentName} data has been changed.`));\n            dispatch(updateStudent(student));\n            dispatch(stopAddingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const deleteStudentRequest = studentId => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.delete(`${API_URL}/student/${studentId}`);\n\n            if (res.data.ratings.length) {\n                await axios.delete(`${API_URL}/ratings`,\n                    {data: {ratingsId: res.data.ratings}})\n            }\n            dispatch(getStudentsNamesRequest());\n            dispatch(getStudentsWithRangeRequest(1, 5));\n            dispatch(setAlertSuccess(true, `Student ${res.data.studentName} has been removed.`));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const addSubjectRating = (student, subject) => {\n    return async dispatch => {\n        dispatch(startUpdatingRequest());\n\n        try {\n            let res = await axios.post(`${API_URL}/rating`, {studentId: student.id, subject});\n            await axios.post(`${API_URL}/student/subject`, {id: student.id, rating: res.data});\n            let studentAfterChange = student;\n            studentAfterChange.ratings = [...studentAfterChange.ratings, res.data];\n            dispatch(updateStudentInTeacherClass(studentAfterChange));\n            dispatch(stopUpdatingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const getTeacherStudentsNameRequest = classesId => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/classes/teacher/students`, {params: {classesId}});\n            dispatch(loadAllStudents(res.data));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getTeacherStudentsByIdRequest = students => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let studentsId = students.map(student => student.id);\n            let res = await axios.get(`${API_URL}//students/teacher`, {params: {studentsId}});\n            let result = [];\n\n            if (res.data.length) {\n                students.forEach(student => {\n                    res.data.forEach(item => {\n\n                        if (student.id === item.id) {\n                            result = [...result, {\n                                id: student.id,\n                                name: student.name,\n                                className: student.className,\n                                birthDate: item.birthDate,\n                                parents: item.parents\n                            }]\n                        }\n                    })\n                })\n            }\n            dispatch(setClassesStudents(result));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getClassNameForStudentByIdRequest = studentsId => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/classes/students/name`, {params: {studentsId}});\n            let names = res.data;\n\n            if (names.length) {\n                names.forEach(item => {\n                    dispatch(addClassnameToStudent(item.id, item.name))\n                })\n            }\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nexport const getTeachersByClassNameRequest = name => {\n    return async dispatch => {\n        dispatch(startGetingRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/class/teachers`, {params: {name}});\n            dispatch(setSelectedClass(res.data));\n            dispatch(stopGetingRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {InputLabel, MenuItem, FormControl, Select} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    disabled: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\nconst SelectRegister = props => {\n    const {selectTitle, isDisabled, options, takeSelected, ...otherProps} = props;\n    const [selectedItem, setSelectedItem] = useState(isDisabled === undefined ? options[0] : '');\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (isDisabled !== undefined && isDisabled) {\n            setSelectedItem('')\n        }\n        takeSelected(selectedItem);\n    }, [selectedItem, isDisabled, takeSelected]);\n\n    return (\n        <FormControl>\n            <InputLabel\n                className={isDisabled ? classes.disabled : ''}\n                id={selectTitle}>{selectTitle}\n            </InputLabel>\n            <Select\n                {...otherProps}\n                labelId={selectTitle}\n                id={`select-${selectTitle}`}\n                disabled={isDisabled}\n                value={selectedItem}\n                onChange={event => setSelectedItem(event.target.value)}\n                >\n                {options.map((item, i) => {\n                    return <MenuItem key={i} value={item}>{item}</MenuItem>\n\n                })}\n            </Select>\n        </FormControl>\n    )\n};\n\nSelectRegister.propTypes = {\n    selectTitle: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool,\n    options: PropTypes.array.isRequired,\n    takeSelected: PropTypes.func.isRequired\n};\n\nexport default SelectRegister;\n","import React from 'react';\nimport MaskedInput from \"react-text-mask/dist/reactTextMask\";\nimport PropTypes from \"prop-types\";\n\nconst TextMaskCustom = props => {\n    const {inputRef, ...other} = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={['(', '0', '0', /[0-9]/, /[0-9]/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n            showMask\n        />\n    );\n};\n\nTextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nexport default TextMaskCustom;\n","import React from 'react';\nimport {Spinner as SpinnerStrap} from 'reactstrap';\nimport './Spinner.scss';\n\nconst Spinner = ({...otherProps}) => (\n    <div className='spinner-main' {...otherProps}>\n        <SpinnerStrap size='sm' color='info'/>\n        <SpinnerStrap style={{margin: '0 20px'}} size='sm' color='info'/>\n        <SpinnerStrap size='sm' color='info'/>\n    </div>\n);\n\nexport default Spinner\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Slide from '@material-ui/core/Slide';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SlideTransition = props => {\n    return <Slide {...props} direction='left'/>\n};\n\nconst useStyles = makeStyles(theme => ({\n    rootMessage: {\n        backgroundColor: 'inherit',\n        color: '#fff'\n    },\n    success: {\n        backgroundColor: theme.palette.action.dark\n    },\n    error: {\n        backgroundColor: theme.palette.action.light\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n}));\n\nconst MessageContent = props => {\n    const {message, className, variant} = props;\n    const classes = useStyles();\n    return (\n        <div className={classes.row}>\n            {variant === 'success' ? <DoneIcon className={className} /> :\n                <ErrorIcon className={className} />}\n            <Typography\n                className={className}\n                style={{paddingLeft: '10px'}}\n            >\n                {message}\n            </Typography>\n        </div>\n    )\n};\n\nconst Alert = props => {\n    const {message, isOpenAlert, variant, handleCloseHandling} = props;\n    const [isOpen, setIsOpen] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsOpen(isOpenAlert)\n    }, [isOpenAlert]);\n\n    return (\n        <div>\n            <Snackbar\n                open={isOpen}\n                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n                TransitionComponent={SlideTransition}\n                autoHideDuration={5000}\n                onClose={() => setIsOpen(false)}\n                onExited={handleCloseHandling}\n            >\n                <SnackbarContent\n                    className={classes[variant]}\n                    message={<MessageContent\n                        message={message}\n                        variant={variant}\n                        className={classes.rootMessage}/>}\n                />\n            </Snackbar>\n        </div>\n    )\n};\n\nAlert.propTypes = {\n    message: PropTypes.string,\n    isOpenAlert: PropTypes.bool.isRequired,\n    variant: PropTypes.string.isRequired,\n    handleCloseHandling: PropTypes.func\n};\n\nexport default Alert;\n","import {style} from '../../../styles/global';\n\nconst componentStyle = theme => ({\n    root: {\n        height: style.contentHeight\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    selectRow: {\n        display: 'inherit',\n        justifyContent: 'space-between',\n        width: '400px',\n        margin: '5px 0'\n    },\n    textRow: {\n        display: 'inherit',\n        flexDirection: 'inherit',\n        justifyContent: 'center',\n        width: '400px'\n    },\n    select: {\n        minWidth: '150px'\n    },\n    margin: {\n        margin: '5px 0',\n        height: 70\n    },\n    button: {\n        marginTop: '50px',\n        backgroundColor: theme.palette.action.dark\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Grid} from \"@material-ui/core\";\nimport SelectRegister from \"../../common/SelectRegister/SelectRegister\";\nimport {TextField} from \"@material-ui/core\";\nimport {Redirect} from \"react-router\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport Fab from '@material-ui/core/Fab';\nimport TextMaskCustom from \"../../common/TaskMaskCustom/TaskMaskCustom\";\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from \"../../common/Alert/Alert\";\nimport componentStyle from \"./UserFormStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst UserForm = props => {\n    const {isLogin, subjects, resetRequest, loadUser, addUser, registerAfter, setRegisterAfter} = props;\n    const {pending, error, success} = props.request;\n    const [login, setLogin] = useState({\n        email: '',\n        password: ''\n    });\n    const [register, setRegister] = useState({\n        firstName: '',\n        lastName: '',\n        telephone: '(0048)',\n        email: '',\n        password: '',\n        confirm: ''\n    });\n    const [userType, setUserType] = useState('parent');\n    const [subject, setSubject] = useState('');\n    const [isSubjectsDisabled, setIsSubjectsDisabled] = useState(true);\n    const [isAccept, setIsAccept] = useState(false);\n    const [isAlert, setIsAlert] = useState(false);\n    const [isError, setIsError] = useState({\n        email: false,\n        confirm: false,\n        phone: false\n    });\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsSubjectsDisabled(userType === 'parent');\n        if (success) resetRequest();\n\n        if (isLogin) {\n            let {email, password} = login;\n            setIsAccept(email.length > 0 && password.length > 0);\n\n            if (Object.values(registerAfter.email).length && Object.values(registerAfter.password).length) {\n                setLogin({\n                    email: registerAfter.email,\n                    password: registerAfter.password\n                });\n                setRegisterAfter({email: {}, password: {}});\n                setIsAlert(true);\n            }\n            setIsAccept(false);\n\n            if (!isAlert) setIsAccept(login.email.length > 0 && login.password.length > 0);\n        } else {\n            let {firstName, lastName, telephone, email, password, confirm} = register;\n            setIsAccept(firstName.length > 0 && lastName.length > 0 && telephone.length === 18 && email.length > 0\n                && (password === confirm && password.length > 0 && confirm.length > 0) &&\n                (userType === 'teacher' ? subject.length > 0 : userType.length > 0)\n                && !isError.confirm && !isError.email)\n        }\n\n        if (error !== null) {\n            setIsAlert(true);\n        }\n\n    }, [userType, login.email, login.password, register.firstName, register.lastName, register,\n        register.telephone, register.email, register.password, register.confirm, subject, login, isLogin,\n        isError.email, isError.confirm, registerAfter.email, registerAfter.password, error, isAlert,\n        setRegisterAfter, success, resetRequest]);\n\n    const handleTextField = event => {\n        isLogin ? setLogin({...login, [event.target.name]: event.target.value}) :\n            setRegister({...register, [event.target.name]: event.target.value});\n    };\n\n    const handleUserType = userType => {\n        setUserType(userType);\n        setIsSubjectsDisabled(userType === 'parent');\n    };\n\n    const handleSubjectType = subject => {\n        setSubject(subject);\n    };\n\n    const handleCloseHandling = () => {\n        setIsAlert(false);\n        setIsAccept(true);\n\n        if (error !== null) resetRequest();\n    };\n\n    const sendData = () => {\n\n        if (isLogin) {\n            const {email, password} = login;\n            loadUser({email, password})\n        } else {\n            const {firstName, lastName, telephone, email, password} = register;\n            let data = {\n                status: userType,\n                subject,\n                firstName,\n                lastName,\n                telephone,\n                email,\n                password\n            };\n            setRegisterAfter({email, password});\n            addUser(data);\n        }\n    };\n\n    if (pending) {\n        return <Paper elevation={9} className={clsx(classes.column, classes.root)}>\n            <Spinner/>\n        </Paper>\n    }\n    if (success) {\n        return !isLogin ? <Redirect to='/login'/> : <Redirect to='/'/>\n    } else {\n        return (\n            <Paper elevation={9}>\n                <Grid container className={classes.root}>\n                    <Grid item lg={6} className={classes.column}>\n                        <div hidden={isLogin} className={classes.selectRow}>\n                            <SelectRegister\n                                className={classes.select}\n                                selectTitle='user type'\n                                options={['parent', 'teacher']}\n                                takeSelected={handleUserType}\n                            />\n                            <SelectRegister\n                                className={classes.select}\n                                selectTitle='subject'\n                                isDisabled={isSubjectsDisabled}\n                                options={subjects.all}\n                                takeSelected={handleSubjectType}\n                            />\n                        </div>\n                        <div hidden={isLogin} className={classes.textRow}>\n                            <TextField label='first name' name='firstName' value={register.firstName}\n                                       onChange={handleTextField} className={classes.margin}/>\n                            <TextField label='last name' name='lastName' value={register.lastName}\n                                       onChange={handleTextField} className={classes.margin}/>\n                            <TextField label='phone number' name='telephone' value={register.telephone}\n                                       error={isError.phone} helperText={isError.phone ? 'Incorrect entry' : ''}\n                                       InputProps={{inputComponent: TextMaskCustom}}\n                                       onBlur={event => {\n                                           setRegister({...register, telephone: event.target.value.trim()});\n                                           setIsError({...isError, phone: event.target.value.trim().length !== 18});\n                                       }}\n                                       onChange={handleTextField} className={classes.margin}/>\n                        </div>\n                        <div className={classes.textRow}>\n                            <TextField error={isError.email} helperText={isError.email ? 'Incorrect entry' : ''}\n                                       label='email' name='email' value={isLogin ? login.email : register.email}\n                                       onBlur={event => setIsError({...isError,\n                                           email: !event.target.value.includes('@') || !event.target.value.includes('.')})}\n                                       onChange={handleTextField} className={classes.margin}/>\n                            <TextField label='password' name='password' value={isLogin ? login.password : register.password}\n                                       type='password' onChange={handleTextField} className={classes.margin}/>\n                        </div>\n                        <div hidden={isLogin} className={classes.textRow}>\n                            <TextField error={isError.confirm} helperText={isError.confirm ? 'other than password' : ''}\n                                       label='confirm password' name='confirm' value={register.confirm}\n                                       onBlur={event => setIsError({\n                                           ...isError,\n                                           confirm: event.target.value !== register.password\n                                       })}\n                                       type='password' onChange={handleTextField} className={classes.margin}/>\n                        </div>\n                    </Grid>\n                    <Grid item lg={6} className={classes.column}>\n                        <Fab\n                            color='primary'\n                            className={classes.button}\n                            aria-label='add'\n                            onClick={sendData}\n                            disabled={!isAccept}\n                        >\n                            <DoneIcon/>\n                        </Fab>\n                    </Grid>\n                </Grid>\n                <Alert\n                    message={`${error !== null ? error : 'The user has been registered'}`}\n                    variant={`${error !== null ? 'error' : 'success'}`}\n                    isOpenAlert={isAlert}\n                    handleCloseHandling={handleCloseHandling}\n                />\n            </Paper>\n        )\n    }\n};\n\nUserForm.propTypes = {\n    loadUser: PropTypes.func.isRequired,\n    addUser: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    setRegisterAfter: PropTypes.func.isRequired,\n    isLogin: PropTypes.bool,\n    request: PropTypes.object.isRequired,\n    subjects: PropTypes.object.isRequired,\n    registerAfter: PropTypes.object.isRequired\n};\n\nexport default UserForm;\n","import {connect} from 'react-redux';\nimport {loadUserByLogin, addUser} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getSubjects} from \"../../../redux/actions/valuesActions\";\nimport {setRegister, getRegister} from \"../../../redux/actions/usersActions\";\nimport UserForm from './UserForm';\n\nconst mapDispatchToProps = dispatch => ({\n    loadUser: login => dispatch(loadUserByLogin(login)),\n    addUser: user => dispatch(addUser(user)),\n    resetRequest: () => dispatch(resetRequest()),\n    setRegisterAfter: login => dispatch(setRegister(login))\n});\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    subjects: getSubjects(state),\n    registerAfter: getRegister(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport UserForm from '../../features/UserForm/UserFormContainer';\n\nconst Login = () => {\n\n    return (\n        <div>\n            <PageTitle>Login</PageTitle>\n            <UserForm isLogin={true}/>\n        </div>\n    )\n};\n\nexport default Login;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport UserForm from '../../features/UserForm/UserFormContainer';\n\nconst Registration = () => (\n    <div>\n        <PageTitle>Registration</PageTitle>\n        <UserForm isLogin={false}/>\n    </div>\n);\n\nexport default Registration;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst PageNotFound = () => (\n    <div>\n        <PageTitle>PageNotFound - 404</PageTitle>\n    </div>\n);\n\nexport default PageNotFound;\n","const componentStyle = theme => ({\n    root: {\n        display: 'inline-flex',\n        width: '30px',\n        height: '30px',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    ratingNumber: {\n        padding: `0 ${theme.spacing(1)}px`,\n        cursor: 'pointer',\n        transition: '.3s'\n    },\n    ratingNumberBig: {\n        padding: `0 ${theme.spacing(1)}px`,\n        cursor: 'pointer',\n        fontSize: '22px',\n        fontWeight: '700',\n        transition: '.5s'\n    },\n    1: {\n        color: theme.palette.scales.first\n    },\n    2: {\n        color: theme.palette.scales.second\n    },\n    3: {\n        color: theme.palette.scales.third\n    },\n    tooltip: {\n        backgroundColor: theme.palette.action.adding\n    }\n});\n\nexport default componentStyle;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Tooltip, Typography} from \"@material-ui/core\";\nimport Zoom from '@material-ui/core/Zoom';\nimport componentStyle from \"./StudentRatingItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TooltipContent = rating => {\n    const {scales, description, date, teacher} = rating;\n\n    return (\n        <div>\n            <Typography variant='subtitle2'>{`scales: ${scales}`}</Typography>\n            <Typography variant='subtitle2'>{`description: ${description}`}</Typography>\n            <Typography variant='subtitle2'>{`date: ${date.substring(0, 10)}`}</Typography>\n            <Typography variant='subtitle2'>{`teacher: ${teacher}`}</Typography>\n        </div>\n    )\n};\n\nconst StudentRatingItem = props => {\n    const {rating} = props;\n    const classes = useStyles();\n    const [ratingStyle, setRatingStyle] = useState(classes.ratingNumber);\n\n    return (\n        <Tooltip\n            classes={{tooltip: classes.tooltip}}\n            title={TooltipContent(rating)}\n            arrow\n            placement='top'\n            TransitionComponent={Zoom}\n        >\n            <div className={classes.root}>\n                <Typography\n                    className={clsx(ratingStyle, classes[rating.scales])}\n                    display='inline'\n                    variant='subtitle1'\n                    onMouseEnter={() => setRatingStyle(classes.ratingNumberBig)}\n                    onMouseLeave={() => setRatingStyle(classes.ratingNumber)}\n                >\n                    {rating.value}\n                </Typography>\n            </div>\n        </Tooltip>\n    )\n};\n\nStudentRatingItem.propTypes = {\n    rating: PropTypes.shape({\n        _id: PropTypes.string,\n        value: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        scales: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired,\n        teacher: PropTypes.string\n    })\n};\n\nexport default StudentRatingItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Grid, Typography} from \"@material-ui/core\";\nimport StudentRatingItem from \"../../common/StudentRatingItem/StudentRatingItem\";\nimport {style} from \"../../../styles/global\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: style.baseSize,\n        backgroundColor: theme.palette.action.item,\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: theme.palette.action.check\n        }\n    },\n    ratings: {\n        lineHeight: '40px'\n    }\n}));\n\nconst RatingSubject = props => {\n    const {rating} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={5}>\n            <Grid container alignItems='center' justify='center'>\n                <Grid item lg={2}>\n                    <Typography>{rating.subject}</Typography>\n                </Grid>\n                <Grid item lg={10} className={classes.ratings}>\n                    {rating.ratings.map(item => {\n                        return <StudentRatingItem key={item._id} rating={item}/>\n                    })}\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nRatingSubject.propTypes = {\n    rating: PropTypes.object.isRequired\n};\n\nexport default RatingSubject;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        padding: style.smallSize,\n        backgroundColor: theme.palette.secondary.dark\n    },\n    title: {\n        padding: `${style.smallSize} 0`,\n        color: theme.palette.primary.light\n    },\n    content: {\n        height: '465px',\n        overflow: 'auto'\n    }\n});\n\nexport default componentStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    Grid,\n    Typography\n} from \"@material-ui/core\";\nimport RatingSubject from '../../features/RatingSubject/RatingSubject';\nimport componentStyle from './RatingSubjectListStyle';\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst RatingSubjectList = props => {\n    const {student} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container style={{paddingLeft: '10px'}}>\n                <Grid item lg={2}>\n                    <Typography variant='subtitle2' className={classes.title}>Subject</Typography>\n                </Grid>\n                <Grid item lg={10}>\n                    <Typography variant='subtitle2' className={classes.title} align='center'>Grades</Typography>\n                </Grid>\n            </Grid>\n            <div className={classes.content}>\n                {student.ratings.map(item => {\n                    return <RatingSubject key={item.id} rating={item}/>\n                })}\n            </div>\n        </Paper>\n    )\n};\n\nRatingSubjectList.propTypes = {\n    student: PropTypes.object.isRequired\n};\n\nexport default RatingSubjectList;\n","import React from \"react\";\nimport {Paper} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport RatingSubjectList from \"../../features/RatingSubjectList/RatingSubjectList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: '100%',\n        marginTop: theme.spacing(2)\n    }\n}));\n\nconst TabPanelRatings = props => {\n    const {item, value, index, ...other} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper\n            className={classes.root}\n            elevation={9}\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <RatingSubjectList student={item}/>}\n        </Paper>\n    )\n};\n\nTabPanelRatings.propTypes = {\n    item: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport default TabPanelRatings;\n\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: style.contentHeight,\n        width: '100%',\n        padding: style.baseSize\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    },\n    spinner: {\n        justifyContent: 'center'\n    },\n    email: {\n        color: theme.palette.action.warning,\n        fontSize: style.middleSize\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport {Paper, AppBar, Tabs, Tab, Typography, Link} from \"@material-ui/core\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport TabPanelRatings from \"../../common/TabPanelRatings/TabPanelRatings\";\nimport {a11yProps} from \"../../../utilities/functions\";\nimport componentStyle from \"./RatingsBoxStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst RatingsBox = props => {\n    const {user, getClassesName, request} = props;\n    const [value, setValue] = useState(0);\n    const [isReady, setIsReady] = useState(false);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    useEffect(() => {\n\n        if (Object.values(user.students).length && !isReady) {\n            let studentsId = user.students.map(student => student.id);\n            getClassesName(studentsId);\n            setIsReady(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user, isReady]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Paper variant='outlined' className={clsx(classes.root,\n            request.geting || !user.students.length ? classes.spinner : '')}>\n            {request.geting ? <Spinner/> :\n                <>\n                    {user.students.length ?\n                        <>\n                            <AppBar position=\"static\" className={classes.tabs}>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    textColor=\"primary\"\n                                >\n                                    {user.students.map((item, i) => {\n                                        return <Tab\n                                            className={classes.tabs}\n                                            key={item.id}\n                                            label={`${item.firstName} ${item.lastName} - ${item.className}`}\n                                            {...a11yProps(i)}/>\n                                    })}\n                                </Tabs>\n                            </AppBar>\n\n                            {\n                                user.students.map((item, i) => {\n                                    return <TabPanelRatings\n                                        item={item}\n                                        index={i}\n                                        value={value}\n                                        key={item.id}\n                                        dir={theme.direction}\n                                    />\n                                })\n                            }\n                        </> :\n                        <>\n                            <Typography style={{fontSize: '20px'}}>\n                                {`The parent ${user.lastName} ${user.firstName} has no any student assigned.`}\n                            </Typography>\n                            <Typography>Contact the principal:</Typography>\n                            <Link className={classes.email} href={'mailto:principal@gmail.com'}>\n                                principal@gmail.com\n                            </Link>\n                        </>\n                    }\n                </>\n            }\n        </Paper>\n    )\n};\n\nRatingsBox.propTypes = {\n    user: PropTypes.object.isRequired,\n    getClassesName: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired\n};\n\nexport default RatingsBox;\n","import {connect} from 'react-redux';\nimport {getUser} from \"../../../redux/actions/usersActions\";\nimport {getClassNameForStudentByIdRequest} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport RatingBox from './RatingsBox';\n\nconst mapStateToProps = state => ({\n   user: getUser(state),\n   request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n   getClassesName: studentsId => dispatch(getClassNameForStudentByIdRequest(studentsId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RatingBox)\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport RatingsBox from '../../features/RatingsBox/RatingsBoxContainer';\n\nconst StudentRatings = () => (\n    <div>\n        <PageTitle>Student Grades</PageTitle>\n        <RatingsBox/>\n    </div>\n);\n\nexport default StudentRatings;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        padding: `${style.bigSize} 0`,\n        backgroundColor: theme.palette.secondary.dark\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    textField: {\n        width: '250px',\n        height: '70px',\n        marginBottom: style.smallSize\n    },\n    button: {\n        backgroundColor: theme.palette.action.dark\n    },\n    justifyEnd: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {Paper, TextField, Fab, Grid, Tooltip, Switch, Fade} from \"@material-ui/core\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport TextMaskCustom from \"../../common/TaskMaskCustom/TaskMaskCustom\";\nimport componentStyle from \"./EditUserDataStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst EditUserData = props => {\n    const {user, updateUser, request} = props;\n    const [data, setData] = useState({\n        firstName: user.firstName,\n        lastName: user.lastName,\n        telephone: user.telephone,\n        email: user.email,\n        password: '',\n        newPassword: '',\n        confirm: ''\n    });\n    const [isPasswordDisabled, setIsPasswordDisabled] = useState(false);\n    const [isChecked, setIsChecked] = useState(false);\n    const [isAccept, setIsAccept] = useState(false);\n    const [isPasswordChange, setIsPasswordChange] = useState(false);\n    const [isError, setIsError] = useState({\n        email: false,\n        confirm: false,\n        phone: false\n    });\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsAccept(!isError.email && !isError.confirm && !isError.phone &&\n            (data.firstName !== user.firstName ||\n                data.lastName !== user.lastName ||\n                data.telephone !== user.telephone ||\n                data.email !== user.email));\n        setIsPasswordDisabled(data.newPassword.length > 0 && isChecked);\n\n        if (!isChecked) {\n            setData({\n                ...data,\n                newPassword: '',\n                password: '',\n                confirm: ''\n            });\n            setIsPasswordChange(false);\n        } else {\n            setIsPasswordChange(!isError.confirm && data.password.length > 0 && data.newPassword.length > 0);\n        }\n\n        if (request.updating) {\n            setIsAccept(false);\n            setIsChecked(false);\n            setIsAccept(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data.lastName, data.firstName, data.telephone, data.email, request.updating,\n        data.newPassword, isChecked, isError.confirm, data.password, isError.phone, isError.email]);\n\n    const handleTextField = event => {\n        setData({...data, [event.target.name]: event.target.value})\n    };\n\n    const handleChecked = event => {\n        setIsChecked(event.target.checked)\n    };\n\n    const handleUpdate = () => {\n        let userAfterChange = data;\n        userAfterChange.id = user.id;\n        userAfterChange._id = user._id;\n        updateUser(isPasswordChange, isAccept, userAfterChange);\n    };\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <Grid container style={{height: '100%'}} alignContent='center' justify='center'>\n                {request.updating ? <Spinner/> :\n                    <>\n                        <Grid item lg={4} className={classes.column}>\n                            <TextField label='first name' name='firstName' value={data.firstName}\n                                       onChange={handleTextField} className={classes.textField}/>\n                            <TextField label='last name' name='lastName' value={data.lastName}\n                                       onChange={handleTextField} className={classes.textField}/>\n                            <TextField label='phone number' name='telephone' value={data.telephone}\n                                       onChange={handleTextField} className={classes.textField}\n                                       InputProps={{inputComponent: TextMaskCustom}}\n                                       error={isError.phone} helperText={isError.phone ? 'Incorrect entry' : ''}\n                                       onBlur={event => setIsError(\n                                           {...isError, phone: event.target.value.trim().length !== 18})\n                                       }/>\n                            <TextField label='email' name='email' value={data.email}\n                                       onChange={handleTextField} className={classes.textField}\n                                       error={isError.email} helperText={isError.email ? 'Incorrect entry' : ''}\n                                       onBlur={event => setIsError({\n                                           ...isError,\n                                           email: !event.target.value.includes('@') || !event.target.value.includes('.')\n                                       })}/>\n                        </Grid>\n                        <Grid item lg={4} className={classes.column}>\n                            <Tooltip\n                                title='Update data'\n                                placement='top'\n                                arrow\n                                classes={{tooltip: classes.tooltip}}\n                                TransitionComponent={Fade}\n                                enterDelay={1000}\n                            >\n                        <span>\n                            <Fab\n                                color='primary'\n                                className={classes.button}\n                                aria-label='update'\n                                disabled={isChecked ? !isPasswordChange : !isAccept}\n                                onClick={handleUpdate}\n                            >\n                                <DoneIcon/>\n                            </Fab>\n                        </span>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item lg={4} className={classes.column}>\n                            <div className={clsx(classes.textField, classes.justifyEnd)}>\n                                {isChecked ? <LockOpenIcon/> : <LockIcon color='disabled'/>}\n                                <Switch\n                                    checked={isChecked}\n                                    onChange={handleChecked}\n                                    color='secondary'\n                                    size='small'\n                                />\n                            </div>\n                            <TextField label='new password' name='newPassword' value={data.newPassword}\n                                       onChange={handleTextField}\n                                       onBlur={event => setIsError(\n                                           {...isError, confirm: event.target.value !== data.confirm}\n                                       )}\n                                       type='password' disabled={!isChecked} className={classes.textField}/>\n                            <TextField label='confirm new password' name='confirm' value={data.confirm}\n                                       onChange={handleTextField} className={classes.textField}\n                                       error={isError.confirm}\n                                       helperText={isError.confirm ? 'other than new password' : ''}\n                                       type='password' disabled={!isPasswordDisabled}\n                                       onBlur={event => setIsError({\n                                           ...isError,\n                                           confirm: event.target.value !== data.newPassword\n                                       })}/>\n                            <TextField label='old password' name='password' value={data.password}\n                                       onChange={handleTextField} className={classes.textField}\n                                       type='password' disabled={!isPasswordDisabled}/>\n                        </Grid>\n                    </>\n                }\n            </Grid>\n        </Paper>\n    )\n};\n\nEditUserData.propTypes = {\n    user: PropTypes.object.isRequired,\n    updateUser: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired\n};\n\nexport default EditUserData;\n","import {connect} from 'react-redux';\nimport {getUser} from \"../../../redux/actions/usersActions\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {updateUserDataRequest} from \"../../../redux/thunks\";\nimport EditUserData from \"./EditUserData\";\n\nconst mapStateToProps = state => ({\n   request: getRequest(state),\n   user: getUser(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n   updateUser: (isPassword, isDataChange, userAfterChange) =>\n       dispatch(updateUserDataRequest(isPassword, isDataChange, userAfterChange))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUserData)\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: style.contentHeight,\n        width: '100%',\n        padding: style.baseSize\n    },\n    students: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        height: '160px',\n        padding: style.bigSize,\n        backgroundColor: theme.palette.secondary.light,\n        marginBottom: theme.spacing(2),\n        overflow: 'auto'\n    },\n    edit: {\n        display: 'flex',\n        width: '100%',\n        height: '350px',\n        justifyContent: 'center'\n    },\n    item: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: style.baseSize,\n        margin: `${style.smallSize} 0`\n    },\n    center: {\n        justifyContent: 'center',\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Typography, Grid} from \"@material-ui/core\";\nimport Alert from \"../../common/Alert/Alert\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport EditUserData from \"../../common/EditUserData/EditUserDataContainer\";\nimport componentStyle from './ParentDataStyle';\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentData = props => {\n    const {\n        request,\n        user,\n        getClassesName,\n        alertSuccess,\n        resetRequest,\n        setAlertSuccess\n    } = props;\n    const [isReady, setIsReady] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (Object.values(user.students).length && !isReady) {\n            let studentsId = user.students.map(student => student.id);\n            getClassesName(studentsId);\n            setIsReady(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user, isReady]);\n\n    const handleAlert = () => {\n\n        if (request.error !== null) resetRequest();\n\n        if (alertSuccess.isOpen) setAlertSuccess(false, '');\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Typography variant='subtitle2'>{`Student${user.students.length > 1 ? 's' : ''}:`}</Typography>\n            <Paper variant='outlined' className={clsx(classes.students,\n                (request.geting || user.students.length < 3) ? classes.center : '')}>\n                {request.geting ? <Spinner/> :\n                    user.students.length ? user.students.map(student => {\n                        return (\n                            <Paper key={student.id} elevation={9} className={classes.item}>\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item lg={6}>\n                                        <Typography display='inline' style={{fontWeight: 700}}>\n                                            {`${student.lastName} ${student.firstName}`}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={3}>\n                                        <Typography display='inline'>\n                                            {student.birthDate.substring(0, 10)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={3}>\n                                        <Typography display='inline'>{student.className}</Typography>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        )\n                    }) : <Typography>none</Typography>\n                }\n            </Paper>\n            <Typography variant='subtitle2'>Edit data:</Typography>\n            <div className={classes.edit}>\n                <EditUserData/>\n            </div>\n            <Alert\n                isOpenAlert={request.error !== null || alertSuccess.isOpen}\n                message={alertSuccess.isOpen ? alertSuccess.message : request.error}\n                variant={alertSuccess.isOpen ? 'success' : 'error'}\n                handleCloseHandling={handleAlert}\n            />\n        </Paper>\n    )\n};\n\nParentData.propTypes = {\n    request: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    getClassesName: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired\n};\n\nexport default ParentData;\n","import {connect} from 'react-redux';\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getUser} from \"../../../redux/actions/usersActions\";\nimport {getAlertSuccess, setAlertSuccess} from \"../../../redux/actions/valuesActions\";\nimport {getClassNameForStudentByIdRequest} from \"../../../redux/thunks\";\nimport ParentData from \"./ParentData\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    user: getUser(state),\n    alertSuccess: getAlertSuccess(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getClassesName: studentsId => dispatch(getClassNameForStudentByIdRequest(studentsId)),\n    resetRequest: () => dispatch(resetRequest()),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentData);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport ParentData from \"../../features/ParentData/ParentDataContainer\";\n\nconst StudentData = () => (\n    <div>\n        <PageTitle>Parent Data</PageTitle>\n        <ParentData/>\n    </div>\n);\n\nexport default StudentData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    buttonRemove: {\n        color: theme.palette.action.light\n    }\n}));\n\nconst ModalAreYouSure = props => {\n    const {isOpen, isConfirm, description, ...otherProps} = props;\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                TransitionComponent={Transition}\n                onClose={() => isConfirm(false)}\n                keepMounted\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                {...otherProps}\n            >\n                <DialogTitle id='alert-dialog-slide-title'>\n                    Are you sure?\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {description}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button className={classes.buttonRemove} onClick={() => isConfirm(true)}>Delete</Button>\n                    <Button color='primary' onClick={() => isConfirm(false)}>Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n};\n\nModalAreYouSure.propTypes = {\n    description: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    isConfirm: PropTypes.func.isRequired\n};\n\nexport default ModalAreYouSure;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        height: '58px',\n        paddingLeft: style.smallSize,\n        backgroundColor: theme.palette.secondary.dark,\n        marginBottom: style.baseSize,\n        '&:hover': {\n            backgroundColor: theme.palette.action.item,\n        }\n    },\n    names: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    subject: {\n        paddingLeft: style.smallSize,\n        fontSize: style.baseSize,\n        color: theme.palette.primary.light\n    },\n    tutor: {\n        width: '100%',\n        fontSize: style.baseSize,\n        color: theme.palette.primary.light\n    },\n    classes: {\n        display: 'flex',\n        backgroundColor: 'inherit',\n        alignItems: 'center',\n        flexDirection: 'column',\n        height: '50px',\n        width: '130px',\n        padding: `${style.smallSize} ${style.baseSize}`,\n        overflow: 'auto',\n        '&:hover': {\n            backgroundColor: theme.palette.action.header,\n        }\n    },\n    sum: {\n        width: '100%',\n        fontSize: style.baseSize\n    },\n    operation: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    delete: {\n        color: theme.palette.action.light\n    },\n});\n\nexport default componentStyle;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n    Paper,\n    Grid,\n    Typography,\n    Link,\n    Tooltip,\n    IconButton,\n    Fade\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport componentStyle from \"./TeacherItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeacherItem = props => {\n    const {teacher, request, setModalYesNot} = props;\n    const classes = useStyles();\n    let counter = 0;\n\n    const removeHandling = () => {\n        setModalYesNot(true,\n            {\n                description: `Do you want remove ${teacher.lastName} ${teacher.firstName} teacher?`,\n                data: {\n                    id: teacher.id\n                }\n            })\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container>\n                <Grid item lg={4} className={classes.names}>\n                    <Typography style={{fontWeight: 700}} display='inline'>\n                        {`${teacher.lastName} ${teacher.firstName} `}\n                    </Typography>\n                    <Typography display='inline' className={classes.subject}>{teacher.subject}</Typography>\n                </Grid>\n                <Grid item lg={2} className={classes.names}>\n                    <Typography className={classes.sum} align='center'>{teacher.telephone}</Typography>\n                </Grid>\n                <Grid item lg={2} className={classes.names}>\n                    <Link href={`mailto:${teacher.email}`} align='center'>{teacher.email}</Link>\n                </Grid>\n                <Grid item lg={1} className={classes.names}>\n                    <Typography className={classes.tutor} align='center'>{teacher.tutorClass}</Typography>\n                </Grid>\n                <Grid item lg={2} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <div className={classes.classes}>\n                        {teacher.teacherClasses.length ?\n                            teacher.teacherClasses.map((item, i) => {\n                                counter = counter + item.studentsAmount;\n                                return (\n                                    <Typography align='right' key={i} display='block' className={classes.tutor}>\n                                        {`${item.className} - ${item.studentsAmount}`}\n                                    </Typography>\n\n                                )\n\n                            }) :\n                            <Typography align='center' className={classes.tutor}>none</Typography>\n                        }\n                        <Typography hidden={!teacher.teacherClasses.length} align='right' className={classes.sum}>\n                            {`ALL: ${counter}`}\n                        </Typography>\n                    </div>\n                </Grid>\n                <Grid item lg={1} className={classes.operation}>\n                    <Tooltip\n                        title='Remove teacher'\n                        placement='top'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span>\n                            <IconButton\n                                disabled={request.adding ||\n                                teacher.teacherClasses.length > 0 ||\n                                teacher.tutorClass !== 'no assigned'}\n                                className={classes.delete}\n                                onClick={removeHandling}\n                            >\n                                <DeleteIcon fontSize='small'/>\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nTeacherItem.propTypes = {\n    teacher: PropTypes.object.isRequired,\n    request: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired\n};\n\nexport default TeacherItem\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport TeacherItem from \"./TeacherItem\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherItem);\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    info: {\n        padding: `${style.smallSize} ${style.baseSize} 0 22px`,\n    },\n    content: {\n        justifyContent: 'flex-start',\n        padding: `10px ${style.baseSize} 0`,\n        height: '515px',\n        overflow: 'auto'\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '52px',\n        marginBottom: style.smallSize\n    },\n    column: {\n        flexDirection: 'column',\n    },\n    center: {\n        justifyContent: 'center !important'\n    },\n    description: {\n        fontSize: 12,\n        color: theme.palette.primary.light\n    }\n});\n\nexport default componentStyle;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nconst TablePagination = props => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n};\n\nTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n};\n\nexport default TablePagination;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    Grid,\n    Typography,\n    TableContainer,\n    Table,\n    TableFooter,\n    TableRow,\n    TablePagination as MaterialPagination,\n    TextField\n} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport Alert from \"../../common/Alert/Alert\";\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport TeacherItem from \"../TeacherItem/TeacherItemContainer\";\nimport componentStyle from \"./TeachersHandlingStyle\";\nimport TablePagination from \"../../common/TablePagination/TablePagination\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeachersHandling = props => {\n    const {\n        teachers,\n        teachersName,\n        request,\n        loadTeachersName,\n        loadTeachers,\n        loadTeacher,\n        resetRequest,\n        modalYesNot,\n        setModalYesNot,\n        alertSuccess,\n        setAlertSuccess,\n        deleteTeacher,\n        clearTeachers,\n        clearTeachersName\n    } = props;\n    const [selectedTeacher, setSelectedTeacher] = useState(null);\n    const [page, setPage] = useState(0);\n    const [isReady, setReady] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(7);\n    const [isSearch, setIsSearch] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (!teachersName.length) {\n            loadTeachersName('teacher');\n        }\n\n        if (!isReady) {\n            loadTeachers(page + 1, rowsPerPage);\n            setReady(true);\n        }\n\n        if (selectedTeacher === null && isSearch) {\n            loadTeachers(page + 1, rowsPerPage);\n            setIsSearch(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [teachersName, page, rowsPerPage, selectedTeacher]);\n\n    useEffect(() => {\n        return () => {\n            clearTeachersName([]);\n            clearTeachers([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleSearch = value => {\n        setSelectedTeacher(value);\n\n        if (value !== null) {\n            loadTeacher(value.id);\n            setIsSearch(true);\n            setPage(0);\n        }\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        setReady(false);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n        setReady(false);\n    };\n\n    const errorHandling = async () => {\n        await resetRequest();\n        await setPage(0);\n        await loadTeachersName('teacher');\n        loadTeachers(page + 1, rowsPerPage);\n    };\n\n    const alertHandling = () => {\n        setAlertSuccess(false, '')\n    };\n\n    const deleteHandling = async isDelete => {\n        let teacherId = await modalYesNot.content.data.id;\n        setModalYesNot(false, {\n            description: '',\n            data: {}\n        });\n\n        if (isDelete) deleteTeacher(teacherId, page, rowsPerPage)\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container className={classes.info}>\n                <Grid item lg={4}>\n                    <Typography className={classes.description} color='primary'>Names/Subject</Typography>\n                </Grid>\n                <Grid item lg={2} style={{paddingLeft: '20px'}}>\n                    <Typography className={classes.description} color='primary'>Phone</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography className={classes.description} color='primary'>Email</Typography>\n                </Grid>\n                <Grid item lg={1}>\n                    <Typography className={classes.description} color='primary'>Class teacher</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography align='right' className={classes.description} color='primary'>Class/Students</Typography>\n                </Grid>\n                <Grid item lg={1}> </Grid>\n            </Grid>\n            <Grid container className={clsx(classes.content,\n                (request.working || request.pending) ? classes.center : '',\n                teachers.length < 7 ? classes.column : '')}>\n                {(request.working || request.pending) ? <Spinner/> :\n                    isReady && teachers.length && teachers.map(teacher => {\n                        return <TeacherItem key={teacher.id} teacher={teacher}/>\n                    })\n                }\n            </Grid>\n            <TableContainer className={classes.footer} component={Paper}>\n                <Autocomplete\n                    hidden={!teachersName.length}\n                    id='search-teacher'\n                    renderInput={params => <TextField {...params} label='Search teacher'/>}\n                    options={teachersName}\n                    getOptionLabel={teacher => teacher.name}\n                    size='small'\n                    style={{width: 300, paddingLeft: '15px'}}\n                    onChange={(e, value) => handleSearch(value)}\n                />\n                <Table>\n                    <TableFooter>\n                        <TableRow>\n                            <MaterialPagination\n                                hidden={!teachersName.length || isSearch}\n                                rowsPerPageOptions={[7, 15, 25]}\n                                colSpan={3}\n                                count={teachersName.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                SelectProps={{\n                                    inputProps: {'aria-label': 'rows per page'},\n                                    native: true,\n                                }}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePagination}\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n            <Alert\n                isOpenAlert={request.error !== null || alertSuccess.isOpen}\n                variant={alertSuccess.isOpen ? 'success' : 'error'}\n                message={alertSuccess.isOpen ? alertSuccess.message : request.error}\n                handleCloseHandling={alertSuccess.isOpen ? alertHandling : errorHandling}\n            />\n            <ModalAreYouSure\n                description={modalYesNot.content.description}\n                isOpen={modalYesNot.isOpen}\n                isConfirm={deleteHandling}\n            />\n        </Paper>\n    )\n};\n\nTeachersHandling.propTypes = {\n    teachers: PropTypes.array.isRequired,\n    teachersName: PropTypes.array.isRequired,\n    request: PropTypes.object.isRequired,\n    loadTeachersName: PropTypes.func.isRequired,\n    loadTeachers: PropTypes.func.isRequired,\n    loadTeacher: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    modalYesNot: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    deleteTeacher: PropTypes.func.isRequired,\n    clearTeachers: PropTypes.func.isRequired,\n    clearTeachersName: PropTypes.func.isRequired\n};\n\nexport default TeachersHandling;\n","import {connect} from 'react-redux'\nimport {\n    getUsersNameRequest,\n    loadTeachersRequestWithRange,\n    loadTeacherByIdRequest,\n    deleteTeacherRequest,\n} from \"../../../redux/thunks\";\nimport {\n    getUsersName,\n    getTeachers,\n    loadTeachers,\n    loadUsersName\n} from \"../../../redux/actions/usersActions\";\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {\n    getModalYesNot,\n    setModalYesNot,\n    getAlertSuccess,\n    setAlertSuccess\n} from \"../../../redux/actions/valuesActions\";\nimport TeachersHandling from \"./TeachersHandling\";\n\nconst mapStateToProps = state => ({\n    teachers: getTeachers(state),\n    teachersName: getUsersName(state),\n    request: getRequest(state),\n    modalYesNot: getModalYesNot(state),\n    alertSuccess: getAlertSuccess(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadTeachersName: status => dispatch(getUsersNameRequest(status)),\n    loadTeachers: (page, itemsPerPage) => dispatch(loadTeachersRequestWithRange(page, itemsPerPage)),\n    loadTeacher: id => dispatch(loadTeacherByIdRequest(id)),\n    resetRequest: () => dispatch(resetRequest()),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content)),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message)),\n    deleteTeacher: (id, page, rowsPerPage) => dispatch(deleteTeacherRequest(id, page, rowsPerPage)),\n    clearTeachers: data => dispatch(loadTeachers(data)),\n    clearTeachersName: data => dispatch(loadUsersName(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeachersHandling);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport TeachersHandling from \"../../features/TeachersHandling/TeachersHandlingContainer\";\n\nconst Teachers = () => (\n    <div>\n        <PageTitle>Teachers</PageTitle>\n        <TeachersHandling/>\n    </div>\n);\n\nexport default Teachers;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    content: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        height: style.contentHeight,\n    },\n    parent: {\n        backgroundImage: theme.palette.background.parent\n    },\n    teacher: {\n        backgroundImage: theme.palette.background.teacher\n    },\n    principal: {\n        backgroundImage: theme.palette.background.principal\n    }\n});\n\nexport default componentStyle;\n","import {style} from '../../../styles/global';\n\nconst componentStyle = theme => ({\n    root: {\n        padding: style.smallSize,\n        backgroundColor: theme.palette.primary.light\n    },\n    image: {\n        position: 'relative',\n        [theme.breakpoints.down('xs')]: {\n            width: '100% !important',\n            height: 100,\n        },\n        '&:hover, &$focusVisible': {\n            zIndex: 1,\n            '& $imageBackdrop': {\n                opacity: 0.15,\n            },\n            '& $imageTitle': {\n                fontSize: 24,\n                fontWeight: 700\n            }\n        },\n    },\n    focusVisible: {},\n    imageButton: {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageSrc: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    imageBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n        transition: theme.transitions.create('opacity'),\n    },\n    imageTitle: {\n        position: 'relative',\n        padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n        transition: '.5s',\n        color: theme.palette.action.title\n    }\n});\n\nexport default componentStyle;\n","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect} from \"react-router-dom\";\nimport {Paper, ButtonBase, Typography} from \"@material-ui/core\";\nimport componentStyle from \"./ButtonImageStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ButtonImage = props => {\n    const {title, path, top, bottom, right, left, image, width, height, setPath} = props;\n    const [topTitle,] = useState(top || 0);\n    const [bottomTitle,] = useState(bottom || 0);\n    const [leftTitle,] = useState(left || 0);\n    const [rightTitle,] = useState(right || 0);\n    const [value, setValue] = useState('/');\n    const classes = useStyles();\n\n    const buttonHandling = () => {\n        setTimeout(() => {\n            setValue(path);\n            setPath(path);\n        },300);\n    };\n\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <ButtonBase\n                name={title}\n                focusRipple\n                onClick={buttonHandling}\n                className={classes.image}\n                focusVisibleClassName={classes.focusVisible}\n                style={{\n                    width: width,\n                    height: height\n                }}\n            >\n                    <span\n                        className={classes.imageSrc}\n                        style={{\n                            backgroundImage: `url(${image})`\n                        }}\n                    />\n                <span className={classes.imageBackdrop}/>\n                <span className={classes.imageButton} style={{\n                    bottom: bottomTitle, top: topTitle, right: rightTitle, left: leftTitle\n                }}>\n                        <Typography\n                            component='span'\n                            variant='subtitle1'\n                            color='inherit'\n                            className={classes.imageTitle}\n                        >\n                            {title}\n                        </Typography>\n                    </span>\n            </ButtonBase>\n            <Redirect to={value}/>\n        </Paper>\n    )\n};\n\nButtonImage.propStyles = {\n    title: PropTypes.string.isRequired,\n    image: PropTypes.any.isRequired,\n    path: PropTypes.string.isRequired,\n    top: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    setPath: PropTypes.func.isRequired\n};\n\nexport default ButtonImage;\n","import {connect} from 'react-redux';\nimport {setPath} from \"../../../redux/actions/valuesActions\";\nimport ButtonImage from \"./ButtonImage\";\n\nconst mapDispatchToProps = dispatch => ({\n    setPath: path => dispatch(setPath(path))\n});\n\nexport default connect(null, mapDispatchToProps)(ButtonImage)\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport componentStyle from \"./UserWelcomeStyle\";\nimport ButtonImage from \"../../common/ButtonImage/ButtonImageContainer\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst UserWelcome = props => {\n    const {buttons, userType} = props;\n    const classes = useStyles();\n\n    const setBackground = user => {\n        switch (user) {\n            case 'parent':\n                return classes.parent;\n            case 'teacher':\n                return classes.teacher;\n            case 'principal':\n                return classes.principal;\n            default:\n                return ''\n        }\n    };\n\n    return (\n        <Paper elevation={9} className={setBackground(userType)}>\n            <div className={classes.content}>\n                {buttons.map((item, i) => {\n                    return <ButtonImage\n                        key={i}\n                        image={item.image}\n                        title={item.title}\n                        top={item.top}\n                        bottom={item.bottom}\n                        left={item.left}\n                        right={item.right}\n                        width={item.width}\n                        height={item.height}\n                        path={item.path}\n                    />\n                })}\n            </div>\n        </Paper>\n    )\n};\n\nUserWelcome.propTypes = {\n    buttons: PropTypes.arrayOf(PropTypes.shape({\n        image: PropTypes.any.isRequired,\n        title: PropTypes.string.isRequired,\n        right: PropTypes.number,\n        left: PropTypes.number,\n        top: PropTypes.number,\n        bottom: PropTypes.number,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired\n    })).isRequired,\n    userType: PropTypes.string.isRequired,\n};\n\nexport default UserWelcome;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport UserWelcome from \"../../features/UserWelcome/UserWelcome\";\nimport ratings from '../../../images/ratings.jpg';\nimport parent from '../../../images/parent.png';\nimport teachers from '../../../images/teachers.png';\n\nconst buttonsData = [\n    {\n        image: ratings,\n        title: 'Grades',\n        bottom: 200,\n        width: 400,\n        height: 280,\n        path: '/grades'\n    },\n    {\n        image: parent,\n        title: \"Parent's Data\",\n        left: 130,\n        top: 20,\n        width: 350,\n        height: 230,\n        path: '/data'\n    },\n    {\n        image: teachers,\n        title: 'Teachers',\n        right: 180,\n        bottom: 30,\n        width: 320,\n        height: 200,\n        path: '/teachers'\n    }\n];\n\nconst Home = () => (\n    <div>\n        <PageTitle>Parent's Zone</PageTitle>\n        <UserWelcome\n            buttons={buttonsData}\n            userType='parent'\n        />\n    </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport UserWelcome from \"../../features/UserWelcome/UserWelcome\";\nimport classDiaries from '../../../images/classDiares.jpg';\nimport teacherData from '../../../images/teacherData.jpg'\n\nconst buttonsData = [\n    {\n        image: classDiaries,\n        title: 'Class Diaries',\n        top: 150,\n        width: 400,\n        height: 360,\n        left: 30,\n        path: '/diaries'\n    },\n    {\n        image: teacherData,\n        title: \"Teacher's Data\",\n        width: 350,\n        height: 300,\n        bottom: 175,\n        left: 113,\n        path: '/data'\n    }\n];\n\nconst HomeTeacher = () => (\n    <div>\n        <PageTitle>Teacher's Zone</PageTitle>\n        <UserWelcome\n            userType='teacher'\n            buttons={buttonsData}\n        />\n    </div>\n);\n\nexport default HomeTeacher;\n","import {style} from \"../../../styles/global\";\nimport image from '../../../images/teacherDesk.png'\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: style.contentHeight,\n        width: '100%',\n    },\n    padding: {\n        padding: `0 ${style.baseSize}`\n    },\n    image: {\n        backgroundImage: `url(${image})`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n    },\n    subjectInfo: {\n        width: '100%',\n        padding: `${style.smallSize} 0`,\n        display: 'inline-flex',\n        justifyContent: 'flex-end'\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    }\n});\n\nexport default componentStyle;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.action.header,\n        height: '480px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: style.baseSize\n    },\n    container: {\n        padding: `0 ${style.smallSize}`,\n        height: '480px'\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n        height: '35px',\n        backgroundColor: theme.palette.action.header\n    },\n    classInfo: {\n        padding: 0,\n        height: '35px',\n        backgroundColor: theme.palette.action.header\n    },\n    description: {\n        fontWeight: 200,\n        fontSize: style.baseSize,\n        color: theme.palette.primary.light\n    },\n    tutorContent: {\n        fontWeight: 600,\n        fontSize: style.titleSize,\n        color: theme.palette.primary.light\n    }\n});\n\nexport default componentStyle;\n","const componentStyle = theme => ({\n    root: {\n        display: 'inline-flex',\n        width: '30px',\n        height: '30px',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    ratingNumber: {\n        padding: `0 ${theme.spacing(1)}px`,\n        cursor: 'pointer',\n        transition: '.3s'\n    },\n    ratingNumberBig: {\n        cursor: 'pointer',\n        fontSize: '22px',\n        fontWeight: '700',\n        transition: '.3s'\n    },\n    1: {\n        color: theme.palette.scales.first\n    },\n    2: {\n        color: theme.palette.scales.second\n    },\n    3: {\n        color: theme.palette.scales.third\n    },\n    disabled: {\n        color: theme.palette.secondary.light,\n        transition: '.5s'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport componentStyle from \"./RatingItemStyle\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst RatingItem = props => {\n    const {\n        rating,\n        previewHandling,\n        updateHandling,\n        isUpdateRating,\n        setIsUpdateRating,\n        isNewRating,\n        updatedRating,\n        request,\n        ...otherProps\n    } = props;\n    const classes = useStyles();\n    const [ratingItem, setRatingItem] = useState(rating);\n    const [ratingItemCopy, setRatingItemCopy] = useState(rating);\n    const [ratingStyle, setRatingStyle] = useState(classes.ratingNumber);\n    const [isFrozen, setIsFrozen] = useState(false);\n\n    useEffect(() => {\n\n        if (updatedRating._id === ratingItem._id && isFrozen) {\n            setRatingItem(updatedRating);\n            setRatingStyle(clsx(classes.ratingNumberBig, classes[ratingItem.scales]))\n        } else {\n            setRatingStyle(clsx(isFrozen ? classes.ratingNumberBig : classes.ratingNumber,\n                classes[ratingItem.scales]));\n        }\n\n        if (!isUpdateRating && isFrozen) {\n            !request.working && setIsFrozen(false);\n            setRatingStyle(clsx(classes.ratingNumber, classes[ratingItem.scales]));\n            setRatingItemCopy(ratingItem);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isUpdateRating, updatedRating, updatedRating._id, ratingItem, request.working]);\n\n    const enterMouseHandling = () => {\n        setRatingStyle(clsx(ratingStyle, classes.ratingNumberBig));\n        previewHandling(true, {\n            description: ratingItem.description,\n            date: ratingItem.date.substring(0, 10),\n            scales: ratingItem.scales\n        });\n    };\n\n    const leaveMouseHandling = () => {\n        setRatingStyle(clsx(classes[ratingItem.scales], classes.ratingNumber));\n        previewHandling(false, {description: '', date: '', scales: 0});\n    };\n\n    const updateItemHandling = () => {\n\n        if (!isNewRating) {\n            updateHandling(ratingItem);\n            setIsUpdateRating(true);\n            setIsFrozen(true);\n        }\n    };\n\n    const cancelUpdate = () => {\n\n        if (!isNewRating) {\n            setIsUpdateRating(false);\n            setIsFrozen(false);\n            updateHandling(ratingItemCopy);\n\n            if (ratingItemCopy.value !== ratingItem.value ||\n            ratingItemCopy.scrollable !== ratingItem.scales ||\n            ratingItemCopy.description !== ratingItem.description) setRatingItem(ratingItemCopy);\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            {(request.working && isFrozen) ? <CircularProgress size='25px' color='secondary'/> :\n                <Typography\n                    className={(isUpdateRating && !isFrozen) ? classes.disabled : ratingStyle}\n                    display='inline'\n                    variant='subtitle1'\n                    {...otherProps}\n                    onMouseEnter={(!isUpdateRating && !isFrozen) ? enterMouseHandling : null}\n                    onMouseLeave={(!isUpdateRating && !isFrozen) ? leaveMouseHandling : null}\n                    onClick={(!isUpdateRating && !isFrozen) ? updateItemHandling : cancelUpdate}\n                >\n                    {ratingItem.value}\n                </Typography>\n            }\n        </div>\n    )\n};\n\nRatingItem.propTypes = {\n    rating: PropTypes.object.isRequired,\n    isNewRating: PropTypes.bool.isRequired,\n    setRatingValue: PropTypes.func,\n    previewHandling: PropTypes.func.isRequired,\n    updateHandling: PropTypes.func.isRequired,\n    isUpdateRating: PropTypes.bool.isRequired,\n    setIsUpdateRating: PropTypes.func.isRequired,\n    updatedRating: PropTypes.object,\n    request: PropTypes.object.isRequired\n};\n\nexport default RatingItem;\n","import {connect} from 'react-redux';\nimport {setIsUpdateRating, getIsUpdateRating, getIsNewRating} from \"../../../redux/actions/valuesActions\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport RatingItem from \"./RatingItem\";\n\nconst mapStateToProps = state => ({\n    isUpdateRating: getIsUpdateRating(state),\n    isNewRating: getIsNewRating(state),\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setIsUpdateRating: isUpdateRating => dispatch(setIsUpdateRating(isUpdateRating))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RatingItem);\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '80px',\n        width: '200px',\n        padding: style.smallSize\n    },\n    ratingRow: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    valueBox: {\n        display: 'inline-flex',\n        width: '30px',\n        height: '30px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: style.smallSize,\n        paddingBottom: style.smallSize\n    },\n    buttonBox: {\n        padding: style.smallSize\n    },\n    deleteBox: {\n        width: '30px',\n        height: '30px',\n        paddingBottom: style.smallSize\n    },\n    deleteIcon: {\n        color: theme.palette.action.light\n    },\n    scales1: {\n        fontSize: style.middleSize,\n        fontWeight: 700,\n        paddingLeft: theme.spacing(1),\n        color: theme.palette.scales.first\n    },\n    scales2: {\n        fontSize: style.middleSize,\n        fontWeight: 700,\n        paddingLeft: theme.spacing(1),\n        color: theme.palette.scales.second\n    },\n    scales3: {\n        fontSize: style.middleSize,\n        fontWeight: 700,\n        paddingLeft: theme.spacing(1),\n        color: theme.palette.scales.third\n    },\n    0: {\n        color: theme.palette.scales.first,\n        textAlign: 'center'\n    },\n    1: {\n        color: theme.palette.scales.second,\n        textAlign: 'center'\n    },\n    2: {\n        color: theme.palette.scales.third,\n        textAlign: 'center'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport componentStyle from \"./RatingOptionsStyle\";\nimport Rating from '@material-ui/lab/Rating';\nimport {Typography, FormControl, Select, MenuItem, Tooltip, IconButton, Fade} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst labels = {\n    0.5: '1',\n    1: '1+',\n    1.5: '2-',\n    2: '2',\n    2.5: '2+',\n    3: '3-',\n    3.5: '3',\n    4: '3+',\n    4.5: '4-',\n    5: '4',\n    5.5: '4+',\n    6: '5-',\n    6.5: '5',\n    7: '5+',\n    7.5: '6-',\n    8: '6'\n};\n\nconst RatingOptions = props => {\n    const {\n        ratingScales,\n        ratingDescriptions,\n        ratingsId,\n        teacher,\n        addRating,\n        classId,\n        addingHandling,\n        isEditMode,\n        changeRating,\n        ratingToChange,\n        isUpdate,\n        updateRating,\n        setModalYesNot\n    } = props;\n    const [value, setValue] = useState(3.5);\n    const [hover, setHover] = useState(-1);\n    const [scales, setScales] = useState(ratingScales[0]);\n    const [description, setDescription] = useState(ratingDescriptions[0]);\n    const [isChanging, setIsChanging] = useState(false);\n    const [dataIsChanging, setDataIsChanging] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (isEditMode && isUpdate && !isChanging) {\n            setDescription(ratingToChange.description);\n            setScales(ratingToChange.scales);\n            Object.entries(labels).forEach(item => {\n                if (item[1] === ratingToChange.value) {\n                    setValue(parseFloat(item[0]));\n                    setIsChanging(true);\n                }\n            });\n        }\n\n        if (isEditMode && isUpdate && dataIsChanging) {\n            changeRating({\n                _id: ratingToChange._id,\n                value: labels[value],\n                scales,\n                description,\n                date: ratingToChange.date,\n                teacher: ratingToChange.teacher\n            });\n            setDataIsChanging(false);\n        }\n    }, [value, changeRating, ratingToChange, isEditMode, isUpdate, isChanging, scales,\n        description, dataIsChanging]);\n\n    useEffect(() => {\n        setIsChanging(false);\n    }, [isUpdate]);\n\n    const setColor = isValue => {\n        switch (scales) {\n            case 1:\n                return isValue ? classes.scales1 : classes[0];\n            case 2:\n                return isValue ? classes.scales2 : classes[1];\n            case 3:\n                return isValue ? classes.scales3 : classes[2];\n            default:\n                break;\n        }\n    };\n\n    const addRatingHandling = () => {\n        let dataPackage = {\n            ratingsId,\n            rating: {\n                value: labels[value],\n                description,\n                scales,\n                date: new Date(),\n                teacher: `${teacher.firstName} ${teacher.lastName}`\n            }\n        };\n        addRating(classId, dataPackage);\n        addingHandling(ratingsId);\n    };\n\n    const deleteRatingHandling = () => {\n        setModalYesNot(true, {\n            description: `Do you want to delete the grade: ${labels[value]} ?`,\n            data: {\n                id: ratingsId,\n                _id: ratingToChange._id,\n                classId,\n                studentId: ratingToChange.studentId\n            }\n        });\n    };\n\n    const updateRatingHandling = () => {\n        let dataPackage = {\n            rating: {\n                _id: ratingToChange._id,\n                value: labels[value],\n                scales,\n                description,\n                date: ratingToChange.date,\n                teacher: ratingToChange.teacher\n            },\n            ratingsId,\n            studentId: ratingToChange.studentId,\n            classId: ratingToChange.classId\n        };\n        updateRating(dataPackage);\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.ratingRow}>\n                <Rating\n                    name={isEditMode ? `rating-edit-${ratingsId}` : `rating-add-${ratingsId}`}\n                    size='small'\n                    max={8}\n                    value={value}\n                    precision={0.5}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n\n                        if (isEditMode) setDataIsChanging(true);\n                    }}\n                    onChangeActive={(event, newHover) => {\n\n                        if (isEditMode) {\n\n                            if (newHover !== -1) {\n                                setHover(newHover);\n\n                                changeRating({\n                                    _id: ratingToChange._id,\n                                    value: labels[newHover],\n                                    scales,\n                                    description,\n                                    date: ratingToChange.date,\n                                    teacher: ratingToChange.teacher\n                                });\n                            } else {\n                                changeRating({\n                                    _id: ratingToChange._id,\n                                    value: labels[value],\n                                    scales,\n                                    description,date: ratingToChange.date,\n                                    teacher: ratingToChange.teacher\n                                })\n                            }\n                        } else {\n                            setHover(newHover);\n                        }\n                    }}\n                />\n                {isEditMode ? <div className={classes.deleteBox}>\n                    <span>\n                    <Tooltip\n                        title='delete grade'\n                        arrow\n                        id='delete'\n                        placement='top'\n                        TransitionComponent={Fade}\n                        TransitionProps={{timeout: 1000}}\n                    >\n                <span>\n                    <IconButton\n                        className={classes.buttonBox}\n                        aria-label='delete'\n                        onClick={deleteRatingHandling}\n                    >\n                    {<DeleteIcon className={classes.deleteIcon} fontSize='small'/>}\n                    </IconButton>\n                </span>\n                </Tooltip>\n                </span>\n                </div> : <div className={classes.valueBox}>\n                    <Typography className={setColor(true)}>{labels[hover !== -1 ? hover : value]}</Typography>\n                </div>}\n            </div>\n            <div className={classes.ratingRow}>\n                <FormControl>\n                    <Select\n                        value={scales}\n                        className={setColor(false)}\n                        onChange={e => {\n                            setScales(e.target.value);\n                            if (isEditMode) setDataIsChanging(true);\n                        }}\n                        style={{fontSize: '14px'}}\n                    >\n                        {ratingScales.map(item => {\n                            return <MenuItem\n                                className={classes[item - 1]}\n                                style={{fontSize: '14px'}}\n                                key={item}\n                                value={item}>\n                                {item}\n                            </MenuItem>\n                        })}\n\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <Select\n                        value={description}\n                        onChange={e => {\n                            setDescription(e.target.value);\n                            if (isEditMode) setDataIsChanging(true);\n                        }}\n                        style={{fontSize: '14px'}}\n                    >\n                        {ratingDescriptions.map(item => {\n                            return <MenuItem style={{fontSize: '14px'}} key={item} value={item}>{item}</MenuItem>\n                        })}\n\n                    </Select>\n                </FormControl>\n                <div>\n                    <span>\n                    <Tooltip\n                        title={isEditMode ? 'confirm update' : 'confirm adding'}\n                        arrow\n                        id='confirm'\n                        placement='bottom'\n                        TransitionComponent={Fade}\n                        TransitionProps={{timeout: 1000}}\n                    >\n                <span>\n                    <IconButton\n                        className={classes.buttonBox}\n                        aria-label='done'\n                        onClick={isEditMode ? updateRatingHandling : addRatingHandling}\n                    >\n                    {<DoneIcon fontSize='small'/>}\n                    </IconButton>\n                </span>\n                </Tooltip>\n                </span>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nRatingOptions.propTypes = {\n    ratingScales: PropTypes.array.isRequired,\n    ratingDescriptions: PropTypes.array.isRequired,\n    ratingsId: PropTypes.string.isRequired,\n    teacher: PropTypes.object,\n    addRating: PropTypes.func,\n    classId: PropTypes.string.isRequired,\n    addingHandling: PropTypes.func,\n    isEditMode: PropTypes.bool.isRequired,\n    changeRating: PropTypes.func,\n    ratingToChange: PropTypes.object,\n    isUpdate: PropTypes.bool,\n    updateRating: PropTypes.func.isRequired,\n    setModalYesNot: PropTypes.func.isRequired\n};\n\nexport default RatingOptions;\n","import {connect} from \"react-redux\";\nimport RatingOptions from './RatingOptions';\nimport {addRatingForStudent, updateRatingForStudent} from \"../../../redux/thunks\";\nimport {\n    getRatingDescriptions,\n    getRatingScales,\n    setModalYesNot,\n} from \"../../../redux/actions/valuesActions\";\n\nconst mapDispatchToProps = dispatch => ({\n    addRating: (classId, dataPackage) => dispatch(addRatingForStudent(classId, dataPackage)),\n    updateRating: dataPackage => dispatch(updateRatingForStudent(dataPackage)),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content))\n});\n\nconst mapStateToProps = state => ({\n    ratingDescriptions: getRatingDescriptions(state),\n    ratingScales: getRatingScales(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RatingOptions);\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    buttonBox: {\n        display: 'inline-flex',\n        width: '50px',\n        height: '50px',\n        alignItems: 'center',\n        position: 'relative'\n    },\n    spinnerBox: {\n        display: 'inline-flex',\n        width: '30px',\n        height: '30px',\n        alignItems: 'center'\n    },\n    adding: {\n        position: 'absolute',\n        left: '-200px',\n        top: '-16px',\n        zIndex: '20',\n        backgroundColor: 'rgba(84, 110, 122, .5)'\n    },\n    buttonAdd: {\n        color: theme.palette.action.dark,\n        transition: '1s'\n    },\n    buttonCancel: {\n        color: theme.palette.action.warning,\n        transform: 'rotate(45deg)',\n        transition: '1s'\n    },\n    padding: {\n        padding: style.smallSize\n    },\n    firstCell: {\n        width: style.baseSize,\n    },\n    secondCell: {\n        width: '200px',\n        overflowX: 'auto'\n    },\n    thirdCell: {\n        width: '710px',\n    },\n    names: {\n        whiteSpace: 'nowrap',\n        width: '200px',\n    },\n    ratings: {\n        width: '656px',\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        overflowX: 'auto',\n        height: '40px',\n    },\n    previewRoot: {\n        position: 'relative'\n    },\n    preview: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: style.smallSize,\n        left: '-230px',\n        top: '-40px',\n        height: '80px',\n        width: '200px',\n        backgroundColor: 'rgba(84, 110, 122, .5)'\n    },\n    1: {\n        color: theme.palette.scales.first\n    },\n    2: {\n        color: theme.palette.scales.second\n    },\n    3: {\n        color: theme.palette.scales.third\n    },\n    flipped: {\n        position: 'absolute',\n        willChange: 'transform, opacity',\n    },\n    showUpdate: {\n        opacity: 1,\n        transition: 'opacity .3s ease-in-out'\n    },\n    hiddenUpdate: {\n        opacity: 0,\n        transition: 'opacity .3s ease-in-out'\n    },\n    previewContent: {\n        position: 'absolute',\n        top: 18\n    },\n    disabled: {\n        color: theme.palette.secondary.light\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {useSpring, animated} from \"react-spring\";\nimport {Paper, Typography} from \"@material-ui/core\";\nimport RatingItem from '../../common/RatingItem/RatingItemContainer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport RatingOptions from '../../features/RatingOptions/RatingOptionsContainer';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport componentStyle from \"./DiaryRowStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst DiaryRow = props => {\n    const {\n        student, i, isNewRating, teacher, request, setIsNewRating, classId,\n        isUpdateRating, setIsUpdateRating\n    } = props;\n    const [studentRatings, setStudentRatings] = useState([]);\n    const [studentId, setStudentId] = useState('');\n    const [ratingsId, setRatingsId] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const [isSpinner, setIsSpinner] = useState(false);\n    const [isOpenPreview, setIsOpenPreview] = useState(false);\n    const [previewContent, setPreviewContent] = useState({\n        description: '',\n        date: '',\n        scales: 0\n    });\n    const [flipped, setFlipped] = useState(false);\n    const [ratingToChange, setRatingToChange] = useState({});\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [updatedRating, setUpdatedRating] = useState({});\n    const {transform, opacity, visibility} = useSpring({\n        opacity: flipped ? 1 : 0,\n        visibility: flipped ? 'visible' : 'hidden',\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: {mass: 5, tension: 500, friction: 80}\n    });\n    const classes = useStyles();\n\n    useEffect(() => {\n        student.ratings.forEach(item => {\n\n            if (teacher.subject === item.subject) {\n                setStudentRatings(item.ratings);\n                setRatingsId(item.id);\n                setStudentId(student.id);\n            }\n        });\n\n        if (!request.adding) setIsSpinner(false);\n        if (request.working && isOpenPreview) {\n            setIsOpenPreview(false);\n            setFlipped(!flipped);\n        }\n        if (request.success && !isOpenPreview) {\n            setIsUpdateRating(false);\n            setIsUpdate(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [teacher, student, request.adding, isNewRating, request.working, request.success, flipped]);\n\n    const addingHandling = idOptions => {\n        setIsOpen(false);\n        setIsSpinner(idOptions === ratingsId);\n        setIsNewRating(false);\n    };\n\n    const addingOptionHandling = () => {\n        if (isOpen) {\n            setIsOpen(false);\n            setIsNewRating(false);\n        } else {\n            if (!isNewRating) {\n                setIsOpen(true);\n                setIsNewRating(true);\n            }\n        }\n    };\n\n    const previewHandling = (isOpen, data) => {\n        setIsOpenPreview(isOpen);\n        setPreviewContent(data)\n    };\n\n    const updateHandling = rating => {\n        rating.studentId = studentId;\n        rating.classId = classId;\n        setRatingToChange(rating);\n        setIsUpdate(!isUpdate);\n        setFlipped(!flipped);\n        setUpdatedRating(rating);\n    };\n\n    const changeRatingHandling = newRating => {\n        setUpdatedRating(newRating);\n    };\n\n    return (\n        <TableRow hover>\n            <TableCell style={{padding: 0}} className={clsx(classes.firstCell, classes.padding)} align='center'>\n                {i + 1}\n            </TableCell>\n            <TableCell className={clsx(classes.padding, classes.secondCell)} align='left'>\n                <Typography className={classes.names}>{`${student.lastName} ${student.firstName}`}</Typography>\n            </TableCell>\n            <TableCell className={clsx(classes.padding, classes.thirdCell)} align='left'>\n                <div className={classes.previewRoot}>\n                    <div className={clsx(classes.previewContent,\n                        isOpenPreview ? classes.showUpdate : classes.hiddenUpdate)}>\n                        <animated.div\n                            className={classes.flipped}\n                            style={{opacity: opacity.interpolate(o => 1 - o), visibility: !visibility, transform}}>\n                            <Paper elevation={9} className={classes.preview}>\n                                <Typography className={classes[previewContent.scales]}\n                                            variant='subtitle2'>{previewContent.description}</Typography>\n                                <Typography className={classes[previewContent.scales]}\n                                            variant='subtitle2'>{previewContent.date}</Typography>\n                            </Paper>\n                        </animated.div>\n                        <animated.div\n                            className={classes.flipped}\n                            style={{opacity, visibility, transform: transform.interpolate(t => `${t} rotateX(180deg)`)}}>\n                            <Paper elevation={9} className={classes.preview}>\n                                <RatingOptions\n                                    changeRating={changeRatingHandling}\n                                    isEditMode={true}\n                                    classId={classId}\n                                    ratingsId={ratingsId}\n                                    ratingToChange={ratingToChange}\n                                    isUpdate={isUpdate}\n                                />\n                            </Paper>\n                        </animated.div>\n                    </div>\n                </div>\n                <span className={classes.ratings}>\n                    {studentRatings.map(rating => {\n                        return (\n                            <Fragment key={rating._id}>\n                                <span>\n                                    <Tooltip\n                                        title={isNewRating ? '' : (isUpdateRating ? 'cancel update' : 'update grade')}\n                                        arrow\n                                        placement='bottom'\n                                        TransitionComponent={Fade}\n                                        enterDelay={3000}\n                                    >\n                                        <span>\n                                            <RatingItem\n                                                previewHandling={previewHandling}\n                                                updateHandling={updateHandling}\n                                                updatedRating={updatedRating}\n                                                rating={rating}/>\n                                        </span>\n                                    </Tooltip>\n                                </span>\n\n                            </Fragment>\n                        )\n                    })}\n                    <div className={classes.spinnerBox}>\n                        {(request.adding && isSpinner) && <CircularProgress size='20px' color='secondary'/>}\n                    </div>\n                </span>\n            </TableCell>\n            <TableCell>\n                <div className={classes.buttonBox}>\n                <span>\n                    <Tooltip\n                        title={(isNewRating && !isOpen) ? '' : (isOpen ? 'cancel adding' : 'add grade')}\n                        arrow\n                        placement='bottom'\n                        TransitionComponent={Fade}\n                        TransitionProps={{timeout: 1000}}\n                    >\n                <span>\n                     <IconButton\n                         aria-label='add'\n                         onClick={addingOptionHandling}\n                         disabled={isUpdateRating}\n                     >\n                    {<AddIcon\n                        className={((!isUpdateRating && !isNewRating) || (isOpen && isNewRating)) ?\n                            (isOpen ? classes.buttonCancel : classes.buttonAdd) : classes.disabled}/>}\n                    </IconButton>\n                </span>\n                </Tooltip>\n                </span>\n                    <Zoom in={isOpen}>\n                        <Paper elevation={9} className={classes.adding}>\n                            <RatingOptions isEditMode={false} addingHandling={addingHandling} classId={classId}\n                                           ratingsId={ratingsId} teacher={teacher}/>\n                        </Paper>\n                    </Zoom>\n                </div>\n            </TableCell>\n        </TableRow>\n    )\n\n};\n\nDiaryRow.propTypes = {\n    student: PropTypes.object.isRequired,\n    i: PropTypes.number.isRequired,\n    classId: PropTypes.string.isRequired,\n    teacher: PropTypes.object.isRequired,\n    setIsNewRating: PropTypes.func.isRequired,\n    isNewRating: PropTypes.bool.isRequired,\n    request: PropTypes.object.isRequired,\n    isUpdateRating: PropTypes.bool.isRequired,\n    setIsUpdateRating: PropTypes.func.isRequired\n};\n\nexport default DiaryRow;\n","import {connect} from 'react-redux';\nimport DiaryRow from './DiaryRow';\nimport {\n    setIsNewRating,\n    getIsNewRating,\n    getIsUpdateRating,\n    setIsUpdateRating\n} from \"../../../redux/actions/valuesActions\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\n\nconst mapStateToProps = state => ({\n    isNewRating: getIsNewRating(state),\n    request: getRequest(state),\n    isUpdateRating: getIsUpdateRating(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setIsNewRating: isNewRating => dispatch(setIsNewRating(isNewRating)),\n    setIsUpdateRating: isUpdateRating => dispatch(setIsUpdateRating(isUpdateRating))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiaryRow);\n","import React, {useEffect} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport componentStyle from \"./DiaryListStyle\";\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport {Link} from \"@material-ui/core\";\nimport TableRow from '@material-ui/core/TableRow';\nimport DiaryRow from '../../features/DiaryRow/DiaryRowContainer';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\n\nconst DiaryList = props => {\n    const {students} = props.selectedClass;\n    const {teacher, selectedClass, request, addSubjectRating} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n        prepareSubjectRating();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const prepareSubjectRating = () => {\n\n        if (students.length) {\n            students.forEach(student => {\n\n                if (student.ratings.length) {\n                    let ratingsSubject = student.ratings.map(rating => rating.subject);\n\n                    if (!ratingsSubject.includes(teacher.subject)) {\n                        addSubjectRating(student, teacher.subject);\n                    }\n                } else {\n                    addSubjectRating(student, teacher.subject);\n                }\n            })\n        }\n    };\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            {request.updating ? <Typography>{`Preparing data for new student...`}</Typography> :\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.classInfo}>\n                                </TableCell>\n                                <TableCell className={classes.classInfo} style={{zIndex: 0}}>\n                                    <Typography className={classes.description}\n                                                display='inline'>student</Typography>\n                                </TableCell>\n                                <TableCell className={classes.classInfo}>\n                                    <span className={classes.header}>\n                                        <Typography className={classes.description}\n                                                    display='inline'>grades</Typography>\n                                        <Typography className={classes.description} display='inline'>\n                                            {'students: '}\n                                            <span className={classes.tutorContent}>\n                                                {selectedClass.students.length}\n                                            </span>\n                                        </Typography>\n                                        <Typography className={classes.description} display='inline'>{'class teacher: '}\n                                            <Link href={`mailto:${selectedClass.mainTeacher.email}`}\n                                                className={classes.tutorContent}>\n                                                {selectedClass.mainTeacher.firstName} {selectedClass.mainTeacher.lastName}\n                                            </Link>\n                                        </Typography>\n                                    </span>\n                                </TableCell>\n                                <TableCell className={classes.classInfo}>\n                                    <Typography align='center' className={classes.description}>add+</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {students.map((student, i) => {\n                                return <DiaryRow\n                                    classId={selectedClass.id}\n                                    key={student.id}\n                                    student={student}\n                                    i={i}\n                                    teacher={teacher}\n                                />\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            }\n        </Paper>\n    )\n};\n\nDiaryList.propTypes = {\n    selectedClass: PropTypes.object.isRequired,\n    teacher: PropTypes.object.isRequired,\n    request: PropTypes.object.isRequired,\n    addSubjectRating: PropTypes.func.isRequired\n};\n\nexport default DiaryList;\n","import {connect} from 'react-redux';\nimport {addSubjectRating} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport DiaryList from \"./DiaryList\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addSubjectRating: (student, subject) => dispatch(addSubjectRating(student, subject))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DiaryList);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Alert from \"../../common/Alert/Alert\";\nimport componentStyle from \"./ClassBoxListStyle\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport {Zoom} from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport {a11yProps} from \"../../../utilities/functions\";\nimport DiaryList from \"../DiaryList/DiaryListContainer\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ClassBoxList = props => {\n    const {\n        loadClasses,\n        loadClassById,\n        user,\n        availableClasses,\n        request,\n        resetRequest,\n        modalYesNot,\n        setModalYesNot,\n        deleteRating,\n        selectedClass,\n        setSelectedClass\n    } = props;\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [alertIsOpen, setAlertIsOpen] = useState(false);\n    const [isClasses, setIsClasses] = useState(false);\n    const [isChecked, setIsChecked] = useState(false);\n    const [isOpenDiary, setIsOpenDiary] = useState(false);\n\n    useEffect(() => {\n\n        if (request.success === null) loadClasses(user.id);\n        if (request.success && availableClasses.length && !isClasses) {\n            loadClassById(availableClasses[value].id);\n            setIsClasses(true);\n        }\n\n        setAlertIsOpen(request.error !== null);\n        setIsChecked(Object.keys(selectedClass).length > 0);\n\n        if (isChecked) {\n            setIsOpenDiary(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [request.error, request.success, request.geting, availableClasses.length, isClasses, selectedClass]);\n\n    useEffect(() => {\n        return () => {\n            setSelectedClass({});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n        if (newValue !== value) {\n            setIsOpenDiary(false);\n        }\n    };\n\n    const changeClass = async () => {\n        await setSelectedClass({});\n        await setIsClasses(false);\n    };\n\n    const handleAlert = () => {\n        resetRequest();\n    };\n\n    const handleModal = isTrue => {\n        const {id, _id, classId, studentId} = modalYesNot.content.data;\n        setModalYesNot(false, {description: '', data: {}});\n\n        if (isTrue) {\n            deleteRating(id, _id, classId, studentId);\n        }\n    };\n\n    return (\n        <Paper variant='outlined' className={clsx(classes.root, classes.padding)}>\n            {request.pending ? <Spinner/> :\n                <>\n                    <div className={classes.subjectInfo}>\n                        <Typography variant='subtitle1'>{`subject: ${user.subject.toUpperCase()}`}</Typography>\n                    </div>\n                    {availableClasses.length ?\n                        <AppBar position=\"static\" className={classes.tabs}>\n                            <Tabs\n                                value={value}\n                                onChange={handleChange}\n                                textColor=\"primary\"\n                            >\n                                {availableClasses.map((item, i) => {\n                                    return <Tab\n                                        disabled={!isChecked || !isOpenDiary}\n                                        className={classes.tabs}\n                                        key={item.id}\n                                        label={item.name}\n                                        {...a11yProps(i)}/>\n                                })}\n                            </Tabs>\n                        </AppBar> :\n                        <Typography style={{fontSize: 18}}>You are not assigned to any class!</Typography>\n                    }\n\n                    <Paper className={clsx(classes.root, classes.image)}>\n                        {request.geting && <Spinner style={{marginLeft: '92px', marginTop: '55px'}} />}\n                        {isChecked &&\n                        <Zoom\n                            in={isOpenDiary}\n                            timeout={500}\n                            onExited={changeClass}\n                            unmountOnExit\n                        >\n                            <Paper elevation={4} style={{width: '100%'}}>\n                                <DiaryList selectedClass={selectedClass} teacher={user}/>\n                            </Paper>\n                        </Zoom>\n                        }\n                    </Paper>\n                    <Alert\n                        message={request.error}\n                        isOpenAlert={alertIsOpen}\n                        variant='error'\n                        handleCloseHandling={handleAlert}\n                    />\n                    <ModalAreYouSure\n                        description={modalYesNot.content.description}\n                        isOpen={modalYesNot.isOpen}\n                        isConfirm={handleModal}\n                    />\n                </>\n            }\n        </Paper>\n    )\n};\n\nClassBoxList.propTypes = {\n    availableClasses: PropTypes.array.isRequired,\n    selectedClass: PropTypes.object.isRequired,\n    setSelectedClass: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    request: PropTypes.object.isRequired,\n    loadClassById: PropTypes.func.isRequired,\n    loadClasses: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    modalYesNot: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired,\n    deleteRating: PropTypes.func.isRequired\n};\n\nexport default ClassBoxList;\n","import {connect} from 'react-redux';\nimport {getTeacherAllClass, getSelectedClass, setSelectedClass} from \"../../../redux/actions/classActions\";\nimport {getUser} from \"../../../redux/actions/usersActions\";\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {loadAllClassByTeacherId, deleteRatingForStudent, loadClassById} from \"../../../redux/thunks\";\nimport {getModalYesNot, setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport ClassBoxList from \"./ClassBoxList\";\n\nconst mapStateToProps = state => ({\n    availableClasses: getTeacherAllClass(state),\n    selectedClass: getSelectedClass(state),\n    user: getUser(state),\n    request: getRequest(state),\n    modalYesNot: getModalYesNot(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setSelectedClass: classItem => dispatch(setSelectedClass(classItem)),\n    loadClassById: id => dispatch(loadClassById(id)),\n    loadClasses: teacherId => dispatch(loadAllClassByTeacherId(teacherId)),\n    resetRequest: () => dispatch(resetRequest()),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content)),\n    deleteRating: (id, _id, classId, studentId) => dispatch(deleteRatingForStudent(id, _id, classId, studentId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassBoxList)\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport ClassBoxList from '../../features/ClassBoxList/ClassBoxListContainer';\n\nconst ClassDiaries = () => {\n\n    return (\n        <div>\n            <PageTitle>Class Diaries</PageTitle>\n            <ClassBoxList />\n        </div>\n    )\n};\n\nexport default ClassDiaries;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        height: '58px',\n        paddingLeft: style.smallSize,\n        backgroundColor: theme.palette.secondary.light,\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: theme.palette.action.item,\n        }\n    },\n    item: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    center: {\n        justifyContent: 'center'\n    },\n    parentsBox: {\n        display: 'flex',\n        backgroundColor: 'inherit',\n        alignItems: 'center',\n        flexDirection: 'column',\n        height: '50px',\n        width: '300px',\n        padding: `${style.smallSize} ${style.baseSize}`,\n        overflow: 'auto',\n        '&:hover': {\n            backgroundColor: theme.palette.action.header,\n        }\n    },\n    parents: {\n        display: 'inherit',\n        height: '100%',\n        width: '100%',\n        backgroundColor: 'inherit',\n        alignItems: 'center',\n        flexDirection: 'column',\n    }\n});\n\nexport default componentStyle;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {\n    Paper,\n    Grid,\n    Typography,\n    Link\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport componentStyle from \"./TeacherStudentItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeacherStudentItem = props => {\n    const {student} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container>\n                <Grid item lg={4} className={classes.item}>\n                    <Typography style={{fontWeight: 700}} display='inline'>\n                        {student.name}\n                    </Typography>\n                </Grid>\n                <Grid item lg={2} className={clsx(classes.item, classes.center)}>\n                    <Typography align='center'>\n                        {student.birthDate.substring(0, 10)}\n                    </Typography>\n                </Grid>\n                <Grid item lg={2} className={clsx(classes.item, classes.center)}>\n                    <Typography align='center'>\n                        {student.className}\n                    </Typography>\n                </Grid>\n                <Grid item lg={4} className={clsx(classes.item, classes.center)}>\n                    <div className={classes.parentsBox}>\n                        {student.parents.length ?\n                            student.parents.map((item, i) => {\n                                return (\n                                    <div key={i} className={classes.parents}>\n                                        <Link href={`mailto: ${item.email}`}>{`${item.name}; `}</Link>\n                                        <Typography variant='subtitle2'>{item.phone}</Typography>\n                                    </div>\n                                )\n                            }) :\n                            <Typography>none</Typography>\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nTeacherStudentItem.propTypes = {\n    student: PropTypes.object.isRequired\n};\n\nexport default TeacherStudentItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '490px',\n        marginTop: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.dark\n    },\n    item: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    title: {\n        color: theme.palette.primary.light\n    },\n    table: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        height: '369px',\n        margin: `${style.baseSize} 0`,\n        overflow: 'auto',\n        backgroundColor: theme.palette.secondary.dark\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '52px'\n    },\n    center: {\n        justifyContent: 'center'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n    Paper,\n    Grid,\n    Typography,\n    TableContainer,\n    Table,\n    TableFooter,\n    TableRow,\n    TextField,\n    TablePagination as MaterialPagination\n} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport TablePagination from \"../../common/TablePagination/TablePagination\";\nimport TeacherStudentItem from \"../TeacherStudentItem/TeacherStudentItem\";\nimport componentStyle from \"./TeacherDataStydentsStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeacherDataStudents = props => {\n    const {\n        request,\n        teacherAllClass,\n        loadTeacherStudentsName,\n        allStudents,\n        loadTeacherStudents,\n        classesStudents,\n        clearAllStudents,\n        clearClassesStudents\n    } = props;\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(6);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (teacherAllClass.length) {\n            let classesId = teacherAllClass.map(classItem => classItem.id);\n            loadTeacherStudentsName(classesId);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [teacherAllClass]);\n\n    useEffect(() => {\n\n        if (allStudents.length && selectedStudent === null) {\n            let studentsByRange = allStudents.slice(page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage);\n            loadTeacherStudents(studentsByRange);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allStudents.length, page, rowsPerPage, selectedStudent]);\n\n    useEffect(() => {\n        return () => {\n            clearClassesStudents([]);\n            clearAllStudents([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleSearch = value => {\n        setSelectedStudent(value);\n\n        if (value !== null) loadTeacherStudents([value]);\n    };\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <Grid container style={{padding: '8px 14px'}}>\n                <Grid item lg={4}>\n                    <Typography className={classes.title} variant='subtitle2' display='inline'>\n                        student name\n                    </Typography>\n                </Grid>\n                <Grid item lg={2} className={classes.item}>\n                    <Typography className={classes.title} variant='subtitle2' display='inline'>\n                        birth date\n                    </Typography>\n                </Grid>\n                <Grid item lg={2} className={classes.item}>\n                    <Typography className={classes.title} variant='subtitle2' display='inline'>\n                        class\n                    </Typography>\n                </Grid>\n                <Grid item lg={4} className={classes.item}>\n                    <Typography className={classes.title} variant='subtitle2' display='inline'>\n                        parents\n                    </Typography>\n                </Grid>\n                <div className={clsx(classes.table, (request.geting || !classesStudents.length) ? classes.center : '')}>\n                    {request.geting ? <Spinner/> :\n                        classesStudents.length ?\n                            classesStudents.map(student => {\n                                return <TeacherStudentItem key={student.id} student={student}/>\n                            }) :\n                            !allStudents.length ?\n                                <Typography align='center' style={{fontSize: 18}}>\n                                    You have no students assigned!\n                                </Typography> : <Spinner/>\n                    }\n                </div>\n                <TableContainer className={classes.footer} component={Paper}>\n                    <Autocomplete\n                        disabled={!allStudents.length}\n                        id='search-student'\n                        options={allStudents}\n                        getOptionLabel={student => student.name}\n                        style={{width: 300, paddingLeft: '15px'}}\n                        size='small'\n                        onChange={(e, value) => handleSearch(value)}\n                        renderInput={params => <TextField {...params} label=\"Search student\"/>}\n                    />\n                    <Table>\n                        <TableFooter>\n                            <TableRow>\n                                <MaterialPagination\n                                    hidden={selectedStudent !== null || !allStudents.length}\n                                    rowsPerPageOptions={[6, 12, 20]}\n                                    colSpan={3}\n                                    count={allStudents.length}\n                                    rowsPerPage={rowsPerPage}\n                                    page={page}\n                                    SelectProps={{\n                                        inputProps: {'aria-label': 'rows per page'},\n                                        native: true,\n                                    }}\n                                    onChangePage={handleChangePage}\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                                    ActionsComponent={TablePagination}\n                                />\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Paper>\n    )\n};\n\nTeacherDataStudents.propTypes = {\n    request: PropTypes.object.isRequired,\n    teacherAllClass: PropTypes.array.isRequired,\n    loadTeacherStudentsName: PropTypes.func.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    loadTeacherStudents: PropTypes.func.isRequired,\n    classesStudents: PropTypes.array.isRequired,\n    clearAllStudents: PropTypes.func.isRequired,\n    clearClassesStudents: PropTypes.func.isRequired\n};\n\nexport default TeacherDataStudents;\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getTeacherAllClass} from \"../../../redux/actions/classActions\";\nimport {getTeacherStudentsNameRequest, getTeacherStudentsByIdRequest} from \"../../../redux/thunks\";\nimport {getAllStudents, getClassesStudents, loadAllStudents, setClassesStudents} from \"../../../redux/actions/studentActions\";\nimport TeacherDataStudents from \"./TeacherDataStudents\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    teacherAllClass: getTeacherAllClass(state),\n    allStudents: getAllStudents(state),\n    classesStudents: getClassesStudents(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadTeacherStudentsName: classesId => dispatch(getTeacherStudentsNameRequest(classesId)),\n    loadTeacherStudents: students => dispatch(getTeacherStudentsByIdRequest(students)),\n    clearAllStudents: data => dispatch(loadAllStudents(data)),\n    clearClassesStudents: data => dispatch(setClassesStudents(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDataStudents)\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        backgroundColor: theme.palette.secondary.light,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        padding: style.baseSize,\n        height: style.contentHeight\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    },\n    edit: {\n        display: 'flex',\n        width: '100%',\n        height: '490px',\n        marginTop: theme.spacing(1),\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Tabs, Tab, AppBar} from \"@material-ui/core\";\nimport ListIcon from '@material-ui/icons/List';\nimport EditIcon from '@material-ui/icons/Edit';\nimport {a11yProps} from \"../../../utilities/functions\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport Alert from \"../../common/Alert/Alert\";\nimport EditUserData from \"../../common/EditUserData/EditUserDataContainer\";\nimport TeacherDataStudents from \"../TeacherDataStudents/TeachersDataStudentsContainer\";\nimport componentStyle from \"./TeacherDataHandlingStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeacherDataHandling = props => {\n    const {\n        request,\n        resetRequest,\n        alertSuccess,\n        setAlertSuccess,\n        teacherAllClass,\n        loadAllClasses,\n        userId\n    } = props;\n    const [value, setValue] = useState(0);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (!teacherAllClass.length) loadAllClasses(userId);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [teacherAllClass.length]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const alertHandling = () => {\n\n        if (request.error !== null) resetRequest();\n\n        if (alertSuccess.isOpen) setAlertSuccess(false, '');\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            {request.pending ? <Spinner/> :\n                <>\n                    <AppBar position='static' className={classes.tabs}>\n                        <Tabs value={value} onChange={handleChange} textColor='primary' variant='fullWidth'>\n                            <Tab label='students list' icon={<ListIcon/>} {...a11yProps(0)}/>\n                            <Tab label=\"edit teacher data\" icon={<EditIcon/>} {...a11yProps(1)}/>\n                        </Tabs>\n                    </AppBar>\n                    {value === 0 && <TeacherDataStudents/>}\n                    {value === 1 &&\n                    <div className={classes.edit}>\n                        <EditUserData/>\n                    </div>\n                    }\n                </>\n\n            }\n            <Alert\n                isOpenAlert={request.error !== null || alertSuccess.isOpen}\n                variant={alertSuccess.isOpen ? 'success' : 'error'}\n                message={alertSuccess.isOpen ? alertSuccess.message : request.error}\n                handleCloseHandling={alertHandling}\n            />\n        </Paper>\n    )\n};\n\nTeacherDataHandling.propTypes = {\n    request: PropTypes.object.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    teacherAllClass: PropTypes.array.isRequired,\n    loadAllClasses: PropTypes.func.isRequired,\n    userId: PropTypes.string.isRequired\n};\n\nexport default TeacherDataHandling\n","import {connect} from 'react-redux';\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getAlertSuccess, setAlertSuccess} from \"../../../redux/actions/valuesActions\";\nimport {getTeacherAllClass} from \"../../../redux/actions/classActions\";\nimport {getUserId} from \"../../../redux/actions/usersActions\";\nimport {loadAllClassByTeacherId} from \"../../../redux/thunks\";\nimport TeacherDataHandling from \"./TeacherDataHandling\";\n\nconst mapStateToProps = state => ({\n   request: getRequest(state),\n   alertSuccess: getAlertSuccess(state),\n   teacherAllClass: getTeacherAllClass(state),\n   userId: getUserId(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n   resetRequest: () => dispatch(resetRequest()),\n   setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message)),\n   loadAllClasses: teacherId => dispatch(loadAllClassByTeacherId(teacherId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherDataHandling)\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport TeacherDataHandling from \"../../features/TeacherDataHandling/TeacherDataHandlingContainer\";\n\nconst TeacherData = () => (\n    <div>\n        <PageTitle>Teacher Data</PageTitle>\n        <TeacherDataHandling/>\n    </div>\n);\n\nexport default TeacherData;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport UserWelcome from \"../../features/UserWelcome/UserWelcome\";\nimport students from '../../../images/students.png';\nimport teachers from '../../../images/principalTeachers.png';\nimport classes from '../../../images/classes.png';\nimport parents from '../../../images/parents.png';\n\nconst buttonsData = [\n    {\n        image: classes,\n        title: 'Classes',\n        width: 400,\n        height: 260,\n        top: 195,\n        left: 260,\n        path: '/classes'\n    },\n    {\n        image: teachers,\n        title: 'Teachers',\n        width: 300,\n        top: 16,\n        left: 97,\n        height: 200,\n        path: '/teachers'\n    },\n    {\n        image: students,\n        title: 'Students',\n        width: 300,\n        height: 200,\n        right: 146,\n        top: 136,\n        path: '/students'\n    },\n    {\n        image: parents,\n        title: 'Parents',\n        width: 350,\n        height: 220,\n        top: 160,\n        path: '/parents'\n    }\n];\n\nconst HomePrincipal = () => (\n    <div>\n        <PageTitle>Principal's Zone</PageTitle>\n        <UserWelcome\n            userType='principal'\n            buttons={buttonsData}\n        />\n    </div>\n);\n\nexport default HomePrincipal;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: theme.palette.action.adding,\n        padding: style.smallSize\n    },\n    button: {\n        outline: 'none !important',\n        backgroundColor: theme.palette.primary.dark,\n        '&:hover': {backgroundColor: theme.palette.action.dark}\n    },\n    input: {\n        minWidth: '180px'\n    },\n    addClass: {\n        width: '600px',\n        height: '56px',\n        display: 'inline-flex',\n        justifyContent: 'space-around',\n        padding: style.smallSize,\n        backgroundColor: theme.palette.secondary.dark,\n        alignItems: 'center'\n    },\n    classGrade: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        width: '250px'\n    },\n    classOptions: {\n        display: 'inline-flex',\n        width: '180px',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n    possibleNames: {\n        width: '115px'\n    },\n    className: {\n        paddingTop: '13px'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    IconButton,\n    Tooltip,\n    Fade,\n    Select,\n    FormControl,\n    MenuItem,\n    InputLabel,\n    Typography\n} from \"@material-ui/core\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport componentStyle from './ClassesPanelStyle'\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ClassesPanel = props => {\n    const {\n        allClasses,\n        addClass,\n        loadTeachers,\n        request,\n        teachers,\n        availableNames,\n        getClassGrade,\n        getPossibleTutors,\n        tutorIsUse,\n        setTutorIsUse\n    } = props;\n    const [newClass, setNewClass] = useState({\n        name: '',\n        mainTeacher: 'unselected',\n    });\n    const [isPossible, setIsPossible] = useState(false);\n    const [availableTutors, setAvailableTutors] = useState([]);\n    const [availableClassNames, setAvailableClassNames] = useState([]);\n    const [classGrade, setClassGrade] = useState('none');\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsPossible(newClass.mainTeacher !== 'unselected');\n\n        if (teachers.length === 0) loadTeachers();\n        if (allClasses.length && teachers.length && tutorIsUse) prepareData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [availableNames.grade, availableNames.type, classGrade,\n        teachers, newClass.mainTeacher, allClasses, tutorIsUse]);\n\n    const prepareData = () => {\n        let result = [];\n        let possibleTutors = [];\n        availableNames.grade.forEach(grade => {\n            availableNames.type.forEach(type => {\n                result = [...result, `${grade} ${type}`]\n            })\n        });\n        allClasses.forEach(item => {\n            result = result.filter(name => name !== item.name.substring(6, item.name.length));\n        });\n\n        if (classGrade !== 'none') {\n            result = result.filter(name => name.substring(0, 1) === classGrade)\n        }\n        setAvailableClassNames(result);\n\n        if (newClass.mainTeacher === 'unselected') setNewClass({...newClass, name: result[0]});\n        let existedTutors = allClasses.map(item => item.mainTeacher.id);\n        teachers.forEach(teacher => {\n\n            if (!existedTutors.includes(teacher.id)) {\n                possibleTutors = [...possibleTutors, teacher];\n                setAvailableTutors(possibleTutors);\n                getPossibleTutors(possibleTutors);\n            }\n        });\n\n        if (existedTutors.length === teachers.length) {\n            setAvailableTutors([]);\n            getPossibleTutors([]);\n        }\n        setTutorIsUse(false);\n    };\n\n    const addClassHandling = () => {\n        newClass.name = `Class ${newClass.name}`;\n        addClass(newClass);\n        setNewClass({name: '', mainTeacher: 'unselected'});\n    };\n\n    const handleTutorChange = event => {\n        setNewClass({...newClass, mainTeacher: event.target.value});\n    };\n\n    const handleClassGrade = event => {\n        setClassGrade(event.target.value);\n        getClassGrade(event.target.value);\n        setTutorIsUse(true);\n    };\n\n    const handleClassName = event => {\n        setNewClass({...newClass, name: event.target.value})\n    };\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <span style={{paddingLeft: '5px'}}>\n                classes: <Typography display='inline' variant='h6'>{allClasses.length}</Typography>\n            </span>\n            <span className={classes.classGrade}>\n                <FormControl>\n                <InputLabel id='choose-class-grade'>\n                    sort by class level\n                </InputLabel>\n                <Select\n                    className={classes.input}\n                    labelId='choose-class-grade'\n                    value={classGrade}\n                    onChange={handleClassGrade}\n                >\n                    <MenuItem value='none'>none</MenuItem>\n                    {availableNames.grade.map(item => {\n                        return <MenuItem key={item} value={item}>{`${item}th`}</MenuItem>\n                    })}\n                </Select>\n            </FormControl>\n            </span>\n            <Paper variant='outlined' className={classes.addClass}>\n                {request.adding ? <Spinner/> :\n                    <>\n                        <span className={classes.classOptions}>\n                    <Typography className={classes.className} variant='subtitle1'>Class</Typography>\n                    <FormControl className={classes.possibleNames}>\n                        <InputLabel id='class-names' style={{width: 150}}>available names</InputLabel>\n                        <Select\n                            labelId='class-names'\n                            value={newClass.name}\n                            onChange={handleClassName}\n                        >\n                            {availableClassNames.map(name => {\n                                return <MenuItem key={name} value={name}>{name}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </span>\n                        <FormControl>\n                            <InputLabel id='choose-teacher'>\n                                choose class teacher\n                            </InputLabel>\n                            <Select\n                                className={classes.input}\n                                labelId='choose-teacher'\n                                value={newClass.mainTeacher}\n                                onChange={handleTutorChange}\n                            >\n                                <MenuItem value='unselected'>unselected</MenuItem>\n                                {availableTutors.map(item => {\n                                    return <MenuItem key={item.id}\n                                                     value={item}>{`${item.lastName} ${item.firstName}`}</MenuItem>\n                                })}\n                            </Select>\n                        </FormControl>\n\n                        <Tooltip\n                            title='Add class'\n                            placement='bottom'\n                            arrow\n                            TransitionComponent={Fade}\n                            enterDelay={1000}\n                        >\n                    <span>\n                    <IconButton\n                        className={classes.button}\n                        onClick={addClassHandling}\n                        disabled={!isPossible}\n                    >\n                        <GroupAddIcon/>\n                    </IconButton>\n                        </span>\n                        </Tooltip>\n                    </>\n                }\n            </Paper>\n        </Paper>\n    )\n};\n\nClassesPanel.propTypes = {\n    allClasses: PropTypes.array.isRequired,\n    request: PropTypes.object.isRequired,\n    loadTeachers: PropTypes.func.isRequired,\n    teachers: PropTypes.array.isRequired,\n    addClass: PropTypes.func.isRequired,\n    availableNames: PropTypes.object.isRequired,\n    getClassGrade: PropTypes.func.isRequired,\n    getPossibleTutors: PropTypes.func.isRequired,\n    tutorIsUse: PropTypes.bool.isRequired,\n    setTutorIsUse: PropTypes.func.isRequired\n};\n\nexport default ClassesPanel;\n","import {connect} from 'react-redux';\nimport ClassesPanel from './ClassesPanel';\nimport {getAllClasses, getAvailableNames} from \"../../../redux/actions/classActions\";\nimport {loadTeachersRequest, addClassRequest} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getTeachers} from \"../../../redux/actions/usersActions\";\nimport {getTutorIsUse, setTutorIsUse} from \"../../../redux/actions/valuesActions\";\n\nconst mapStateToProps = state => ({\n    allClasses: getAllClasses(state),\n    request: getRequest(state),\n    teachers: getTeachers(state),\n    availableNames: getAvailableNames(state),\n    tutorIsUse: getTutorIsUse(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadTeachers: () => dispatch(loadTeachersRequest()),\n    addClass: payload => dispatch(addClassRequest(payload)),\n    setTutorIsUse: isUse => dispatch(setTutorIsUse(isUse))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassesPanel);\n","import {style} from \"../../../styles/global\";\nimport image from '../../../images/teacherDesk.png';\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        paddingTop: style.baseSize,\n\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    },\n    content: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.dark,\n        width: '100%',\n        height: '430px',\n        marginTop: theme.spacing(1),\n        backgroundImage: `url(${image})`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n    },\n    nothing: {\n        height: '500px'\n    }\n});\n\nexport default componentStyle;\n","const componentStyle = theme => ({\n    root: {\n        width: '100%',\n        margin: '7px',\n        backgroundColor: theme.palette.secondary.dark\n    },\n    buttons: {\n        outline: 'none !important',\n        color: theme.palette.primary.main\n    },\n    second: {\n        display: 'flex',\n        height: '95px',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n    selectTutor: {\n        width: '100%',\n        display: 'inline-flex',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n    descTutor: {\n        width: '100%',\n        display: 'inline-flex',\n        justifyContent: 'center',\n    },\n    selectInput: {\n        width: '250px'\n    },\n    replaceButton: {\n        outline: 'none !important',\n        backgroundColor: theme.palette.primary.dark,\n        '&:hover': {backgroundColor: theme.palette.action.dark}\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    buttonsActive: {\n        outline: 'none !important',\n        backgroundColor: theme.palette.primary.dark,\n        '&:hover': {\n            backgroundColor: theme.palette.action.dark\n        }\n    },\n    buttonDelete: {\n        outline: 'none !important',\n        backgroundColor: theme.palette.primary.light,\n        color: theme.palette.action.light,\n        '&:hover': {\n            color: theme.palette.action.main\n        }\n    },\n    searchField: {\n        padding: '5px'\n    },\n    progress: {\n        cursor: 'progress !important'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n    Paper,\n    Button,\n    Typography,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Grid,\n    IconButton,\n    Tooltip,\n    Fade,\n    TextField,\n    Zoom\n} from \"@material-ui/core\";\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport SchoolIcon from '@material-ui/icons/School';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport componentStyle from \"./NavClassPanelStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst NavClassPanel = props => {\n    const {\n        request,\n        classId,\n        name,\n        tutor,\n        possibleTutors,\n        getModeStatus, subjects,\n        getSelectedSubject,\n        getFilteredStudents,\n        isChanging,\n        updateTutor,\n        confirmUpdate,\n        getIsTutor,\n        setModalYesNot\n    } = props;\n    const classes = useStyles();\n    const [newTutor, setNewTutor] = useState('unselected');\n    const [isPossible, setIsPossible] = useState(false);\n    const [isStudentsMode, setIsStudentsMode] = useState(false);\n    const [isTeachersMode, setIsTeachersMode] = useState(false);\n    const [selectedSubject, setSelectedSubject] = useState('all');\n    const [filteredStudents, setFilteredStudents] = useState('');\n    const [isDeleteVisible, setIsDeleteVisible] = useState(true);\n\n    useEffect(() => {\n        setIsPossible(newTutor !== 'unselected' && !isStudentsMode && !isTeachersMode);\n        getModeStatus(isStudentsMode, isTeachersMode);\n\n        if (request.updating) {\n            setIsStudentsMode(false);\n            setIsTeachersMode(false);\n            setIsPossible(false);\n        }\n\n        setIsDeleteVisible(!isStudentsMode && !isTeachersMode && !request.updating);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [newTutor, isStudentsMode, isTeachersMode, request.updating]);\n\n    const handleNewTutor = event => {\n        setNewTutor(event.target.value)\n    };\n\n    const handleSelectedSubject = event => {\n        setSelectedSubject(event.target.value);\n        getSelectedSubject(event.target.value);\n    };\n\n    const handleFilteredStudents = event => {\n        setFilteredStudents(event.target.value);\n        getFilteredStudents(event.target.value);\n    };\n\n    const replaceTutorHandling = () => {\n\n        if (newTutor !== 'unselected') {\n            updateTutor({id: classId, mainTeacher: newTutor});\n            setNewTutor('unselected');\n            getIsTutor(true)\n        }\n    };\n\n    const removeClass = () => {\n        setModalYesNot(true, {\n            description: `Do you want remove ${name}?`,\n            data: {id: classId}\n        });\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container justify='space-between' alignItems='center'>\n                <Grid item lg={5}>\n                    <div className={classes.descTutor}>\n                        <Typography display='inline' component='p' color='textSecondary'>\n                            class teacher:\n                        </Typography>\n                        <Typography\n                            display='inline'\n                            component='p'\n                            color='textPrimary'\n                            style={{paddingLeft: '10px', fontWeight: 700}}\n                        >\n                            {` ${tutor.lastName} ${tutor.firstName}`}\n                        </Typography>\n                    </div>\n                    <div className={classes.selectTutor}>\n                        <FormControl\n                            disabled={isTeachersMode || isStudentsMode || request.updating}\n                            className={classes.selectInput}\n                        >\n                            <InputLabel id='replace-tutor'>\n                                replace\n                            </InputLabel>\n                            <Select\n                                labelId='replace-tutor'\n                                value={newTutor}\n                                onChange={handleNewTutor}\n                            >\n                                <MenuItem value='unselected'>unselected</MenuItem>\n                                {possibleTutors.map(tutor => {\n                                    return (\n                                        <MenuItem key={tutor.id} value={tutor}>\n                                            {`${tutor.lastName} ${tutor.firstName}`}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                        <Tooltip\n                            title='Replace class teacher'\n                            classes={{tooltip: classes.tooltip}}\n                            placement='top'\n                            arrow\n                            TransitionComponent={Fade}\n                            enterDelay={1000}\n                        >\n                            <span className={(request.updating || request.geting) ? classes.progress : ''}>\n                                <IconButton\n                                    size='small'\n                                    disabled={!isPossible || request.updating}\n                                    className={classes.replaceButton}\n                                    onClick={replaceTutorHandling}\n                                >\n                                    <DoneIcon fontSize='small'/>\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    </div>\n\n                </Grid>\n                <Grid item lg={2} className={classes.second}>\n                    <Tooltip\n                        title={isStudentsMode ? 'OFF students list change mode' : 'ON students list change mode'}\n                        classes={{tooltip: classes.tooltip}}\n                        placement='left'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span className={request.updating ? classes.progress : ''}>\n                            <Button\n                                variant='outlined'\n                                disabled={request.updating}\n                                className={clsx(classes.buttons, isStudentsMode && classes.buttonsActive)}\n                                onClick={() => {\n                                    setIsStudentsMode(!isStudentsMode);\n                                    setIsTeachersMode(false);\n                                    setFilteredStudents('');\n                                }}\n                            >\n                                <SwapHorizIcon/>\n                                <SchoolIcon/>\n                            </Button>\n                        </span>\n                    </Tooltip>\n                    <Tooltip\n                        title={isTeachersMode ? 'OFF class teachers list change mode' :\n                            'ON class teachers list change mode'}\n                        classes={{tooltip: classes.tooltip}}\n                        placement='left'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span className={request.updating ? classes.progress : ''}>\n                             <Button\n                                 variant='outlined'\n                                 disabled={request.updating}\n                                 className={clsx(classes.buttons, isTeachersMode && classes.buttonsActive)}\n                                 onClick={() => {\n                                     setIsTeachersMode(!isTeachersMode);\n                                     setIsStudentsMode(false);\n                                     setSelectedSubject('all');\n                                 }}\n                             >\n                                <SwapHorizIcon/>\n                                <SupervisedUserCircleIcon/>\n                            </Button>\n                        </span>\n                    </Tooltip>\n                </Grid>\n                <Grid item lg={5}>\n                    <Grid container>\n                        <Grid item lg={8} component='span'>\n                            <Zoom in={isStudentsMode}>\n                                <TextField\n                                    hidden={!isStudentsMode}\n                                    size='small'\n                                    label='search student'\n                                    type='search'\n                                    id='search-student'\n                                    variant='outlined'\n                                    value={filteredStudents}\n                                    onChange={handleFilteredStudents}\n                                />\n                            </Zoom>\n                            <Zoom in={isTeachersMode}>\n                                <FormControl className={classes.selectInput} hidden={!isTeachersMode}>\n                                    <InputLabel id='select-subject'>\n                                        sort by subject\n                                    </InputLabel>\n                                    <Select\n                                        labelId='select-subject'\n                                        value={selectedSubject}\n                                        onChange={handleSelectedSubject}\n                                    >\n                                        <MenuItem value='all'>all</MenuItem>\n                                        {subjects.map((subject, i) => {\n                                            return <MenuItem key={i} value={subject}>{subject}</MenuItem>\n                                        })}\n                                    </Select>\n                                </FormControl>\n                            </Zoom>\n                        </Grid>\n                        <Grid\n                            item\n                            lg={4}\n                            component='span'\n                            style={{display: 'flex', justifyContent: 'center'}}\n                        >\n                            <Grid item lg={6} component='span' style={{display: 'flex', justifyContent: 'space-between'}}>\n                                <Tooltip\n                                    title='Remove current class'\n                                    classes={{tooltip: classes.tooltip}}\n                                    placement='top-end'\n                                    arrow\n                                    TransitionComponent={Fade}\n                                    enterDelay={1000}\n                                >\n                            <span className={request.updating ? classes.progress : ''}>\n                                <IconButton\n                                    disabled={!isDeleteVisible}\n                                    className={classes.buttonDelete}\n                                    onClick={removeClass}\n                                >\n                                    <DeleteIcon/>\n                                </IconButton>\n                            </span>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item lg={6} component='span' style={{display: 'flex', justifyContent: 'center'}}>\n                                <Tooltip\n                                    title='Confirm new list content'\n                                    classes={{tooltip: classes.tooltip}}\n                                    placement='top-end'\n                                    arrow\n                                    TransitionComponent={Fade}\n                                    enterDelay={1000}\n                                >\n                            <span className={request.updating ? classes.progress : ''}>\n                                <IconButton\n                                    disabled={!isChanging || isDeleteVisible}\n                                    className={classes.buttonsActive}\n                                    onClick={confirmUpdate}\n                                >\n                                    <DoneIcon/>\n                                </IconButton>\n                            </span>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nNavClassPanel.propTypes = {\n    request: PropTypes.object.isRequired,\n    tutor: PropTypes.object.isRequired,\n    possibleTutors: PropTypes.array.isRequired,\n    getModeStatus: PropTypes.func.isRequired,\n    subjects: PropTypes.array.isRequired,\n    getSelectedSubject: PropTypes.func.isRequired,\n    getFilteredStudents: PropTypes.func.isRequired,\n    isChanging: PropTypes.bool.isRequired,\n    classId: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    updateTutor: PropTypes.func.isRequired,\n    confirmUpdate: PropTypes.func.isRequired,\n    getIsTutor: PropTypes.func.isRequired,\n    setModalYesNot: PropTypes.func.isRequired\n};\n\nexport default NavClassPanel;\n","import {connect} from 'react-redux';\nimport {setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {updateTutorClassRequest} from \"../../../redux/thunks\";\nimport NavClassPanel from \"./NavClassPanel\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateTutor: classItem => dispatch(updateTutorClassRequest(classItem)),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavClassPanel)\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: '100%',\n        margin: 'auto',\n    },\n    paper: {\n        width: 434,\n        height: 270,\n        overflow: 'auto',\n        transition: '.5s'\n    },\n    button: {\n        margin: theme.spacing(0.5, 0),\n    },\n    description: {\n        padding: style.smallSize\n    },\n    moreWidth: {\n        width: 474,\n        transition: '.5s'\n    },\n    duplicate: {\n        color: '#ff3838'\n    },\n    spinner: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types'\nimport clsx from \"clsx\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n    Grid,\n    Paper,\n    List,\n    ListItem,\n    Typography,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Button,\n    Zoom\n} from '@material-ui/core';\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport NavClassPanel from \"../NavClassPanel/NavClassPanelContainer\";\nimport componentStyle from \"./ClassContentStyle\";\nimport {sortByLastnameFromAToZ} from \"../../../utilities/functions\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst not = (a, b) => {\n    return a.filter(value => b.indexOf(value) === -1);\n};\n\nconst intersection = (a, b) => {\n    return a.filter(value => b.indexOf(value) !== -1);\n};\n\nconst ClassContent = props => {\n    const {\n        classItem,\n        request,\n        teachers,\n        possibleTutors,\n        freeStudents,\n        availableSubjects,\n        updateClass,\n        studentMode\n    } = props;\n    const [checked, setChecked] = useState([]);\n    const [leftList, setLeftList] = useState(classItem.students);\n    const [rightList, setRightList] = useState(classItem.subjectTeachers);\n    const [leftDesc, setLeftDesc] = useState('students');\n    const [rightDesc, setRightDesc] = useState('teachers');\n    const [isVisible, setIsVisible] = useState(false);\n    const [isShowButtons, setIsShowButtons] = useState(false);\n    const [isStudentMode, setIsStudentMode] = useState(false);\n    const [isTeacherMode, setIsTeacherMode] = useState(false);\n    const [isTypeStudent, setIsTypeStudent] = useState(true);\n    const [isTypeTeacher, setIsTypeTeacher] = useState(false);\n    const [freeTeachers, setFreeTeachers] = useState([]);\n    const [subjects,] = useState(availableSubjects[`class${classItem.name.substring(6, 7)}`]);\n    const [isChanging, setIsChanging] = useState(false);\n    const [subjectDuplicates, setSubjectDuplicates] = useState([]);\n    const [isTutor, setIsTutor] = useState(false);\n    const classes = useStyles();\n\n    let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) !== index);\n\n    useEffect(() => {\n        prepareFreeTeachers();\n        setIsVisible(isStudentMode || isTeacherMode);\n\n        if (isVisible) {\n            setTimeout(() => setIsShowButtons(true), 500);\n        } else {\n            setIsShowButtons(false);\n        }\n\n        if (isStudentMode && !isTeacherMode) {\n            setRightList(freeStudents);\n            setLeftList(classItem.students);\n            setIsTypeTeacher(true);\n            setIsTypeStudent(true);\n            setRightDesc('available students');\n            setLeftDesc('students');\n            setIsTutor(false);\n        } else if (!isStudentMode && isTeacherMode) {\n            setRightList(freeTeachers);\n            setLeftList(classItem.subjectTeachers);\n            setIsTypeStudent(false);\n            setIsTypeTeacher(false);\n            setRightDesc('available teachers');\n            setLeftDesc('teachers');\n            setIsTutor(false);\n        } else {\n            setRightList(classItem.subjectTeachers);\n            setLeftList(classItem.students);\n            setIsTypeTeacher(false);\n            setIsTypeStudent(true);\n            setRightDesc('teachers');\n            setLeftDesc('students');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isStudentMode, isTeacherMode, isVisible, isShowButtons,\n        teachers, classItem.students, classItem.subjectTeachers]);\n\n    useEffect(() => {\n\n        if (isStudentMode || isTeacherMode) {\n            let first = isStudentMode ? classItem.students.map(student => student.id) :\n                classItem.subjectTeachers.map(teacher => teacher.id);\n            let second = leftList.map(item => item.id);\n            let result = first.length !== second.length;\n\n            if (first.length === second.length) {\n                let counter = 0;\n                first.forEach(item => {\n\n                    if (second.includes(item)) counter++;\n                });\n                result = (counter !== first.length);\n            }\n            setIsChanging(result);\n        } else {\n            setIsChanging(false);\n        }\n\n        if (isTeacherMode) {\n            let subjects = leftList.map(item => item.subject);\n            setSubjectDuplicates(findDuplicates(subjects));\n            if (findDuplicates(subjects).length > 0) setIsChanging(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [leftList]);\n\n    const leftChecked = intersection(checked, leftList);\n    const rightChecked = intersection(checked, rightList);\n\n    const confirmUpdate = async () => {\n        await studentMode(isStudentMode);\n        updateClass({\n            id: classItem.id,\n            isStudents: isStudentMode,\n            [isStudentMode ? 'students' : 'subjectTeachers']: leftList\n        });\n    };\n\n    const setSelectedSubject = subject => {\n        subject !== 'all' ?\n            setRightList(freeTeachers.filter(item => item.subject === subject)) : setRightList(freeTeachers);\n    };\n\n    const setFilteredStudents = data => {\n        setRightList(freeStudents.filter(item => (item.lastName.toLowerCase().includes(data.toLowerCase()) ||\n            item.firstName.toLowerCase().includes(data.toLowerCase()))));\n    };\n\n    const prepareFreeTeachers = () => {\n        let result = [];\n        let teachersClassId = classItem.subjectTeachers.map(teacher => teacher.id);\n        teachers.forEach(item => {\n\n            if (!teachersClassId.includes(item.id)) result = [...result, item]\n        });\n        setFreeTeachers(result);\n    };\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    const getModeStatus = (isStudentMode, isTeacherMode) => {\n        setIsStudentMode(isStudentMode);\n        setIsTeacherMode(isTeacherMode);\n    };\n\n    const handleCheckedRight = () => {\n        setRightList(rightList.concat(leftChecked));\n        setLeftList(not(leftList, leftChecked));\n        setChecked(not(checked, leftChecked));\n    };\n\n    const handleCheckedLeft = () => {\n        setLeftList(leftList.concat(rightChecked));\n        setRightList(not(rightList, rightChecked));\n        setChecked(not(checked, rightChecked));\n    };\n\n    const rowItem = (i, value, isStudent, duplicates) => {\n        const {lastName, firstName, birthDate, subject} = value;\n\n        return (\n            <span style={{whiteSpace: 'nowrap'}}>\n                <Typography display='inline' component='p' color='textSecondary'>{`${i + 1}. `}</Typography>\n                <Typography display='inline' variant='h6' color='textPrimary'>{`${lastName} ${firstName}`}</Typography>\n                {isStudent ?\n                    <Typography display='inline' component='p' color='textSecondary'>\n                        {` d.o.b.: ${birthDate.substring(0, 10)}`}\n                    </Typography> :\n                    <Typography\n                        display='inline'\n                        component='p'\n                        color='textSecondary'\n                        className={duplicates.includes(subject) ? classes.duplicate : ''}\n                    >\n                        {` - ${subject}`}\n                    </Typography>\n                }\n            </span>\n        )\n    };\n\n    const customList = (items, isStudent) => (\n        <Paper\n            className={clsx(classes.paper, !isVisible && classes.moreWidth, request.updating && !isTutor && classes.spinner)}>\n            {(request.updating) && !isTutor ? <Spinner/> :\n                <List dense component=\"div\" role=\"list\">\n                    {items.map((value, i) => {\n                        const labelId = `transfer-list-item-${value}-label`;\n\n                        return (\n                            <ListItem key={value.id} role=\"listitem\" button onClick={handleToggle(value)}>\n                                <ListItemText\n                                    id={labelId}\n                                    style={{margin: 0}}\n                                    primary={rowItem(i, value, isStudent, subjectDuplicates)}\n                                />\n                                <ListItemIcon style={{justifyContent: \"flex-end\"}}>\n                                    <Checkbox\n                                        hidden={!isShowButtons}\n                                        style={{padding: 0}}\n                                        checked={checked.indexOf(value) !== -1}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{'aria-labelledby': labelId}}\n                                    />\n                                </ListItemIcon>\n                            </ListItem>\n                        );\n                    })}\n                    <ListItem/>\n                </List>\n            }\n        </Paper>\n    );\n\n    return (\n        <Grid container spacing={2} justify=\"space-between\" alignItems=\"center\" className={classes.root}>\n            <Grid item>\n                {customList(leftList.sort(sortByLastnameFromAToZ), isTypeStudent)}\n                <Typography className={classes.description} variant='subtitle2'>\n                    {`${leftDesc}: ${request.updating ? '...' : leftList.length}`}\n                </Typography>\n            </Grid>\n            <Zoom in={isShowButtons}>\n                <Grid item hidden={!isShowButtons}>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Button\n                            variant=\"outlined\"\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={handleCheckedRight}\n                            disabled={leftChecked.length === 0}\n                            aria-label=\"move selected right\"\n                        >\n                            &gt;\n                        </Button>\n                        <Button\n                            variant=\"outlined\"\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={handleCheckedLeft}\n                            disabled={rightChecked.length === 0}\n                            aria-label=\"move selected left\"\n                        >\n                            &lt;\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Zoom>\n            <Grid item>\n                {customList(rightList.sort(sortByLastnameFromAToZ), isTypeTeacher)}\n                <Typography className={classes.description} variant='subtitle2'>\n                    {`${rightDesc}: ${request.updating ? '...' : rightList.length}`}\n                </Typography>\n            </Grid>\n            <NavClassPanel\n                classId={classItem.id}\n                name={classItem.name}\n                tutor={classItem.mainTeacher}\n                possibleTutors={possibleTutors}\n                getModeStatus={getModeStatus}\n                subjects={subjects}\n                getSelectedSubject={setSelectedSubject}\n                getFilteredStudents={setFilteredStudents}\n                isChanging={isChanging}\n                confirmUpdate={confirmUpdate}\n                getIsTutor={isTutor => setIsTutor(isTutor)}\n            />\n        </Grid>\n    )\n};\n\nClassContent.propTypes = {\n    classItem: PropTypes.object.isRequired,\n    request: PropTypes.object.isRequired,\n    teachers: PropTypes.array.isRequired,\n    possibleTutors: PropTypes.array.isRequired,\n    freeStudents: PropTypes.array.isRequired,\n    availableSubjects: PropTypes.object.isRequired,\n    updateClass: PropTypes.func.isRequired,\n    studentMode: PropTypes.func.isRequired\n};\n\nexport default ClassContent\n","import {connect} from 'react-redux';\nimport {getTeachers} from \"../../../redux/actions/usersActions\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getSubjects, setIsStudentMode} from \"../../../redux/actions/valuesActions\";\nimport {getFreeStudents} from \"../../../redux/actions/studentActions\";\nimport {updateClassRequest} from \"../../../redux/thunks\";\nimport ClassContent from \"./ClassContent\";\n\nconst mapStateToProps = state => ({\n    teachers: getTeachers(state),\n    request: getRequest(state),\n    availableSubjects: getSubjects(state),\n    freeStudents: getFreeStudents(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateClass: classItem => dispatch(updateClassRequest(classItem)),\n    studentMode: isStudentMode => dispatch(setIsStudentMode(isStudentMode))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassContent);\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, Tabs, Tab, Paper, Typography} from \"@material-ui/core\";\nimport {Zoom} from \"@material-ui/core\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport componentStyle from \"./ClassesContentStyle\";\nimport {a11yProps, sortByNameFromAToZ} from \"../../../utilities/functions\";\nimport ClassContent from \"../ClassContent/ClassContentContainer\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ClassesContent = props => {\n    const {\n        allClasses,\n        classGrade,\n        allStudents,\n        possibleTutors,\n        request,\n        getStudentsById,\n        classesStudents,\n        setFreeStudents,\n        isStudentMode,\n        setIsStudentMode,\n        setSelectedClass,\n        selectedClass,\n        loadDataForClass,\n        teachers,\n        modalYesNot,\n        deleteClass,\n        setModalYesNot\n    } = props;\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [newValue, setNewValue] = useState(0);\n    const [isShow, setIsShow] = useState(false);\n    const [isPrepare, setIsPrepare] = useState(false);\n    const [filteredClass, setFilteredClass] = useState(allClasses);\n    const [classGradeIn, setClassGradeIn] = useState('none');\n    const [isDelete, setIsDelete] = useState(false);\n\n    useEffect(() => {\n\n        if (classGrade !== classGradeIn) {\n            setValue(0);\n            setFilteredClass(allClasses.filter(classItem => classItem.name.includes(classGrade)));\n            setClassGradeIn(classGrade);\n            setIsPrepare(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [classGrade]);\n\n    useEffect(() => {\n\n        if (classesStudents.length && isStudentMode) prepareFreeStudents();\n\n        if (classGrade !== 'none') {\n            setFilteredClass(allClasses.filter(classItem => classItem.name.includes(classGrade)));\n            setClassGradeIn(classGrade);\n        } else {\n            setFilteredClass(allClasses.sort(sortByNameFromAToZ));\n            setClassGradeIn(classGrade);\n        }\n\n        if (filteredClass.length && !isPrepare && teachers.length) prepareContentClass();\n        setIsShow(Object.entries(selectedClass).length > 0 && isPrepare);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allClasses, classGrade, filteredClass.length, teachers.length, selectedClass, classGradeIn]);\n\n    const prepareContentClass = () => {\n        setIsPrepare(true);\n        let classItem = filteredClass[value];\n        classItem.mainTeacher = teachers.find(teacher => (teacher.id === classItem.mainTeacher.id));\n        setSelectedClass(classItem);\n        loadDataForClass(classItem.id);\n    };\n\n    const prepareFreeStudents = () => {\n        setIsStudentMode(false);\n        let result = [];\n        allStudents.forEach(id => {\n\n            if (!classesStudents.includes(id)) result.push(id)\n        });\n        result.length ? getStudentsById(result) : setFreeStudents([]);\n    };\n\n    const handleChange = (event, newValue) => {\n        setIsShow(false);\n        setNewValue(newValue);\n    };\n\n    const changeClass = async () => {\n        await setIsPrepare(false);\n        await setValue(newValue);\n        await setSelectedClass({});\n        loadDataForClass(filteredClass[newValue].id);\n    };\n\n    const removeClass = async isConfirm => {\n\n        if (isConfirm) {\n            await setIsDelete(true);\n            await setIsShow(false);\n        }\n        setModalYesNot(false, modalYesNot.content);\n    };\n\n    const deleteGo = async () => {\n        setValue(0);\n        setNewValue(0);\n        await deleteClass(modalYesNot.content.data.id);\n        await setSelectedClass({});\n        setIsDelete(false);\n        setModalYesNot(false, {description: '', data: {}});\n    };\n\n    return (\n        <Paper\n            elevation={3}\n            className={clsx(classes.root, !filteredClass.length && classes.nothing)}>\n            {filteredClass.length ?\n                <>\n                    <AppBar position='static' className={classes.tabs}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            textColor=\"primary\"\n                            indicatorColor='secondary'\n                            variant='scrollable'\n                            scrollButtons='auto'\n                        >\n                            {filteredClass.map((item, i) => {\n                                return <Tab className={classes.tabs} key={item.id} disabled={request.geting}\n                                            label={item.name}  {...a11yProps(i)}/>\n                            })}\n                        </Tabs>\n                    </AppBar>\n                    <Paper className={classes.content}>\n                        {request.geting ? <Spinner style={{marginLeft: '92px', marginTop: '55px'}}/> :\n                            <Zoom\n                                in={isShow}\n                                timeout={500}\n                                onExited={isDelete ? deleteGo : changeClass}\n                            >\n                                <Paper elevation={4} style={{width: '100%'}}>\n                                    {((Object.entries(selectedClass).length > 0)) &&\n                                    <ClassContent\n                                        classItem={selectedClass}\n                                        possibleTutors={possibleTutors}\n                                    />}\n                                </Paper>\n                            </Zoom>\n                        }\n                    </Paper>\n                </> : <Typography variant='h6'>Nothing to show...</Typography>\n            }\n            <ModalAreYouSure\n                description={modalYesNot.content.description}\n                isOpen={modalYesNot.isOpen}\n                isConfirm={removeClass}/>\n        </Paper>\n    )\n};\n\nClassesContent.propTypes = {\n    allClasses: PropTypes.arrayOf(PropTypes.shape({\n        students: PropTypes.array.isRequired,\n        subjectTeachers: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        _id: PropTypes.string,\n        name: PropTypes.string.isRequired\n    })),\n    classGrade: PropTypes.string.isRequired,\n    classesStudents: PropTypes.array.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    possibleTutors: PropTypes.array.isRequired,\n    request: PropTypes.object.isRequired,\n    getStudentsById: PropTypes.func.isRequired,\n    setFreeStudents: PropTypes.func.isRequired,\n    isStudentMode: PropTypes.bool.isRequired,\n    setIsStudentMode: PropTypes.func.isRequired,\n    setSelectedClass: PropTypes.func.isRequired,\n    selectedClass: PropTypes.object.isRequired,\n    loadDataForClass: PropTypes.func.isRequired,\n    teachers: PropTypes.array.isRequired,\n    modalYesNot: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired,\n    deleteClass: PropTypes.func.isRequired\n};\n\nexport default ClassesContent;\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getAllClasses, getSelectedClass, setSelectedClass} from \"../../../redux/actions/classActions\";\nimport {getTeachers} from \"../../../redux/actions/usersActions\";\nimport {getIsStudentMode, setIsStudentMode, getModalYesNot, setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport {getAllStudents, getClassesStudents, setFreeStudents} from \"../../../redux/actions/studentActions\";\nimport {getStudentsByIdRequest, loadDataForClassByIdRequest, deleteClassByIdRequest} from \"../../../redux/thunks\";\nimport ClassesContent from './ClassesContent'\n\nconst mapStateToProps = state => ({\n    allClasses: getAllClasses(state),\n    allStudents: getAllStudents(state),\n    request: getRequest(state),\n    classesStudents: getClassesStudents(state),\n    isStudentMode: getIsStudentMode(state),\n    selectedClass: getSelectedClass(state),\n    teachers: getTeachers(state),\n    modalYesNot: getModalYesNot(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getStudentsById: studentsId => dispatch(getStudentsByIdRequest(studentsId)),\n    setFreeStudents: students => dispatch(setFreeStudents(students)),\n    setSelectedClass: classItem => dispatch(setSelectedClass(classItem)),\n    loadDataForClass: id => dispatch(loadDataForClassByIdRequest(id)),\n    setIsStudentMode: isStudentMode => dispatch(setIsStudentMode(isStudentMode)),\n    deleteClass: id => dispatch(deleteClassByIdRequest(id)),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassesContent);\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: style.contentHeight,\n        width: '100%',\n        padding: `0 ${style.baseSize}`\n    },\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper} from \"@material-ui/core\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport ClassesPanel from \"../ClassesPanel/ClassesPanelContainer\";\nimport ClassesContent from \"../ClassesContent/ClassesContentContainer\";\nimport Alert from \"../../common/Alert/Alert\";\nimport componentStyle from \"./ClassesHandlingStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\n\nconst ClassesHandling = props => {\n    const {\n        request,\n        loadAllClasses,\n        loadAllStudents,\n        loadStudentsIdFromClasses,\n        resetRequest,\n        alertSuccess,\n        setAlertSuccess,\n        clearAllClasses,\n        clearAllStudents,\n        clearFreeStudents,\n        clearClassesStudents,\n        clearSelectedClass,\n        clearTeachers,\n        allClasses,\n        setIsStudentMode,\n        setTutorIsUse\n    } = props;\n    const [classGrade, setClassGrade] = useState('none');\n    const [possibleTutors, setPossibleTutors] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        resetRequest();\n        loadAllClasses();\n        loadAllStudents();\n        loadStudentsIdFromClasses();\n\n        return () => {\n            clearAllClasses([]);\n            clearAllStudents([]);\n            clearFreeStudents([]);\n            clearClassesStudents([]);\n            clearSelectedClass({});\n            clearTeachers([]);\n            setIsStudentMode(true);\n            setTutorIsUse(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleError = () => {\n        resetRequest();\n        loadAllClasses();\n    };\n\n    const getClassGrade = classGrade => {\n        setClassGrade(classGrade);\n    };\n\n    const getPossibleTutors = possibleTutors => {\n        setPossibleTutors(possibleTutors);\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            {request.pending && <Spinner/>}\n            {(request.success && allClasses.length) ?\n            <>\n                <ClassesPanel getPossibleTutors={getPossibleTutors} getClassGrade={getClassGrade}/>\n                <ClassesContent possibleTutors={possibleTutors} classGrade={classGrade}/>\n            </> : <></>\n            }\n            {request.error &&\n            <Alert\n                isOpenAlert={request.error !== null}\n                variant='error'\n                handleCloseHandling={handleError}\n                message={request.error}\n            />\n            }\n            {alertSuccess.isOpen &&\n            <Alert\n                isOpenAlert={alertSuccess.isOpen}\n                variant='success'\n                handleCloseHandling={() => setAlertSuccess(false, '')}\n                message={alertSuccess.message}\n            />}\n        </Paper>\n    )\n};\n\nClassesHandling.propTypes = {\n    request: PropTypes.object.isRequired,\n    loadAllClasses: PropTypes.func.isRequired,\n    loadAllStudents: PropTypes.func.isRequired,\n    loadStudentsIdFromClasses: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    clearAllClasses: PropTypes.func.isRequired,\n    clearAllStudents: PropTypes.func.isRequired,\n    clearFreeStudents: PropTypes.func.isRequired,\n    clearClassesStudents: PropTypes.func.isRequired,\n    clearSelectedClass: PropTypes.func.isRequired,\n    clearTeachers: PropTypes.func.isRequired,\n    allClasses: PropTypes.array.isRequired,\n    setIsStudentMode: PropTypes.func.isRequired,\n    setTutorIsUse: PropTypes.func.isRequired\n};\n\nexport default ClassesHandling;\n","import {connect} from 'react-redux';\nimport ClassesHandling from \"./ClassesHandling\";\nimport {\n    loadAllClasses,\n    getAllClasses,\n    setSelectedClass\n} from \"../../../redux/actions/classActions\";\nimport {\n    loadAllStudents,\n    setFreeStudents,\n    setClassesStudents\n} from \"../../../redux/actions/studentActions\";\nimport {\n    loadAllClassesRequest,\n    getStudentsIdRequest,\n    loadStudentsIdFromClasses\n} from \"../../../redux/thunks\";\nimport {\n    getRequest,\n    resetRequest\n} from \"../../../redux/actions/requestActions\";\nimport {\n    setAlertSuccess,\n    getAlertSuccess,\n    setIsStudentMode,\n    setTutorIsUse\n} from \"../../../redux/actions/valuesActions\";\nimport {loadTeachers} from \"../../../redux/actions/usersActions\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    alertSuccess: getAlertSuccess(state),\n    allClasses: getAllClasses(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearAllClasses: data => dispatch(loadAllClasses(data)),\n    clearAllStudents: data => dispatch(loadAllStudents(data)),\n    clearFreeStudents: data => dispatch(setFreeStudents(data)),\n    clearClassesStudents: data => dispatch(setClassesStudents(data)),\n    clearSelectedClass: data => dispatch(setSelectedClass(data)),\n    clearTeachers: data => dispatch(loadTeachers(data)),\n    setIsStudentMode: isStudentMode => dispatch(setIsStudentMode(isStudentMode)),\n    setTutorIsUse: tutorIsUse => dispatch(setTutorIsUse(tutorIsUse)),\n    loadAllClasses: () => dispatch(loadAllClassesRequest()),\n    loadAllStudents: () => dispatch(getStudentsIdRequest()),\n    loadStudentsIdFromClasses: () => dispatch(loadStudentsIdFromClasses()),\n    resetRequest: () => dispatch(resetRequest()),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassesHandling)\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport ClassesHandling from \"../../features/ClassesHandling/ClassesHandlingContainer\";\n\nconst Classes = () => (\n    <div>\n        <PageTitle>Classes</PageTitle>\n        <ClassesHandling/>\n    </div>\n);\n\nexport default Classes;\n","const componentStyle = theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.light\n    },\n    names: {\n        paddingBottom: '14px'\n    },\n    button: {\n        marginTop: '50px',\n        backgroundColor: theme.palette.action.dark\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {TextField, Fab} from \"@material-ui/core\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport componentStyle from \"./StudentFormStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst StudentForm = props => {\n    const {request, addStudent, maxBirthDate, studentsAmount} = props;\n    const [newStudent, setNewStudent] = useState({\n        firstName: '',\n        lastName: '',\n        birthDate: '',\n        ratings: [],\n        parents: []\n    });\n    const [isAccept, setIsAccept] = useState(false);\n    const [amount, setAmount] = useState(studentsAmount);\n    const classes = useStyles();\n\n    useEffect(() => {\n        setIsAccept(newStudent.firstName.length > 0 &&\n            newStudent.lastName.length > 0 &&\n            newStudent.birthDate.length > 0 &&\n            (new Date(newStudent.birthDate) < new Date(maxBirthDate)));\n\n        if (amount !== studentsAmount) {\n            setAmount(studentsAmount);\n            setNewStudent({...newStudent,\n                firstName: '',\n                lastName: '',\n                birthDate: ''\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [newStudent.firstName, newStudent.lastName, newStudent.birthDate, maxBirthDate, studentsAmount]);\n\n    const handleTextField = event => {\n        setNewStudent({...newStudent, [event.target.name]: event.target.value})\n    };\n\n    const addStudentHandling = () => {\n        let student = newStudent;\n        student.birthDate = new Date(student.birthDate);\n        addStudent(student);\n    };\n\n    return (\n        <form className={classes.root}>\n            {request.adding ? <Spinner/> :\n                <>\n                    <TextField\n                        className={classes.names}\n                        label='first name'\n                        name='firstName'\n                        value={newStudent.firstName}\n                        onChange={handleTextField}\n                    />\n                    <TextField\n                        className={classes.names}\n                        label='last name'\n                        name='lastName'\n                        value={newStudent.lastName}\n                        onChange={handleTextField}\n                    />\n                    <TextField\n                        label='birth date'\n                        name='birthDate'\n                        value={newStudent.birthDate}\n                        type='date'\n                        format='dd/MM/yyyy'\n                        onChange={handleTextField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        error={new Date(newStudent.birthDate) >= new Date(maxBirthDate)}\n                    />\n                    <Fab\n                        color='primary'\n                        className={classes.button}\n                        aria-label='add'\n                        onClick={addStudentHandling}\n                        disabled={!isAccept}\n                    >\n                        <DoneIcon/>\n                    </Fab>\n                </>\n            }\n        </form>\n    )\n};\n\nStudentForm.propTypes = {\n    request: PropTypes.object.isRequired,\n    addStudent: PropTypes.func.isRequired,\n    maxBirthDate: PropTypes.string.isRequired,\n    studentsAmount: PropTypes.number.isRequired\n};\n\nexport default StudentForm;\n","import {connect} from 'react-redux';\nimport StudentForm from \"./StudentForm\";\nimport {addStudentRequest} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getMaxBirthDate} from \"../../../redux/actions/valuesActions\";\nimport {getStudentsAmount} from \"../../../redux/actions/studentActions\";\n\nconst mapStateToProps = state => ({\n   request: getRequest(state),\n   maxBirthDate: getMaxBirthDate(state),\n   studentsAmount: getStudentsAmount(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n   addStudent: student => dispatch(addStudentRequest(student))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentForm)\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        padding: `${style.smallSize} ${style.baseSize}`,\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: theme.palette.action.item,\n        }\n    },\n    item: {\n        backgroundColor: theme.palette.action.item\n    },\n    buttons: {\n        display: 'inline-flex',\n        justifyContent: 'space-around',\n        padding: `${style.smallSize} 0`\n    },\n    button: {\n        outline: 'none !important'\n    },\n    names: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    justifyCenter: {\n        justifyContent: 'center'\n    },\n    delete: {\n        color: theme.palette.action.light\n    },\n    edit: {\n        color: theme.palette.action.dark\n    },\n    close: {\n        color: theme.palette.action.warning\n    },\n    progress: {\n        cursor: 'progress'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {Redirect} from \"react-router\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport {Paper, Typography, Grid, Tooltip, IconButton, Fade, TextField} from \"@material-ui/core\";\nimport Parents from '@material-ui/icons/Wc';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport componentStyle from \"./StudentItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst StudentItem = props => {\n    const {\n        request,\n        setModalYesNot,\n        student,\n        updateStudent,\n        getStudentIdUpdated,\n        studentIdUpdated,\n        maxBirthDate,\n        setAvailable\n    } = props;\n    const [data, setData] = useState({\n        firstName: student.firstName,\n        lastName: student.lastName,\n        birthDate: student.birthDate\n    });\n    const [isEdit, setIsEdit] = useState(false);\n    const [isShowConfirm, setIsShowConfirm] = useState(false);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [isDateError, setIsDateError] = useState(false);\n    const [isRedirect, setIsRedirect] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (!isEdit && !request.adding) {\n            setData({\n                firstName: student.firstName,\n                lastName: student.lastName,\n                birthDate: student.birthDate\n            });\n            getStudentIdUpdated('');\n        }\n        setIsDateError(new Date(data.birthDate) >= new Date(maxBirthDate));\n        setIsShowConfirm(student.firstName !== data.firstName ||\n            student.lastName !== data.lastName ||\n            student.birthDate !== data.birthDate);\n        setIsUpdating(studentIdUpdated === student.id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data.firstName, data.lastName, data.birthDate, studentIdUpdated, request.adding]);\n\n    const handleEdit = () => {\n        setIsEdit(!isEdit);\n\n        if (isShowConfirm) {\n            setData({\n                firstName: student.firstName,\n                lastName: student.lastName,\n                birthDate: student.birthDate\n            })\n        }\n    };\n\n    const handleChange = event => {\n        setData({...data, [event.target.name]: event.target.value});\n    };\n\n    const handleRemove = () => {\n        setModalYesNot(true, {\n            description: `Do you want remove student ${data.lastName} ${data.firstName}?`,\n            data: {studentId: student.id}\n        })\n    };\n\n    const handleParents = async () => {\n        await setAvailable(student.parents);\n        setIsRedirect(true);\n    };\n\n    const handleUpdate = () => {\n        setIsShowConfirm(false);\n        setIsEdit(false);\n        let studentsAfterChange = {\n            id: student.id,\n            firstName: data.firstName,\n            lastName: data.lastName,\n            birthDate: data.birthDate,\n            className: student.className,\n            parents: student.parents\n        };\n        updateStudent(studentsAfterChange);\n        getStudentIdUpdated(student.id);\n    };\n\n    return (\n        <Paper className={clsx(classes.root, isEdit && classes.item)} variant='outlined'>\n            {isRedirect && <Redirect to='/parents/available'/>}\n            <Grid container>\n                <Grid item lg={6} className={classes.names}>\n                    {((isUpdating && data.firstName !== student.firstName) ||\n                        (isUpdating && data.lastName !== student.lastName)) ?\n                        <Spinner/>\n                        :\n                        <>\n                            <Typography hidden={isEdit} style={{fontWeight: '700'}}\n                                        display='inline'>{`${data.lastName} ${data.firstName}`}</Typography>\n                            <TextField\n                                name='lastName'\n                                value={data.lastName}\n                                hidden={!isEdit}\n                                label='Last name'\n                                size='small'\n                                onChange={handleChange}\n                                error={!data.lastName.length}\n                            />\n                            <TextField\n                                name='firstName'\n                                value={data.firstName}\n                                hidden={!isEdit}\n                                label='First name'\n                                size='small'\n                                onChange={handleChange}\n                                error={!data.firstName.length}\n                            />\n                        </>\n                    }\n                </Grid>\n                <Grid item lg={2} className={clsx(classes.names, classes.justifyCenter)}>\n                    {isUpdating && data.birthDate !== student.birthDate ? <Spinner/> :\n                        <>\n                            <Typography hidden={isEdit} display='inline'>{data.birthDate.substring(0, 10)}</Typography>\n                            <TextField\n                                name='birthDate'\n                                value={data.birthDate.substring(0, 10)}\n                                hidden={!isEdit}\n                                type='date'\n                                size='small'\n                                onChange={handleChange}\n                                error={isDateError}\n                            />\n                        </>\n                    }\n                </Grid>\n                <Grid item lg={2} className={clsx(classes.names, classes.justifyCenter)}>\n                    <Typography display='inline'>{student.className}</Typography>\n                </Grid>\n                <Grid item lg={2} className={classes.buttons}>\n                    <Tooltip\n                        title='Parents'\n                        placement='top'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span className={(request.updating || request.adding) && classes.progress}>\n                            <IconButton\n                                disabled={!student.parents.length || request.updating || request.adding}\n                                className={classes.button}\n                                onClick={handleParents}\n                            >\n                                <Parents fontSize='small'/>\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                    <Tooltip\n                        title={`${isEdit ? 'Close edit mode' : 'Open edit mode'}`}\n                        placement='top'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span className={(request.updating || request.adding) && classes.progress}>\n                            <IconButton\n                                className={clsx(classes.button, isEdit ? classes.close : classes.edit)}\n                                disabled={request.updating || request.adding}\n                                onClick={handleEdit}\n                            >\n                                {isEdit ? <CloseIcon fontSize='small'/> : <EditIcon fontSize='small'/>}\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                    <Tooltip\n                        title={isShowConfirm ? 'Confirm updating' : 'Remove student'}\n                        placement='top'\n                        arrow\n                        TransitionComponent={Fade}\n                        enterDelay={1000}\n                    >\n                        <span className={(request.updating || request.adding) && classes.progress}>\n                            <IconButton\n                                className={clsx(classes.button, isShowConfirm ? classes.edit : classes.delete)}\n                                disabled={request.updating || request.adding || isDateError ||\n                                !data.firstName.length || !data.lastName.length}\n                                onClick={(isEdit && isShowConfirm) ? handleUpdate : handleRemove}\n                            >\n                                {isShowConfirm ? <DoneIcon fontSize='small'/> : <DeleteIcon fontSize='small'/>}\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nStudentItem.propTypes = {\n    student: PropTypes.object.isRequired,\n    request: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired,\n    updateStudent: PropTypes.func.isRequired,\n    studentIdUpdated: PropTypes.string,\n    getStudentIdUpdated: PropTypes.func.isRequired,\n    maxBirthDate: PropTypes.string.isRequired,\n    setAvailable: PropTypes.func.isRequired\n};\n\nexport default StudentItem;\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport {updateStudentBasicDataRequest} from \"../../../redux/thunks\";\nimport {getMaxBirthDate, setAvailable} from \"../../../redux/actions/valuesActions\";\nimport StudentItem from \"./StudentItem\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    maxBirthDate: getMaxBirthDate(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content)),\n    updateStudent: student => dispatch(updateStudentBasicDataRequest(student)),\n    setAvailable: parents => dispatch(setAvailable(parents))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentItem);\n","const componentStyle = theme => ({\n    header: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.dark\n    },\n    item: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    title: {\n        color: theme.palette.primary.light\n    },\n    table: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '369px',\n        marginBottom: theme.spacing(1),\n        overflow: 'auto',\n        backgroundColor: theme.palette.secondary.dark\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '52px'\n    },\n    spinner: {\n        justifyContent: 'center'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n    TextField,\n    TableContainer,\n    Grid,\n    Paper,\n    Table,\n    TableRow,\n    TableFooter,\n    Typography,\n    TablePagination as MaterialPagination\n} from '@material-ui/core';\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport TablePagination from \"../../common/TablePagination/TablePagination\";\nimport StudentItem from \"../StudentItem/StudentItemContainer\";\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport componentStyle from './StudentsTableStyle'\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst StudentsTable = props => {\n    const {\n        selectedStudents,\n        allStudents,\n        loadStudentsNames,\n        loadStudentsWithRange,\n        request,\n        modalYesNot,\n        setModalYesNot,\n        deleteStudent,\n        getStudent\n    } = props;\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [studentIdUpdated, setStudentIdUpdated] = useState('');\n    const [selectedStudent, setSelectedStudent] = useState(null);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (!allStudents.length) loadStudentsNames();\n        if (selectedStudent === null) loadStudentsWithRange(page + 1, rowsPerPage);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page, rowsPerPage, selectedStudent]);\n\n    const handleDeleteStudent = isConfirm => {\n        const {studentId} = modalYesNot.content.data;\n\n        if (isConfirm) deleteStudent(studentId);\n        setModalYesNot(false, {\n            description: '',\n            data: {}\n        });\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const getStudentIdUpdated = studentId => {\n        setStudentIdUpdated(studentId);\n    };\n\n    const handleSearch = value => {\n        setSelectedStudent(value);\n\n        if (value !== null) getStudent(value.id)\n    };\n\n    return (\n        <Grid container justify='center' alignItems='center' style={{height: '470px'}}>\n            {request.working ? <Spinner/> :\n                <>\n                    <Paper className={classes.header}>\n                        <Grid container style={{padding: '8px 14px'}}>\n                            <Grid item lg={6}>\n                                <Typography className={classes.title} variant='subtitle2' display='inline'>\n                                    student's name\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={2} className={classes.item}>\n                                <Typography className={classes.title} variant='subtitle2' display='inline'>\n                                    birth date\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={2} className={classes.item}>\n                                <Typography className={classes.title} variant='subtitle2' display='inline'>\n                                    class\n                                </Typography>\n                            </Grid>\n                            <Grid item lg={2} className={classes.item}>\n                                <Typography className={classes.title} variant='subtitle2' display='inline'>\n                                    operations\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Paper className={clsx(classes.table, request.geting ? classes.spinner : '')}>\n                        {request.geting ? <Spinner/> :\n                            <>\n                                {selectedStudents.map(student => (\n                                     <StudentItem\n                                         key={student.id}\n                                         student={student}\n                                         studentIdUpdated={studentIdUpdated}\n                                         getStudentIdUpdated={getStudentIdUpdated}\n                                     />\n                                ))}\n\n                            </>\n                        }\n                        <ModalAreYouSure\n                            description={modalYesNot.content.description}\n                            isOpen={modalYesNot.isOpen}\n                            isConfirm={handleDeleteStudent}/>\n                    </Paper>\n                    <TableContainer className={classes.footer} component={Paper}>\n                        <Autocomplete\n                            id='search-student'\n                            options={allStudents}\n                            getOptionLabel={student => student.name}\n                            style={{width: 300, paddingLeft: '15px'}}\n                            size='small'\n                            onChange={(e, value) => handleSearch(value)}\n                            renderInput={params => <TextField {...params} label=\"Search student\"/>}\n                        />\n                        <Table>\n                            <TableFooter>\n                                <TableRow>\n                                    <MaterialPagination\n                                        hidden={selectedStudent !== null}\n                                        rowsPerPageOptions={[5, 10, 25]}\n                                        colSpan={3}\n                                        count={allStudents.length}\n                                        rowsPerPage={rowsPerPage}\n                                        page={page}\n                                        SelectProps={{\n                                            inputProps: {'aria-label': 'rows per page'},\n                                            native: true,\n                                        }}\n                                        onChangePage={handleChangePage}\n                                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                                        ActionsComponent={TablePagination}\n                                    />\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </TableContainer>\n                </>\n            }\n        </Grid>\n    )\n};\n\nStudentsTable.propTypes = {\n    selectedStudents: PropTypes.arrayOf(PropTypes.shape({\n        parents: PropTypes.array.isRequired,\n        id: PropTypes.string.isRequired,\n        className: PropTypes.string,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        birthDate: PropTypes.string.isRequired\n    })),\n    loadStudentsWithRange: PropTypes.func.isRequired,\n    loadStudentsNames: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired,\n    allStudents: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n    })),\n    modalYesNot: PropTypes.object.isRequired,\n    setModalYesNot: PropTypes.func.isRequired,\n    deleteStudent: PropTypes.func.isRequired,\n    getStudent: PropTypes.func.isRequired\n};\n\nexport default StudentsTable;\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {\n    getStudentsWithRangeRequest,\n    getStudentsNamesRequest,\n    deleteStudentRequest,\n    getStudentByIdRequest\n} from \"../../../redux/thunks\";\nimport {getAllStudents, getFreeStudents} from \"../../../redux/actions/studentActions\";\nimport {getModalYesNot, setModalYesNot} from \"../../../redux/actions/valuesActions\";\nimport StudentsTable from \"./StudentsTable\";\n\nconst mapStateToProps = state => ({\n    selectedStudents: getAllStudents(state),\n    allStudents: getFreeStudents(state),\n    request: getRequest(state),\n    modalYesNot: getModalYesNot(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadStudentsWithRange: (page, itemsPerPage) => dispatch(getStudentsWithRangeRequest(page, itemsPerPage)),\n    loadStudentsNames: () => dispatch(getStudentsNamesRequest()),\n    setModalYesNot: (isOpen, content) => dispatch(setModalYesNot(isOpen, content)),\n    deleteStudent: studentId => dispatch(deleteStudentRequest(studentId)),\n    getStudent: id => dispatch(getStudentByIdRequest(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentsTable);\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: style.contentHeight,\n        width: '100%',\n        padding: `0 ${style.baseSize}`\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    },\n    content: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: '100%',\n        height: '480px',\n        padding: '5px',\n        marginTop: theme.spacing(2)\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport {Paper, AppBar, Tabs, Tab} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from 'prop-types';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ListIcon from '@material-ui/icons/List';\nimport StudentForm from \"../StudentForm/StudentFormContainer\";\nimport StudentsTable from \"../StudentsTable/StudentsTableContainer\";\nimport Alert from \"../../common/Alert/Alert\";\nimport {a11yProps} from \"../../../utilities/functions\";\nimport componentStyle from \"./StudentsHandlingStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle((theme)));\n\nconst StudentsHandling = props => {\n    const {\n        request,\n        resetRequest,\n        alertSuccess,\n        setAlertSuccess,\n        allStudents,\n        freeStudents,\n        clearAllStudents,\n        clearFreeStudents\n    } = props;\n    const [value, setValue] = useState(0);\n    const [isReady, setIsReady] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (!allStudents.length && !freeStudents.length && !isReady) {\n            setIsReady(true);\n        }\n    }, [allStudents, freeStudents, isReady]);\n\n    useEffect(() => {\n        return () => {\n            clearAllStudents([]);\n            clearFreeStudents([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleAlert = () => {\n        alertSuccess.isOpen ? setAlertSuccess(false, '') : resetRequest();\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <>\n                <AppBar position='static' className={classes.tabs}>\n                    <Tabs value={value} onChange={handleChange} textColor='primary' variant='fullWidth'>\n                        <Tab className={classes.tabs} label='students list' icon={<ListIcon/>} {...a11yProps(0)}/>\n                        <Tab className={classes.tabs} label='add student'\n                             icon={<PersonAddIcon/>} {...a11yProps(1)}/>\n                    </Tabs>\n                </AppBar>\n                <Paper className={classes.content} elevation={9}>\n                    {value === 0 && isReady && <StudentsTable/>}\n                    {value === 1 && <StudentForm/>}\n                </Paper>\n            </>\n            <Alert\n                isOpenAlert={alertSuccess.isOpen || request.error !== null}\n                variant={alertSuccess.isOpen ? 'success' : 'error'}\n                message={alertSuccess.isOpen ? alertSuccess.message : request.error}\n                handleCloseHandling={handleAlert}\n            />\n        </Paper>\n    )\n};\n\nStudentsHandling.propTypes = {\n    resetRequest: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    freeStudents: PropTypes.array.isRequired,\n    clearAllStudents: PropTypes.func.isRequired,\n    clearFreeStudents: PropTypes.func.isRequired\n};\n\nexport default StudentsHandling;\n","import {connect} from 'react-redux';\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getAlertSuccess, setAlertSuccess} from \"../../../redux/actions/valuesActions\";\nimport {\n    getAllStudents,\n    getFreeStudents,\n    setFreeStudents,\n    loadAllStudents\n} from \"../../../redux/actions/studentActions\";\nimport StudentsHandling from \"./StudentsHandling\";\n\nconst mapDispatchToProps = dispatch => ({\n    resetRequest: () => dispatch(resetRequest()),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message)),\n    clearAllStudents: students => dispatch(loadAllStudents(students)),\n    clearFreeStudents: students => dispatch(setFreeStudents(students))\n});\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    alertSuccess: getAlertSuccess(state),\n    allStudents: getAllStudents(state),\n    freeStudents: getFreeStudents(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentsHandling)\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport StudentsHandling from \"../../features/StudentsHandling/StudentsHandlingContainer\";\n\nconst Students = () => (\n    <div>\n        <PageTitle>Students</PageTitle>\n        <StudentsHandling/>\n    </div>\n);\n\nexport default Students;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: `${style.smallSize} 0`\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    addButton: {\n        color: theme.palette.action.dark\n    },\n    removeButton: {\n        color: theme.palette.action.light\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    progress: {\n        cursor: 'progress'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {Paper, TextField} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport Fade from '@material-ui/core/Fade';\nimport componentStyle from \"./SelectItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst SelectItem = props => {\n    const {list, selectName, buttonName, confirmSelect, isDisabled, isAdd, parentId} = props;\n    const [selectedItem, setSelectedItem] = useState(null);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (isDisabled) {\n            setSelectedItem(null)\n        }\n    }, [isDisabled]);\n\n    const changeHandling = value => {\n        setSelectedItem(value)\n    };\n\n    const buttonHandling = () => {\n        confirmSelect(selectedItem)\n    };\n\n    return (\n        <Paper variant='outlined' className={clsx(classes.root, isDisabled && classes.progress)}>\n            <Autocomplete\n                disabled={isDisabled}\n                id={parentId}\n                value={selectedItem}\n                renderInput={params => <TextField {...params} label={selectName}/>}\n                getOptionLabel={student => `${student.lastName} ${student.firstName}`}\n                options={list}\n                style={{width: 240, paddingLeft: '15px'}}\n                size='small'\n                onChange={(e, value) => changeHandling(value)}\n            />\n            <Tooltip\n                title={buttonName}\n                arrow\n                classes={{tooltip: classes.tooltip}}\n                placement='top'\n                TransitionComponent={Fade}\n                TransitionProps={{timeout: 1000}}\n            >\n                <span className={isDisabled ? classes.progress : ''}>\n                     <IconButton\n                         className={isAdd ? classes.addButton : classes.removeButton}\n                         disabled={isDisabled || selectedItem === null}\n                         aria-label={buttonName}\n                         onClick={buttonHandling}>\n                    {isAdd ? <AddIcon/> : <RemoveIcon/>}\n                    </IconButton>\n                </span>\n            </Tooltip>\n        </Paper>\n    )\n};\n\nSelectItem.propTypes = {\n    list: PropTypes.array.isRequired,\n    selectName: PropTypes.string.isRequired,\n    buttonName: PropTypes.string.isRequired,\n    confirmSelect: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n    isAdd: PropTypes.bool.isRequired,\n    parentId: PropTypes.string.isRequired\n};\n\nexport default SelectItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    button: {\n        color: theme.palette.action.light,\n        backgroundColor: theme.palette.primary.light,\n    },\n    info: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: '300px',\n        height: '60px',\n        padding: theme.spacing(1),\n        overflow: 'auto'\n    },\n    second: {\n        fontSize: style.baseSize,\n        color: theme.palette.primary.light\n    },\n    tooltip: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    spinner: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    progress: {\n        cursor: 'progress'\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from \"clsx\";\nimport SelectItem from \"../../common/SelectItem/SelectItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport {Paper, Typography} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport ModalAreYouSure from \"../../common/ModalAreYouSure/ModalAreYouSure\";\nimport componentStyle from \"./ParentItemCollapseStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentItemCollapse = props => {\n    const {parent, allStudents, updateUser, updateStudent, request, deleteParent, page} = props;\n\n    const [studentsWithoutParent, setStudentsWithoutParent] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [parentStudentsId, setParentStudentsId] = useState(parent.students.map(student => student.id));\n    const classes = useStyles();\n\n    useEffect(() => {\n        setParentStudentsId(parent.students.map(student => student.id));\n    }, [parent.students]);\n\n    useEffect(() => {\n        let freeStudents = allStudents.filter(student => !parentStudentsId.includes(student.id));\n        setStudentsWithoutParent(freeStudents);\n\n    }, [allStudents, parent.students, parentStudentsId]);\n\n    const getNewStudentForParent = async student => {\n        let data = {\n            studentName: `${student.lastName} ${student.firstName}`,\n            parentName: `${parent.lastName} ${parent.firstName}`,\n            isAdd: true\n        };\n        let students = [...parent.students, student];\n        await updateUser(parent.id, students, data);\n        updateStudent(student.id, parent, true);\n    };\n\n    const removeStudentFromParent = async student => {\n        let data = {\n            studentName: `${student.lastName} ${student.firstName}`,\n            parentName: `${parent.lastName} ${parent.firstName}`,\n            isAdd: false\n        };\n        let students = parent.students.filter(item => item.id !== student.id);\n        await updateUser(parent.id, students, data);\n        updateStudent(student.id, parent, false);\n    };\n\n    const modalHandling = isDelete => {\n        setIsModalOpen(false);\n\n        if (isDelete) {\n            if (parent.students.length) {\n                parent.students.forEach(student => {\n                    updateStudent(student.id, parent, false);\n                })\n            }\n            deleteParent(parent.id, page);\n        }\n    };\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Tooltip\n                    disabled={request.adding}\n                    title='Remove parent'\n                    arrow\n                    classes={{tooltip: classes.tooltip}}\n                    placement='top-start'\n                    TransitionComponent={Fade}\n                    TransitionProps={{timeout: 1000}}\n                >\n                <span className={request.adding ? classes.progress : ''}>\n                    <IconButton\n                        disabled={request.adding}\n                        aria-label='remove'\n                        className={classes.button}\n                        onClick={() => setIsModalOpen(true)}\n                    >\n                    <DeleteIcon fontSize='small'/>\n\n                </IconButton>\n                </span>\n                </Tooltip>\n                <SelectItem\n                    parentId={`${parent.id} add`}\n                    list={studentsWithoutParent}\n                    isAdd={true}\n                    selectName='unassigned students'\n                    buttonName=\"Assign\"\n                    isDisabled={request.adding}\n                    confirmSelect={getNewStudentForParent}\n                />\n                <SelectItem\n                    parentId={parent.id}\n                    list={parent.students}\n                    isAdd={false}\n                    selectName='assigned students'\n                    buttonName='Unassign'\n                    confirmSelect={removeStudentFromParent}\n                    isDisabled={request.adding}/>\n                <Paper variant='outlined' className={clsx(classes.info, request.adding && classes.spinner)}>\n                    {request.adding ? <Spinner/> :\n                        parent.students.length ? parent.students.map((student, i) => {\n                            return (\n                                <div key={i}>\n                                    <Typography className={classes.second} display='inline'>\n                                        {`${i + 1}. `}\n                                    </Typography>\n                                    <Typography variant='subtitle2' display='inline'>\n                                        {`${student.firstName} ${student.lastName}`}\n                                    </Typography>\n                                    <Typography className={classes.second} display='inline'>\n                                        {` ${student.birthDate.substring(0, 10)}, ${student.className}`}\n                                    </Typography>\n                                </div>\n                            )\n                        }) : <Typography variant='subtitle2'>The parent has no student assigned</Typography>}\n                </Paper>\n            </div>\n            <ModalAreYouSure\n                isOpen={isModalOpen}\n                isConfirm={modalHandling}\n                description={`Are you sure you want to delete the parent ${parent.lastName} ${parent.firstName}?`}\n            />\n        </>\n    )\n\n\n};\n\nParentItemCollapse.propTypes = {\n    parent: PropTypes.object.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    updateUser: PropTypes.func.isRequired,\n    updateStudent: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired,\n    deleteParent: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired\n};\n\nexport default ParentItemCollapse;\n","import {connect} from 'react-redux';\nimport ParentItemCollapse from \"./ParentItemCollapse\";\nimport {getAllStudents} from \"../../../redux/actions/studentActions\";\nimport {updateUserRequest, updateStudentRequest, deleteParentRequest} from \"../../../redux/thunks\";\nimport {getRequest} from \"../../../redux/actions/requestActions\";\n\nconst mapStateToProps = state => ({\n    allStudents: getAllStudents(state),\n    request: getRequest(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateUser: (id, studentsList, data) => dispatch(updateUserRequest(id, studentsList, data)),\n    updateStudent: (id, parent, isAdd) => dispatch(updateStudentRequest(id, parent, isAdd)),\n    deleteParent: (id, page) => dispatch(deleteParentRequest(id, page))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentItemCollapse);\n","const componentStyle = theme => ({\n    root: {\n        width: '100%',\n        margin: `${theme.spacing(.2)}px 0`\n    },\n    item: {\n        backgroundColor: theme.palette.secondary.dark\n    },\n    select: {\n        width: '100%',\n        margin: `${theme.spacing(1)}px 0`\n    },\n    selected: {\n        fontWeight: '800'\n    }\n});\n\nexport default componentStyle;\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Link} from \"@material-ui/core\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ParentItemCollapse from '../ParentItemCollapse/ParentItemCollapseContainer';\nimport componentStyle from \"./ParentItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentItem = props => {\n    const {parent, i, selectedItem, collapseHandling, page} = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n    }, [selectedItem]);\n\n    const collapseSetting = () => {\n        collapseHandling(i);\n    };\n\n    return (\n        <div className={selectedItem === i ? classes.select : classes.root}>\n            <ExpansionPanel className={classes.item} expanded={selectedItem === i} onChange={collapseSetting}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                    <Grid container>\n                        <Grid item lg={1}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='left'\n                                variant='subtitle1'\n                                color='primary'>\n                                {i + 1}\n                            </Typography>\n                        </Grid>\n                        {selectedItem === i ?\n                            (<Grid item lg={4}>\n                                <Typography\n                                    className={classes.selected}\n                                    align='center'\n                                    variant='subtitle1'\n                                    color='primary'>\n                                    {`${parent.lastName} ${parent.firstName}`}\n                                </Typography>\n                            </Grid>) :\n                            (<>\n                                    <Grid item lg={2}>\n                                        <Typography\n                                            align='left'\n                                            variant='subtitle1'\n                                            color='primary'>\n                                            {parent.lastName.length > 12 ? `${parent.lastName.substring(0, 13)}...` :\n                                                parent.lastName}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item lg={2}>\n                                        <Typography\n                                            align='left'\n                                            variant='subtitle1'\n                                            color='primary'>\n                                            {parent.firstName.length > 12 ? `${parent.firstName.substring(0, 13)}...` :\n                                                parent.firstName}\n                                        </Typography>\n                                    </Grid>\n                                </>\n                            )}\n                        <Grid item lg={2}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                {parent.telephone}\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={3}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                <Link href={`mailto:${parent.email}`}>{parent.email}</Link>\n                            </Typography>\n                        </Grid>\n                        <Grid item lg={1}>\n                            <Typography\n                                className={selectedItem === i ? classes.selected : ''}\n                                align='center'\n                                variant='subtitle1'\n                                color='primary'>\n                                {parent.students.length}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <ParentItemCollapse page={page} parent={parent}/>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    )\n};\n\nParentItem.propTypes = {\n    parent: PropTypes.object.isRequired,\n    i: PropTypes.number.isRequired,\n    selectedItem: PropTypes.number,\n    collapseHandling: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired\n};\n\nexport default ParentItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    info: {\n        padding: `${style.smallSize} 0 0 22px`,\n    },\n    content: {\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        padding: `0 ${style.baseSize}`,\n        height: '515px'\n    },\n    footer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: '52px',\n        marginBottom: style.smallSize\n    },\n    spinner: {\n        justifyContent: 'center !important'\n    },\n    noFull: {\n        justifyContent: 'flex-start !important'\n    }\n});\n\nexport default componentStyle;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {useLocation} from \"react-router\";\nimport {\n    Paper,\n    Grid,\n    Typography,\n    TableContainer,\n    Table,\n    TableFooter,\n    TableRow,\n    TablePagination as MaterialPagination,\n    TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport clsx from \"clsx\";\nimport Spinner from '../../common/Spinner/Spinner';\nimport ParentItem from '../ParentItem/ParentItem';\nimport Alert from \"../../common/Alert/Alert\";\nimport componentStyle from \"./ParentsHandlingStyle\";\nimport TablePagination from \"../../common/TablePagination/TablePagination\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst ParentsHandling = props => {\n    const {\n        loadParents,\n        loadParent,\n        loadStudents,\n        loadParentName,\n        request,\n        parents,\n        parentsName,\n        resetRequest,\n        allStudents,\n        clearParents,\n        clearStudents,\n        clearParentsName,\n        alertSuccess,\n        setAlertSuccess,\n        available,\n        clearAvailable\n    } = props;\n    const [selectedItem, setSelectedItem] = useState(0);\n    const [selectedParent, setSelectedParent] = useState(null);\n    const [page, setPage] = useState(0);\n    const [isReady, setReady] = useState(false);\n    const [isSearch, setIsSearch] = useState(false);\n    const [isLocation, setIsLocation] = useState(false);\n    const classes = useStyles();\n    let location = useLocation().pathname;\n\n    useEffect(() => {\n\n        if (location === '/parents/available' && available.length && !isLocation) {\n            setIsLocation(true);\n            loadStudents();\n            available.forEach((item, i) => {\n\n                if (i < 7) loadParent(item, true);\n            });\n        }\n\n        if (!parentsName.length && !allStudents.length && !available.length) {\n            loadStudents();\n            loadParentName('parent');\n        }\n\n        if (allStudents.length && !isReady && !available.length) {\n            setReady(true);\n            loadParents(page + 1, 7);\n        }\n\n        if (request.pending) setSelectedItem(0);\n\n        if (selectedParent === null && isSearch && !available.length) {\n            loadParents(page + 1, 7);\n            setIsSearch(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allStudents.length, parents.length, page, request.pending, selectedParent, available.length]);\n\n    useEffect(() => {\n        return () => {\n            resetRequest();\n            clearParents([]);\n            clearStudents([]);\n            clearParentsName([]);\n            clearAvailable([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const collapseHandling = index => {\n        setSelectedItem(index);\n    };\n\n    const handleCloseAlert = () => {\n        request.error ? resetRequest() : setAlertSuccess(false, '')\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setReady(false);\n        setPage(newPage);\n    };\n\n    const handleSearch = value => {\n        setSelectedParent(value);\n\n        if (value !== null) {\n            loadParent(value.id, false);\n            setIsSearch(true);\n            setPage(0);\n        }\n    };\n\n    return (\n        <Paper variant='outlined' className={classes.root}>\n            <Grid container className={classes.info}>\n                <Grid item lg={1}>\n                    <Typography variant='subtitle2' color='primary'>Pos</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography variant='subtitle2' color='primary'>Last name</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography variant='subtitle2' color='primary'>First name</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography style={{paddingLeft: '26px'}} variant='subtitle2' color='primary'>Phone</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography align='center' variant='subtitle2' color='primary'>Email</Typography>\n                </Grid>\n                <Grid item lg={3}>\n                    <Typography style={{paddingLeft: '34px'}} variant='subtitle2' color='primary'>Students</Typography>\n                </Grid>\n            </Grid>\n            <Grid container className={clsx(classes.content,\n                !request.working && !request.pending && parents.length < 7 ? classes.noFull : '',\n                (request.pending || request.working) ? classes.spinner : '')}>\n                {request.pending || request.working ? <Spinner/> :\n                    parents.map((parent, i) => {\n                        return <ParentItem\n                            i={i}\n                            key={i}\n                            parent={parent}\n                            page={page}\n                            selectedItem={selectedItem}\n                            collapseHandling={collapseHandling}\n                        />\n                    })}\n            </Grid>\n            <TableContainer className={classes.footer} component={Paper}>\n                <Autocomplete\n                    hidden={request.working || isLocation}\n                    id='search-parent'\n                    renderInput={params => <TextField {...params} label='Search parent'/>}\n                    options={parentsName}\n                    getOptionLabel={parent => parent.name}\n                    size='small'\n                    style={{width: 300, paddingLeft: '15px'}}\n                    onChange={(e, value) => handleSearch(value)}\n                />\n                <Table>\n                    <TableFooter>\n                        <TableRow>\n                            <MaterialPagination\n                                hidden={request.working || selectedParent !== null || isLocation}\n                                rowsPerPageOptions={[7]}\n                                colSpan={3}\n                                count={parentsName.length}\n                                rowsPerPage={7}\n                                page={page}\n                                SelectProps={{\n                                    inputProps: {'aria-label': 'rows per page'},\n                                    native: true,\n                                }}\n                                onChangePage={handleChangePage}\n                                ActionsComponent={TablePagination}\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n            <Alert\n                isOpenAlert={request.error !== null || alertSuccess.isOpen}\n                variant={request.error ? 'error' : 'success'}\n                message={request.error ? request.error : alertSuccess.message}\n                handleCloseHandling={handleCloseAlert}\n            />\n        </Paper>\n    )\n};\n\nParentsHandling.propTypes = {\n    loadParents: PropTypes.func.isRequired,\n    loadParent: PropTypes.func.isRequired,\n    loadStudents: PropTypes.func.isRequired,\n    loadParentName: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    parents: PropTypes.array.isRequired,\n    parentsName: PropTypes.array.isRequired,\n    request: PropTypes.object.isRequired,\n    allStudents: PropTypes.array.isRequired,\n    clearParents: PropTypes.func.isRequired,\n    clearStudents: PropTypes.func.isRequired,\n    clearParentsName: PropTypes.func.isRequired,\n    alertSuccess: PropTypes.object.isRequired,\n    setAlertSuccess: PropTypes.func.isRequired,\n    available: PropTypes.array.isRequired,\n    clearAvailable: PropTypes.func.isRequired\n};\n\nexport default ParentsHandling;\n","import {connect} from 'react-redux';\nimport ParentsHandling from './ParentsHandling';\nimport {\n    loadParentsRequestWithRange,\n    loadParentByIdRequest,\n    getAllStudentsRequest,\n    getUsersNameRequest\n} from \"../../../redux/thunks\";\nimport {getRequest, resetRequest} from \"../../../redux/actions/requestActions\";\nimport {getAllStudents, loadAllStudents} from \"../../../redux/actions/studentActions\";\nimport {getParents, loadParents, getUsersName, loadUsersName} from \"../../../redux/actions/usersActions\";\nimport {getAlertSuccess, setAlertSuccess, getAvailable, setAvailable} from \"../../../redux/actions/valuesActions\";\n\nconst mapDispatchToProps = dispatch => ({\n    loadParents: (page, itemsPerPage) => dispatch(loadParentsRequestWithRange(page, itemsPerPage)),\n    loadParent: (id, isAdd) => dispatch(loadParentByIdRequest(id, isAdd)),\n    loadStudents: () => dispatch(getAllStudentsRequest()),\n    loadParentName: status => dispatch(getUsersNameRequest(status)),\n    resetRequest: () => dispatch(resetRequest()),\n    clearParents: data => dispatch(loadParents(data)),\n    clearStudents: data => dispatch(loadAllStudents(data)),\n    clearParentsName: data => dispatch(loadUsersName(data)),\n    setAlertSuccess: (isOpen, message) => dispatch(setAlertSuccess(isOpen, message)),\n    clearAvailable: data => dispatch(setAvailable(data))\n});\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    parents: getParents(state),\n    allStudents: getAllStudents(state),\n    alertSuccess: getAlertSuccess(state),\n    parentsName: getUsersName(state),\n    available: getAvailable(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParentsHandling);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport ParentsHandling from '../../features/ParentsHandling/ParentsHandlingContainer';\n\nconst Parents = () => (\n    <div>\n        <PageTitle>Parents</PageTitle>\n        <ParentsHandling/>\n    </div>\n);\n\nexport default Parents;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: style.baseSize,\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    info: {\n        fontWeight: 800\n    },\n});\n\nexport default componentStyle;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Typography, Grid, Link} from \"@material-ui/core\";\nimport componentStyle from \"./TeacherInfoItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst TeacherInfoItem = props => {\n    const {teacher} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={9} className={classes.root}>\n            <Grid container alignItems='center' justify='center'>\n                <Grid item lg={4}>\n                    <Typography className={classes.info} align='left'>{teacher.name}</Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <Typography align='center'>{teacher.subject}</Typography>\n                </Grid>\n                <Grid item lg={3}>\n                    <Typography align='center'>{teacher.phone}</Typography>\n                </Grid>\n                <Grid item lg={3}>\n                    <Link href={`mailto:${teacher.email}`}>{teacher.email}</Link>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n};\n\nTeacherInfoItem.propTypes = {\n    teacher: PropTypes.object.isRequired\n};\n\nexport default TeacherInfoItem\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        backgroundColor: 'inherit',\n        padding: style.smallSize\n    },\n    description: {\n        color: theme.palette.primary.light,\n        fontSize: style.baseSize,\n        marginRight: style.smallSize\n    },\n    info: {\n        fontWeight: 800\n    },\n    tutor: {\n        width: '80%',\n        display: 'inline-flex',\n        justifyContent: 'space-between'\n    },\n    teachers: {\n        width: '100%',\n        height: '376px',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: style.baseSize,\n        overflow: 'auto'\n    }\n});\n\nexport default componentStyle;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Paper, Typography, Grid, Link} from \"@material-ui/core\";\nimport TeacherInfoItem from \"../TeacherInfoItem/TeacherInfoItem\";\nimport componentStyle from \"./StudentTeachersItemStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst StudentTeachersItem = props => {\n    const {classItem} = props;\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <Typography className={classes.description}>Class info:</Typography>\n            <Grid container justify='center' alignItems='center' style={{padding: '14px 0'}}>\n                <Grid item lg={2}>\n                    <Typography className={classes.info} align='center'>\n                        {classItem.name}\n                    </Typography>\n                </Grid>\n                <Grid item lg={2}>\n                    <span className={classes.description}>students:</span>\n                    <Typography className={classes.info} display='inline'>\n                        {classItem.studentsAmount}\n                    </Typography>\n                </Grid>\n                <Grid item lg={8}>\n                    <span className={classes.description}>class teacher:</span>\n                    <div className={classes.tutor}>\n                        <Typography className={classes.info} display='inline'>{classItem.tutor.name}</Typography>\n                        <Typography display='inline'>{classItem.tutor.phone}</Typography>\n                        <Link className={classes.info} href={`mailto:${classItem.tutor.email}`}>{classItem.tutor.email}</Link>\n                    </div>\n                </Grid>\n            </Grid>\n            <Typography className={classes.description}>Teachers:</Typography>\n            <Paper variant='outlined' className={classes.teachers}>\n                {classItem.teachers.map((teacher, i) => {\n                    return <TeacherInfoItem key={i} teacher={teacher}/>\n                })}\n            </Paper>\n        </Paper>\n    )\n};\n\nStudentTeachersItem.propTypes = {\n    classItem: PropTypes.object.isRequired\n};\n\nexport default StudentTeachersItem;\n","import {style} from \"../../../styles/global\";\n\nconst componentStyle = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: style.contentHeight,\n        width: '100%',\n        padding: style.baseSize\n    },\n    tabs: {\n        backgroundColor: theme.palette.action.tab,\n        fontWeight: 800\n    },\n    center: {\n        justifyContent: 'center'\n    },\n    email: {\n        color: theme.palette.action.warning,\n        fontSize: style.middleSize\n    },\n    content: {\n        marginTop: style.baseSize,\n        display: 'flex',\n        height: '510px',\n        width: '100%',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: style.baseSize\n    }\n});\n\nexport default componentStyle;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {Paper, AppBar, Tabs, Tab, Typography, Link} from \"@material-ui/core\";\nimport Spinner from \"../../common/Spinner/Spinner\";\nimport StudentTeachersItem from \"../StudentTeachersItem/StudentTeachersItem\";\nimport {a11yProps} from \"../../../utilities/functions\";\nimport componentStyle from \"./StudentTeachersListStyle\";\n\nconst useStyles = makeStyles(theme => componentStyle(theme));\n\nconst StudentTeachersList = props => {\n    const {\n        request,\n        user,\n        getClassesName,\n        selectedClass,\n        loadTeachers,\n        clearSelectedClass\n    } = props;\n    const [value, setValue] = useState(0);\n    const [isLoad, setIsLoad] = useState(false);\n    const [isReady, setIsReady] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        if (Object.values(user.students).length && !isLoad) {\n            let studentsId = user.students.map(student => student.id);\n            getClassesName(studentsId);\n            setIsLoad(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user, isLoad]);\n\n    useEffect(() => {\n\n        if (Object.values(user.students).length && !Object.values(selectedClass).length) {\n\n            if (user.students[value].className !== 'none' && !isReady) {\n                loadTeachers(user.students[value].className);\n                setIsReady(true);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user, selectedClass, isReady]);\n\n    useEffect(() => {\n        return () => {\n            clearSelectedClass({});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        loadTeachers(user.students[newValue].className);\n    };\n\n    return (\n        <Paper variant='outlined' className={clsx(classes.root, !user.students.length && classes.center)}>\n            {user.students.length ?\n                <>\n                    <AppBar position='static' className={classes.tabs}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            textColor='primary'\n                        >\n                            {user.students.length && user.students.map((item, i) => {\n                                return <Tab\n                                    disabled={request.geting}\n                                    className={classes.tabs}\n                                    key={item.id}\n                                    label={`${item.firstName} ${item.lastName}`}\n                                    {...a11yProps(i)}/>\n                            })}\n                        </Tabs>\n                    </AppBar>\n                    <Paper elevation={3} className={clsx(classes.content,\n                        request.geting || !Object.values(selectedClass).length ? classes.center : '')}>\n                        {request.geting || !Object.values(selectedClass).length ? <Spinner/> :\n                            <StudentTeachersItem classItem={selectedClass}/>\n                        }\n                    </Paper>\n                </> :\n                <>\n                    <Typography style={{fontSize: '20px'}}>\n                        {`The parent ${user.lastName} ${user.firstName} has no any student assigned.`}\n                    </Typography>\n                    <Typography>Contact the principal:</Typography>\n                    <Link className={classes.email} href={'mailto:principal@gmail.com'}>principal@gmail.com</Link>\n                </>\n            }\n        </Paper>\n    )\n};\n\nStudentTeachersList.propTypes = {\n    request: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    getClassesName: PropTypes.func.isRequired,\n    selectedClass: PropTypes.object.isRequired,\n    loadTeachers: PropTypes.func.isRequired,\n    clearSelectedClass: PropTypes.func.isRequired\n};\n\nexport default StudentTeachersList;\n","import {connect} from 'react-redux';\nimport {getRequest} from \"../../../redux/actions/requestActions\";\nimport {getUser} from \"../../../redux/actions/usersActions\";\nimport {getSelectedClass, setSelectedClass} from \"../../../redux/actions/classActions\";\nimport {getClassNameForStudentByIdRequest, getTeachersByClassNameRequest} from \"../../../redux/thunks\";\nimport StudentTeachersList from \"./StudentTeachersList\";\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    user: getUser(state),\n    selectedClass: getSelectedClass(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getClassesName: studentsId => dispatch(getClassNameForStudentByIdRequest(studentsId)),\n    loadTeachers: name => dispatch(getTeachersByClassNameRequest(name)),\n    clearSelectedClass: classItem => dispatch(setSelectedClass(classItem))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentTeachersList)\n","import React from \"react\";\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\nimport StudentTeachersList from \"../../features/StudentTeachersList/StudentTeachersListContainer\";\n\nconst StudentTeachers = () => (\n    <div>\n        <PageTitle>Student's Teachers</PageTitle>\n        <StudentTeachersList/>\n    </div>\n);\n\nexport default StudentTeachers;\n","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Paper, Typography, Zoom} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {setLogin, setUser, loadParents, loadTeachers} from \"../../../redux/actions/usersActions\";\nimport {resetRequest} from \"../../../redux/actions/requestActions\";\nimport {loadAllClasses, loadClassByTeacher, setSelectedClass} from \"../../../redux/actions/classActions\";\nimport {loadAllStudents} from \"../../../redux/actions/studentActions\";\nimport {setPath} from \"../../../redux/actions/valuesActions\";\nimport {Redirect} from \"react-router\";\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\nimport {style} from \"../../../styles/global\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: style.contentHeight,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    info: {\n        padding: theme.spacing(1),\n        fontSize: style.bigSize,\n        textAlign: 'center',\n        width: '100%'\n    }\n}));\n\nconst Logout = props => {\n    const {\n        setLogin,\n        resetRequest,\n        setUser,\n        loadTeachers,\n        loadParents,\n        loadAllClasses,\n        loadClassByTeacher,\n        loadAllStudents,\n        setSelectedClass,\n        setPath\n    } = props;\n    const [counter, setCounter] = useState(0);\n    const [isShow, setIsShow] = useState(false);\n    const [isExit, setIsExit] = useState(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        const timer = setInterval(\n            () => setCounter(counter => counter + 1), 1000\n        );\n\n        return () => {\n            setLogin(false);\n            resetRequest();\n            setUser({});\n            loadParents([]);\n            loadTeachers([]);\n            loadClassByTeacher([]);\n            loadAllClasses([]);\n            loadAllStudents([]);\n            setSelectedClass({});\n            setPath('/');\n            clearInterval(timer);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n\n        if (counter === 0) setIsShow(true);\n        if (counter === 5) setIsShow(false);\n    }, [counter, isExit]);\n\n\n    return (\n        <>\n            <PageTitle>Logout</PageTitle>\n            <Paper elevation={9} className={classes.root}>\n                <Zoom in={isShow} timeout={500} onExited={() => setIsExit(true)}>\n                    <div>\n                        <Typography className={classes.info} color='secondary'>\n                            Thank you for using our application.\n                        </Typography>\n                        <Typography className={classes.info} color='secondary'>\n                            See you soon.\n                        </Typography>\n                    </div>\n                </Zoom>\n                {isExit && <Redirect to='/'/>}\n            </Paper>\n        </>\n    )\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setLogin: isLogin => dispatch(setLogin(isLogin)),\n    setUser: user => dispatch(setUser(user)),\n    setSelectedClass: classItem => dispatch(setSelectedClass(classItem)),\n    loadTeachers: teachers => dispatch(loadTeachers(teachers)),\n    loadParents: parents => dispatch(loadParents(parents)),\n    loadAllClasses: classes => dispatch(loadAllClasses(classes)),\n    loadClassByTeacher: classes => dispatch(loadClassByTeacher(classes)),\n    loadAllStudents: students => dispatch(loadAllStudents(students)),\n    resetRequest: () => dispatch(resetRequest()),\n    setPath: path => dispatch(setPath(path))\n});\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getLogin, getUser} from \"./redux/actions/usersActions\";\nimport {getIsDark} from \"./redux/actions/valuesActions\";\nimport MainLayout from './components/layouts/MainLayout/MainLayout';\nimport Welcome from './components/pages/Welcome/Welcome';\nimport Login from './components/pages/Login/Login';\nimport Registration from './components/pages/Registration/Reagistration';\nimport PageNotFound from './components/pages/PageNotFound/PageNotFound';\nimport StudentRatings from './components/pages/StudentRatings/StudentRatings';\nimport StudentData from './components/pages/StudentData/StudentData';\nimport Teachers from './components/pages/Teachers/Teachers';\nimport Home from './components/pages/Home/Home';\nimport HomeTeacher from './components/pages/HomeTeacher/HomeTeacher';\nimport ClassDiaries from './components/pages/ClassDiaries/ClassDiaries';\nimport TeacherData from './components/pages/TeacherData/TeacherData';\nimport HomePrincipal from './components/pages/HomePrincipal/HomePrincipal';\nimport Classes from './components/pages/Classes/Classes';\nimport Students from './components/pages/Students/Students';\nimport Parents from './components/pages/Parents/Parents';\nimport StudentTeachers from \"./components/pages/StudentTeachers/StudentTeachers\";\nimport Logout from './components/pages/Logout/Logout';\n\nconst App = props => {\n    const {isLogin, loggedUser, isDark} = props;\n\n    if (isLogin && loggedUser.status === 'parent') {\n        return (\n            <MainLayout isLogin={isLogin} loggedUser={loggedUser} isDark={isDark}>\n                <Switch>\n                    <Route path='/' exact component={Home}/>\n                    <Route path='/grades' exact component={StudentRatings}/>\n                    <Route path='/data' exact component={StudentData}/>\n                    <Route path='/teachers' exact component={StudentTeachers}/>\n                    <Route path='/logout' exact component={Logout}/>\n                    <Route component={PageNotFound}/>\n                </Switch>\n            </MainLayout>\n        )\n    } else if (isLogin && loggedUser.status === 'teacher') {\n        return (\n            <MainLayout isLogin={isLogin} loggedUser={loggedUser} isDark={isDark}>\n                <Switch>\n                    <Route path='/' exact component={HomeTeacher}/>\n                    <Route path='/diaries' exact component={ClassDiaries}/>\n                    <Route path='/data' exact component={TeacherData}/>\n                    <Route path='/logout' exact component={Logout}/>\n                    <Route component={PageNotFound}/>\n                </Switch>\n            </MainLayout>\n        )\n    } else if (isLogin && loggedUser.status === 'principal') {\n        return (\n            <MainLayout isLogin={isLogin} loggedUser={loggedUser} isDark={isDark}>\n                <Switch>\n                    <Route path='/' exact component={HomePrincipal}/>\n                    <Route path='/classes' exact component={Classes}/>\n                    <Route path='/teachers' exact component={Teachers}/>\n                    <Route path='/students' exact component={Students}/>\n                    <Route path='/parents'>\n                        <Parents/>\n                    </Route>\n                    <Route path='/logout' exact component={Logout}/>\n                    <Route component={PageNotFound}/>\n                </Switch>\n            </MainLayout>\n        )\n    } else {\n        return (\n            <MainLayout isLogin={isLogin} isDark={isDark}>\n                <Switch>\n                    <Route path='/' exact component={Welcome}/>\n                    <Route path='/login' exact component={Login}/>\n                    <Route path='/registration' exact component={Registration}/>\n                    <Route component={PageNotFound}/>\n                </Switch>\n            </MainLayout>\n        );\n    }\n};\n\nconst mapStateToProps = state => ({\n    isLogin: getLogin(state),\n    loggedUser: getUser(state),\n    isDark: getIsDark(state)\n});\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/global.scss';\n\nconst Root = () => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n\n"],"sourceRoot":""}